# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "website" ]
  pull_request:
    branches: [ "website" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Flutter action
        # You may pin to the exact commit or the version.
        # uses: subosito/flutter-action@dbf1fa04f4d2e52c33185153d06cdb5443aa189d
        uses: subosito/flutter-action@v2.8.0
        with:
          # The Flutter version to make available on the path
          #flutter-version: # optional, default is any
          # The Flutter build release channel
          channel: master # optional, default is stable
          # Cache the Flutter SDK
          cache: true # optional
          # Identifier for the Flutter SDK cache
          # cache-key: # optional, default is flutter-:os:-:channel:-:version:-:arch:-:hash:
          # Flutter SDK cache path
          # cache-path: # optional, default is ${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:
          # The architecture of Flutter SDK executable (x64 or arm64)
          # architecture: # optional, default is ${{ runner.arch }}        

      - name: checkout prod -> ./prod
        uses: actions/checkout@v3
        with:
          ref: prod
          path: prod
      - name: checkout main -> ./main
        uses: actions/checkout@v3
        with:
          ref: main
          path: main

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        run: flutter test
      - name: Build ./prod
        run: |
          ./prod/bake build
          ls ./prod/build/web/
      - name: Build ./main
        run: |
          ./main/bake build
          ls ./main/build/web/
      - name: Put them together
        run: |
          mkdir -p ./build/web
          cp -R ./prod/build/web ./build/web
          cp -R ./main/build/web ./build/web/main
          ls ./build/web/
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./build/web
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
