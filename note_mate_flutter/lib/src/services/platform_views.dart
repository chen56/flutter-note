// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/services/platform_views.dart';
import 'dart:core';
import 'package:note/mate.dart';
export 'dart:ui' show Offset, Size, TextDirection, VoidCallback;
export 'package:flutter/gestures.dart' show PointerEvent;
export 'message_codec.dart' show MessageCodec;

/// class AndroidPointerProperties
class AndroidPointerProperties$Mate extends AndroidPointerProperties with Mate<AndroidPointerProperties$Mate> {
  /// AndroidPointerProperties AndroidPointerProperties({required int id, required int toolType})
  AndroidPointerProperties$Mate({
    /// param: {required int id}
    required int id,

    /// param: {required int toolType}
    required int toolType,
  }) : super(
          id: id,
          toolType: toolType,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => AndroidPointerProperties$Mate(
        id: p.getValue('id'),
        toolType: p.getValue('toolType'),
      ),
    );
    mateParams.set(name: 'id', init: id);
    mateParams.set(name: 'toolType', init: toolType);
  }
}

/// class AndroidPointerCoords
class AndroidPointerCoords$Mate extends AndroidPointerCoords with Mate<AndroidPointerCoords$Mate> {
  /// AndroidPointerCoords AndroidPointerCoords({required double orientation, required double pressure, required double size, required double toolMajor, required double toolMinor, required double touchMajor, required double touchMinor, required double x, required double y})
  AndroidPointerCoords$Mate({
    /// param: {required double orientation}
    required double orientation,

    /// param: {required double pressure}
    required double pressure,

    /// param: {required double size}
    required double size,

    /// param: {required double toolMajor}
    required double toolMajor,

    /// param: {required double toolMinor}
    required double toolMinor,

    /// param: {required double touchMajor}
    required double touchMajor,

    /// param: {required double touchMinor}
    required double touchMinor,

    /// param: {required double x}
    required double x,

    /// param: {required double y}
    required double y,
  }) : super(
          orientation: orientation,
          pressure: pressure,
          size: size,
          toolMajor: toolMajor,
          toolMinor: toolMinor,
          touchMajor: touchMajor,
          touchMinor: touchMinor,
          x: x,
          y: y,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => AndroidPointerCoords$Mate(
        orientation: p.getValue('orientation'),
        pressure: p.getValue('pressure'),
        size: p.getValue('size'),
        toolMajor: p.getValue('toolMajor'),
        toolMinor: p.getValue('toolMinor'),
        touchMajor: p.getValue('touchMajor'),
        touchMinor: p.getValue('touchMinor'),
        x: p.getValue('x'),
        y: p.getValue('y'),
      ),
    );
    mateParams.set(name: 'orientation', init: orientation);
    mateParams.set(name: 'pressure', init: pressure);
    mateParams.set(name: 'size', init: size);
    mateParams.set(name: 'toolMajor', init: toolMajor);
    mateParams.set(name: 'toolMinor', init: toolMinor);
    mateParams.set(name: 'touchMajor', init: touchMajor);
    mateParams.set(name: 'touchMinor', init: touchMinor);
    mateParams.set(name: 'x', init: x);
    mateParams.set(name: 'y', init: y);
  }
}

/// class AndroidMotionEvent
class AndroidMotionEvent$Mate extends AndroidMotionEvent with Mate<AndroidMotionEvent$Mate> {
  /// AndroidMotionEvent AndroidMotionEvent({required int downTime, required int eventTime, required int action, required int pointerCount, required List<AndroidPointerProperties> pointerProperties, required List<AndroidPointerCoords> pointerCoords, required int metaState, required int buttonState, required double xPrecision, required double yPrecision, required int deviceId, required int edgeFlags, required int source, required int flags, required int motionEventId})
  AndroidMotionEvent$Mate({
    /// param: {required int downTime}
    required int downTime,

    /// param: {required int eventTime}
    required int eventTime,

    /// param: {required int action}
    required int action,

    /// param: {required int pointerCount}
    required int pointerCount,

    /// param: {required List<AndroidPointerProperties> pointerProperties}
    required List<AndroidPointerProperties> pointerProperties,

    /// param: {required List<AndroidPointerCoords> pointerCoords}
    required List<AndroidPointerCoords> pointerCoords,

    /// param: {required int metaState}
    required int metaState,

    /// param: {required int buttonState}
    required int buttonState,

    /// param: {required double xPrecision}
    required double xPrecision,

    /// param: {required double yPrecision}
    required double yPrecision,

    /// param: {required int deviceId}
    required int deviceId,

    /// param: {required int edgeFlags}
    required int edgeFlags,

    /// param: {required int source}
    required int source,

    /// param: {required int flags}
    required int flags,

    /// param: {required int motionEventId}
    required int motionEventId,
  }) : super(
          downTime: downTime,
          eventTime: eventTime,
          action: action,
          pointerCount: pointerCount,
          pointerProperties: pointerProperties,
          pointerCoords: pointerCoords,
          metaState: metaState,
          buttonState: buttonState,
          xPrecision: xPrecision,
          yPrecision: yPrecision,
          deviceId: deviceId,
          edgeFlags: edgeFlags,
          source: source,
          flags: flags,
          motionEventId: motionEventId,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => AndroidMotionEvent$Mate(
        downTime: p.getValue('downTime'),
        eventTime: p.getValue('eventTime'),
        action: p.getValue('action'),
        pointerCount: p.getValue('pointerCount'),
        pointerProperties: p.getValue('pointerProperties'),
        pointerCoords: p.getValue('pointerCoords'),
        metaState: p.getValue('metaState'),
        buttonState: p.getValue('buttonState'),
        xPrecision: p.getValue('xPrecision'),
        yPrecision: p.getValue('yPrecision'),
        deviceId: p.getValue('deviceId'),
        edgeFlags: p.getValue('edgeFlags'),
        source: p.getValue('source'),
        flags: p.getValue('flags'),
        motionEventId: p.getValue('motionEventId'),
      ),
    );
    mateParams.set(name: 'downTime', init: downTime);
    mateParams.set(name: 'eventTime', init: eventTime);
    mateParams.set(name: 'action', init: action);
    mateParams.set(name: 'pointerCount', init: pointerCount);
    mateParams.set(name: 'pointerProperties', init: pointerProperties);
    mateParams.set(name: 'pointerCoords', init: pointerCoords);
    mateParams.set(name: 'metaState', init: metaState);
    mateParams.set(name: 'buttonState', init: buttonState);
    mateParams.set(name: 'xPrecision', init: xPrecision);
    mateParams.set(name: 'yPrecision', init: yPrecision);
    mateParams.set(name: 'deviceId', init: deviceId);
    mateParams.set(name: 'edgeFlags', init: edgeFlags);
    mateParams.set(name: 'source', init: source);
    mateParams.set(name: 'flags', init: flags);
    mateParams.set(name: 'motionEventId', init: motionEventId);
  }
}
