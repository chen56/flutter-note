// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/services/raw_keyboard_linux.dart';
import 'dart:core';
import 'package:note/mate.dart';

/// class RawKeyEventDataLinux extends RawKeyEventData
class RawKeyEventDataLinux$Mate extends RawKeyEventDataLinux with Mate<RawKeyEventDataLinux$Mate> {
  /// RawKeyEventDataLinux RawKeyEventDataLinux({required KeyHelper keyHelper, int unicodeScalarValues = 0, int scanCode = 0, int keyCode = 0, int modifiers = 0, required bool isDown, int? specifiedLogicalKey})
  RawKeyEventDataLinux$Mate({
    /// param: {required KeyHelper keyHelper}
    required KeyHelper keyHelper,

    /// param: {int unicodeScalarValues = 0}
    required int unicodeScalarValues,

    /// param: {int scanCode = 0}
    required int scanCode,

    /// param: {int keyCode = 0}
    required int keyCode,

    /// param: {int modifiers = 0}
    required int modifiers,

    /// param: {required bool isDown}
    required bool isDown,

    /// param: {int? specifiedLogicalKey}
    int? specifiedLogicalKey,
  }) : super(
          keyHelper: keyHelper,
          unicodeScalarValues: unicodeScalarValues,
          scanCode: scanCode,
          keyCode: keyCode,
          modifiers: modifiers,
          isDown: isDown,
          specifiedLogicalKey: specifiedLogicalKey,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => RawKeyEventDataLinux$Mate(
        keyHelper: p.getValue('keyHelper'),
        unicodeScalarValues: p.getValue('unicodeScalarValues'),
        scanCode: p.getValue('scanCode'),
        keyCode: p.getValue('keyCode'),
        modifiers: p.getValue('modifiers'),
        isDown: p.getValue('isDown'),
        specifiedLogicalKey: p.getValue('specifiedLogicalKey'),
      ),
    );
    mateParams.set(name: 'keyHelper', init: keyHelper);
    mateParams.set(name: 'unicodeScalarValues', init: unicodeScalarValues);
    mateParams.set(name: 'scanCode', init: scanCode);
    mateParams.set(name: 'keyCode', init: keyCode);
    mateParams.set(name: 'modifiers', init: modifiers);
    mateParams.set(name: 'isDown', init: isDown);
    mateParams.set(name: 'specifiedLogicalKey', init: specifiedLogicalKey);
  }
}
