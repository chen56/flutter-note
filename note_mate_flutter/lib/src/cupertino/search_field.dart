// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/cupertino/search_field.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/editable_text.dart';
import 'package:flutter/src/foundation/basic_types.dart';
import 'dart:core';
import 'package:flutter/src/painting/text_style.dart';
import 'package:flutter/src/painting/box_decoration.dart';
import 'dart:ui';
import 'package:flutter/src/painting/border_radius.dart';
import 'package:flutter/src/services/text_input.dart';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/icon.dart';
import 'package:flutter/src/cupertino/text_field.dart';
import 'package:flutter/src/widgets/focus_manager.dart';
import 'package:note/mate.dart';
export 'package:flutter/services.dart' show SmartDashesType, SmartQuotesType;

/// class CupertinoSearchTextField extends StatefulWidget
class CupertinoSearchTextField$Mate extends CupertinoSearchTextField with WidgetMate<CupertinoSearchTextField$Mate> {
  /// CupertinoSearchTextField CupertinoSearchTextField({Key? key, TextEditingController? controller, void Function(String)? onChanged, void Function(String)? onSubmitted, TextStyle? style, String? placeholder, TextStyle? placeholderStyle, BoxDecoration? decoration, Color? backgroundColor, BorderRadius? borderRadius, TextInputType? keyboardType = TextInputType.text, EdgeInsetsGeometry padding = const EdgeInsetsDirectional.fromSTEB(5.5, 8, 5.5, 8), Color itemColor = CupertinoColors.secondaryLabel, double itemSize = 20.0, EdgeInsetsGeometry prefixInsets = const EdgeInsetsDirectional.fromSTEB(6, 0, 0, 3), Widget prefixIcon = const Icon(CupertinoIcons.search), EdgeInsetsGeometry suffixInsets = const EdgeInsetsDirectional.fromSTEB(0, 0, 5, 2), Icon suffixIcon = const Icon(CupertinoIcons.xmark_circle_fill), OverlayVisibilityMode suffixMode = OverlayVisibilityMode.editing, void Function()? onSuffixTap, String? restorationId, FocusNode? focusNode, SmartQuotesType? smartQuotesType, SmartDashesType? smartDashesType, bool enableIMEPersonalizedLearning = true, bool autofocus = false, void Function()? onTap, bool autocorrect = true, bool? enabled})
  CupertinoSearchTextField$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {TextEditingController? controller}
    TextEditingController? controller,

    /// param: {void Function(String)? onChanged}
    ValueChanged<String>? onChanged,

    /// param: {void Function(String)? onSubmitted}
    ValueChanged<String>? onSubmitted,

    /// param: {TextStyle? style}
    TextStyle? style,

    /// param: {String? placeholder}
    String? placeholder,

    /// param: {TextStyle? placeholderStyle}
    TextStyle? placeholderStyle,

    /// param: {BoxDecoration? decoration}
    BoxDecoration? decoration,

    /// param: {Color? backgroundColor}
    Color? backgroundColor,

    /// param: {BorderRadius? borderRadius}
    BorderRadius? borderRadius,

    /// param: {TextInputType? keyboardType = TextInputType.text}
    TextInputType? keyboardType,

    /// param: {EdgeInsetsGeometry padding = const EdgeInsetsDirectional.fromSTEB(5.5, 8, 5.5, 8)}
    required EdgeInsetsGeometry padding,

    /// param: {Color itemColor = CupertinoColors.secondaryLabel}
    required Color itemColor,

    /// param: {double itemSize = 20.0}
    required double itemSize,

    /// param: {EdgeInsetsGeometry prefixInsets = const EdgeInsetsDirectional.fromSTEB(6, 0, 0, 3)}
    required EdgeInsetsGeometry prefixInsets,

    /// param: {Widget prefixIcon = const Icon(CupertinoIcons.search)}
    required Widget prefixIcon,

    /// param: {EdgeInsetsGeometry suffixInsets = const EdgeInsetsDirectional.fromSTEB(0, 0, 5, 2)}
    required EdgeInsetsGeometry suffixInsets,

    /// param: {Icon suffixIcon = const Icon(CupertinoIcons.xmark_circle_fill)}
    required Icon suffixIcon,

    /// param: {OverlayVisibilityMode suffixMode = OverlayVisibilityMode.editing}
    required OverlayVisibilityMode suffixMode,

    /// param: {void Function()? onSuffixTap}
    VoidCallback? onSuffixTap,

    /// param: {String? restorationId}
    String? restorationId,

    /// param: {FocusNode? focusNode}
    FocusNode? focusNode,

    /// param: {SmartQuotesType? smartQuotesType}
    SmartQuotesType? smartQuotesType,

    /// param: {SmartDashesType? smartDashesType}
    SmartDashesType? smartDashesType,

    /// param: {bool enableIMEPersonalizedLearning = true}
    required bool enableIMEPersonalizedLearning,

    /// param: {bool autofocus = false}
    required bool autofocus,

    /// param: {void Function()? onTap}
    VoidCallback? onTap,

    /// param: {bool autocorrect = true}
    required bool autocorrect,

    /// param: {bool? enabled}
    bool? enabled,
  }) : super(
          key: key,
          controller: controller,
          onChanged: onChanged,
          onSubmitted: onSubmitted,
          style: style,
          placeholder: placeholder,
          placeholderStyle: placeholderStyle,
          decoration: decoration,
          backgroundColor: backgroundColor,
          borderRadius: borderRadius,
          keyboardType: keyboardType,
          padding: padding,
          itemColor: itemColor,
          itemSize: itemSize,
          prefixInsets: prefixInsets,
          prefixIcon: prefixIcon,
          suffixInsets: suffixInsets,
          suffixIcon: suffixIcon,
          suffixMode: suffixMode,
          onSuffixTap: onSuffixTap,
          restorationId: restorationId,
          focusNode: focusNode,
          smartQuotesType: smartQuotesType,
          smartDashesType: smartDashesType,
          enableIMEPersonalizedLearning: enableIMEPersonalizedLearning,
          autofocus: autofocus,
          onTap: onTap,
          autocorrect: autocorrect,
          enabled: enabled,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => CupertinoSearchTextField$Mate(
        key: p.getValue('key'),
        controller: p.getValue('controller'),
        onChanged: p.getValue('onChanged'),
        onSubmitted: p.getValue('onSubmitted'),
        style: p.getValue('style'),
        placeholder: p.getValue('placeholder'),
        placeholderStyle: p.getValue('placeholderStyle'),
        decoration: p.getValue('decoration'),
        backgroundColor: p.getValue('backgroundColor'),
        borderRadius: p.getValue('borderRadius'),
        keyboardType: p.getValue('keyboardType'),
        padding: p.getValue('padding'),
        itemColor: p.getValue('itemColor'),
        itemSize: p.getValue('itemSize'),
        prefixInsets: p.getValue('prefixInsets'),
        prefixIcon: p.getValue('prefixIcon'),
        suffixInsets: p.getValue('suffixInsets'),
        suffixIcon: p.getValue('suffixIcon'),
        suffixMode: p.getValue('suffixMode'),
        onSuffixTap: p.getValue('onSuffixTap'),
        restorationId: p.getValue('restorationId'),
        focusNode: p.getValue('focusNode'),
        smartQuotesType: p.getValue('smartQuotesType'),
        smartDashesType: p.getValue('smartDashesType'),
        enableIMEPersonalizedLearning: p.getValue('enableIMEPersonalizedLearning'),
        autofocus: p.getValue('autofocus'),
        onTap: p.getValue('onTap'),
        autocorrect: p.getValue('autocorrect'),
        enabled: p.getValue('enabled'),
      ),
    );
    mateParams.set(name: 'key', init: key);
    mateParams.set(name: 'controller', init: controller);
    mateParams.set(name: 'onChanged', init: onChanged);
    mateParams.set(name: 'onSubmitted', init: onSubmitted);
    mateParams.set(name: 'style', init: style);
    mateParams.set(name: 'placeholder', init: placeholder);
    mateParams.set(name: 'placeholderStyle', init: placeholderStyle);
    mateParams.set(name: 'decoration', init: decoration);
    mateParams.set(name: 'backgroundColor', init: backgroundColor);
    mateParams.set(name: 'borderRadius', init: borderRadius);
    mateParams.set(name: 'keyboardType', init: keyboardType);
    mateParams.set(name: 'padding', init: padding);
    mateParams.set(name: 'itemColor', init: itemColor);
    mateParams.set(name: 'itemSize', init: itemSize);
    mateParams.set(name: 'prefixInsets', init: prefixInsets);
    mateParams.set(name: 'prefixIcon', init: prefixIcon);
    mateParams.set(name: 'suffixInsets', init: suffixInsets);
    mateParams.set(name: 'suffixIcon', init: suffixIcon);
    mateParams.set(name: 'suffixMode', init: suffixMode);
    mateParams.set(name: 'onSuffixTap', init: onSuffixTap);
    mateParams.set(name: 'restorationId', init: restorationId);
    mateParams.set(name: 'focusNode', init: focusNode);
    mateParams.set(name: 'smartQuotesType', init: smartQuotesType);
    mateParams.set(name: 'smartDashesType', init: smartDashesType);
    mateParams.set(name: 'enableIMEPersonalizedLearning', init: enableIMEPersonalizedLearning);
    mateParams.set(name: 'autofocus', init: autofocus);
    mateParams.set(name: 'onTap', init: onTap);
    mateParams.set(name: 'autocorrect', init: autocorrect);
    mateParams.set(name: 'enabled', init: enabled);
  }
}
