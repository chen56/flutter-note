// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/cupertino/switch.dart';
import 'package:flutter/src/foundation/key.dart';
import 'dart:core';
import 'package:flutter/src/foundation/basic_types.dart';
import 'dart:ui';
import 'package:flutter/src/gestures/recognizer.dart';
import 'package:note/mate.dart';

/// class CupertinoSwitch extends StatefulWidget
class CupertinoSwitch$Mate extends CupertinoSwitch with WidgetMate<CupertinoSwitch$Mate> {
  /// CupertinoSwitch CupertinoSwitch({Key? key, required bool value, required void Function(bool)? onChanged, Color? activeColor, Color? trackColor, Color? thumbColor, bool? applyTheme, Color? focusColor, DragStartBehavior dragStartBehavior = DragStartBehavior.start})
  CupertinoSwitch$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {required bool value}
    required bool value,

    /// param: {required void Function(bool)? onChanged}
    required ValueChanged<bool>? onChanged,

    /// param: {Color? activeColor}
    Color? activeColor,

    /// param: {Color? trackColor}
    Color? trackColor,

    /// param: {Color? thumbColor}
    Color? thumbColor,

    /// param: {bool? applyTheme}
    bool? applyTheme,

    /// param: {Color? focusColor}
    Color? focusColor,

    /// param: {DragStartBehavior dragStartBehavior = DragStartBehavior.start}
    required DragStartBehavior dragStartBehavior,
  }) : super(
          key: key,
          value: value,
          onChanged: onChanged,
          activeColor: activeColor,
          trackColor: trackColor,
          thumbColor: thumbColor,
          applyTheme: applyTheme,
          focusColor: focusColor,
          dragStartBehavior: dragStartBehavior,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => CupertinoSwitch$Mate(
        key: p.getValue('key'),
        value: p.getValue('value'),
        onChanged: p.getValue('onChanged'),
        activeColor: p.getValue('activeColor'),
        trackColor: p.getValue('trackColor'),
        thumbColor: p.getValue('thumbColor'),
        applyTheme: p.getValue('applyTheme'),
        focusColor: p.getValue('focusColor'),
        dragStartBehavior: p.getValue('dragStartBehavior'),
      ),
    );
    mateParams.set(name: 'key', init: key);
    mateParams.set(name: 'value', init: value);
    mateParams.set(name: 'onChanged', init: onChanged);
    mateParams.set(name: 'activeColor', init: activeColor);
    mateParams.set(name: 'trackColor', init: trackColor);
    mateParams.set(name: 'thumbColor', init: thumbColor);
    mateParams.set(name: 'applyTheme', init: applyTheme);
    mateParams.set(name: 'focusColor', init: focusColor);
    mateParams.set(name: 'dragStartBehavior', init: dragStartBehavior);
  }
}
