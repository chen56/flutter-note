// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/cupertino/text_selection_toolbar_button.dart';
import 'package:flutter/src/foundation/key.dart';
import 'dart:ui';
import 'package:flutter/src/widgets/framework.dart';
import 'package:note/mate.dart';
import 'dart:core';
import 'package:flutter/src/widgets/context_menu_button_item.dart';

/// class CupertinoTextSelectionToolbarButton extends StatelessWidget
class CupertinoTextSelectionToolbarButton$Mate extends CupertinoTextSelectionToolbarButton
    with WidgetMate<CupertinoTextSelectionToolbarButton$Mate> {
  /// CupertinoTextSelectionToolbarButton CupertinoTextSelectionToolbarButton({Key? key, void Function()? onPressed, required Widget child})
  CupertinoTextSelectionToolbarButton$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {void Function()? onPressed}
    VoidCallback? onPressed,

    /// param: {required Widget child}
    required Widget child,
  }) : super(
          key: key,
          onPressed: onPressed,
          child: child,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => CupertinoTextSelectionToolbarButton$Mate(
        key: p.getValue('key'),
        onPressed: p.getValue('onPressed'),
        child: p.getValue('child'),
      ),
    );
    mateParams.set(name: 'key', init: key);
    mateParams.set(name: 'onPressed', init: onPressed);
    mateParams.set(name: 'child', init: child);
  }

  /// CupertinoTextSelectionToolbarButton CupertinoTextSelectionToolbarButton.text({Key? key, void Function()? onPressed, required String? text})
  CupertinoTextSelectionToolbarButton$Mate.text({
    /// param: {Key? key}
    Key? key,

    /// param: {void Function()? onPressed}
    VoidCallback? onPressed,

    /// param: {required String? text}
    required String? text,
  }) : super.text(
          key: key,
          onPressed: onPressed,
          text: text,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => CupertinoTextSelectionToolbarButton$Mate.text(
        key: p.getValue('key'),
        onPressed: p.getValue('onPressed'),
        text: p.getValue('text'),
      ),
    );
    mateParams.set(name: 'key', init: key);
    mateParams.set(name: 'onPressed', init: onPressed);
    mateParams.set(name: 'text', init: text);
  }

  /// CupertinoTextSelectionToolbarButton CupertinoTextSelectionToolbarButton.buttonItem({Key? key, required ContextMenuButtonItem buttonItem})
  CupertinoTextSelectionToolbarButton$Mate.buttonItem({
    /// param: {Key? key}
    Key? key,

    /// param: {required ContextMenuButtonItem buttonItem}
    required ContextMenuButtonItem buttonItem,
  }) : super.buttonItem(
          key: key,
          buttonItem: buttonItem,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => CupertinoTextSelectionToolbarButton$Mate.buttonItem(
        key: p.getValue('key'),
        buttonItem: p.getValue('buttonItem'),
      ),
    );
    mateParams.set(name: 'key', init: key);
    mateParams.set(name: 'buttonItem', init: buttonItem);
  }
}
