// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-11 13:17:25.440072

import 'package:flutter/src/cupertino/nav_bar.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'dart:core';
import 'package:flutter/src/painting/box_border.dart';
import 'dart:ui';
import 'package:flutter/src/painting/edge_insets.dart';

/// class CupertinoNavigationBar extends StatefulWidget implements ObstructingPreferredSizeWidget
class CupertinoNavigationBar$Mate extends CupertinoNavigationBar {
  /// CupertinoNavigationBar CupertinoNavigationBar({Key? key, Widget? leading, bool automaticallyImplyLeading = true, bool automaticallyImplyMiddle = true, String? previousPageTitle, Widget? middle, Widget? trailing, Border? border = _kDefaultNavBarBorder, Color? backgroundColor, Brightness? brightness, EdgeInsetsDirectional? padding, bool transitionBetweenRoutes = true, Object heroTag = _defaultHeroTag})
  CupertinoNavigationBar$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {Widget? leading}
    Widget? leading,

    /// param: {bool automaticallyImplyLeading = true}
    required bool automaticallyImplyLeading,

    /// param: {bool automaticallyImplyMiddle = true}
    required bool automaticallyImplyMiddle,

    /// param: {String? previousPageTitle}
    String? previousPageTitle,

    /// param: {Widget? middle}
    Widget? middle,

    /// param: {Widget? trailing}
    Widget? trailing,

    /// param: {Border? border = _kDefaultNavBarBorder}
    Border? border,

    /// param: {Color? backgroundColor}
    Color? backgroundColor,

    /// param: {Brightness? brightness}
    Brightness? brightness,

    /// param: {EdgeInsetsDirectional? padding}
    EdgeInsetsDirectional? padding,

    /// param: {bool transitionBetweenRoutes = true}
    required bool transitionBetweenRoutes,

    /// param: {Object heroTag = _defaultHeroTag}
    required Object heroTag,
  }) : super(
          key: key,
          leading: leading,
          automaticallyImplyLeading: automaticallyImplyLeading,
          automaticallyImplyMiddle: automaticallyImplyMiddle,
          previousPageTitle: previousPageTitle,
          middle: middle,
          trailing: trailing,
          border: border,
          backgroundColor: backgroundColor,
          brightness: brightness,
          padding: padding,
          transitionBetweenRoutes: transitionBetweenRoutes,
          heroTag: heroTag,
        ) {}
}

/// class CupertinoSliverNavigationBar extends StatefulWidget
class CupertinoSliverNavigationBar$Mate extends CupertinoSliverNavigationBar {
  /// CupertinoSliverNavigationBar CupertinoSliverNavigationBar({Key? key, Widget? largeTitle, Widget? leading, bool automaticallyImplyLeading = true, bool automaticallyImplyTitle = true, bool alwaysShowMiddle = true, String? previousPageTitle, Widget? middle, Widget? trailing, Border? border = _kDefaultNavBarBorder, Color? backgroundColor, Brightness? brightness, EdgeInsetsDirectional? padding, bool transitionBetweenRoutes = true, Object heroTag = _defaultHeroTag, bool stretch = false})
  CupertinoSliverNavigationBar$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {Widget? largeTitle}
    Widget? largeTitle,

    /// param: {Widget? leading}
    Widget? leading,

    /// param: {bool automaticallyImplyLeading = true}
    required bool automaticallyImplyLeading,

    /// param: {bool automaticallyImplyTitle = true}
    required bool automaticallyImplyTitle,

    /// param: {bool alwaysShowMiddle = true}
    required bool alwaysShowMiddle,

    /// param: {String? previousPageTitle}
    String? previousPageTitle,

    /// param: {Widget? middle}
    Widget? middle,

    /// param: {Widget? trailing}
    Widget? trailing,

    /// param: {Border? border = _kDefaultNavBarBorder}
    Border? border,

    /// param: {Color? backgroundColor}
    Color? backgroundColor,

    /// param: {Brightness? brightness}
    Brightness? brightness,

    /// param: {EdgeInsetsDirectional? padding}
    EdgeInsetsDirectional? padding,

    /// param: {bool transitionBetweenRoutes = true}
    required bool transitionBetweenRoutes,

    /// param: {Object heroTag = _defaultHeroTag}
    required Object heroTag,

    /// param: {bool stretch = false}
    required bool stretch,
  }) : super(
          key: key,
          largeTitle: largeTitle,
          leading: leading,
          automaticallyImplyLeading: automaticallyImplyLeading,
          automaticallyImplyTitle: automaticallyImplyTitle,
          alwaysShowMiddle: alwaysShowMiddle,
          previousPageTitle: previousPageTitle,
          middle: middle,
          trailing: trailing,
          border: border,
          backgroundColor: backgroundColor,
          brightness: brightness,
          padding: padding,
          transitionBetweenRoutes: transitionBetweenRoutes,
          heroTag: heroTag,
          stretch: stretch,
        ) {}
}

/// class CupertinoNavigationBarBackButton extends StatelessWidget
class CupertinoNavigationBarBackButton$Mate extends CupertinoNavigationBarBackButton {
  /// CupertinoNavigationBarBackButton CupertinoNavigationBarBackButton({Key? key, Color? color, String? previousPageTitle, void Function()? onPressed})
  CupertinoNavigationBarBackButton$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {Color? color}
    Color? color,

    /// param: {String? previousPageTitle}
    String? previousPageTitle,

    /// param: {void Function()? onPressed}
    VoidCallback? onPressed,
  }) : super(
          key: key,
          color: color,
          previousPageTitle: previousPageTitle,
          onPressed: onPressed,
        ) {}
}
