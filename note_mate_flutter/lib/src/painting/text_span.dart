// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/painting/text_span.dart';
import 'dart:core';
import 'package:flutter/src/painting/inline_span.dart';
import 'package:flutter/src/painting/text_style.dart';
import 'package:flutter/src/gestures/recognizer.dart';
import 'package:flutter/src/services/mouse_cursor.dart';
import 'package:flutter/src/services/mouse_tracking.dart';
import 'dart:ui';
import 'package:note/mate.dart';

/// class TextSpan extends InlineSpan implements HitTestTarget, MouseTrackerAnnotation
class TextSpan$Mate extends TextSpan with Mate<TextSpan$Mate> {
  /// TextSpan TextSpan({String? text, List<InlineSpan>? children, TextStyle? style, GestureRecognizer? recognizer, MouseCursor? mouseCursor, void Function(PointerEnterEvent)? onEnter, void Function(PointerExitEvent)? onExit, String? semanticsLabel, Locale? locale, bool? spellOut})
  TextSpan$Mate({
    /// param: {String? text}
    String? text,

    /// param: {List<InlineSpan>? children}
    List<InlineSpan>? children,

    /// param: {TextStyle? style}
    TextStyle? style,

    /// param: {GestureRecognizer? recognizer}
    GestureRecognizer? recognizer,

    /// param: {MouseCursor? mouseCursor}
    MouseCursor? mouseCursor,

    /// param: {void Function(PointerEnterEvent)? onEnter}
    PointerEnterEventListener? onEnter,

    /// param: {void Function(PointerExitEvent)? onExit}
    PointerExitEventListener? onExit,

    /// param: {String? semanticsLabel}
    String? semanticsLabel,

    /// param: {Locale? locale}
    Locale? locale,

    /// param: {bool? spellOut}
    bool? spellOut,
  }) : super(
          text: text,
          children: children,
          style: style,
          recognizer: recognizer,
          mouseCursor: mouseCursor,
          onEnter: onEnter,
          onExit: onExit,
          semanticsLabel: semanticsLabel,
          locale: locale,
          spellOut: spellOut,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => TextSpan$Mate(
        text: p.getValue('text'),
        children: p.getValue('children'),
        style: p.getValue('style'),
        recognizer: p.getValue('recognizer'),
        mouseCursor: p.getValue('mouseCursor'),
        onEnter: p.getValue('onEnter'),
        onExit: p.getValue('onExit'),
        semanticsLabel: p.getValue('semanticsLabel'),
        locale: p.getValue('locale'),
        spellOut: p.getValue('spellOut'),
      ),
    );
    mateParams.set(name: 'text', init: text);
    mateParams.set(name: 'children', init: children);
    mateParams.set(name: 'style', init: style);
    mateParams.set(name: 'recognizer', init: recognizer);
    mateParams.set(name: 'mouseCursor', init: mouseCursor);
    mateParams.set(name: 'onEnter', init: onEnter);
    mateParams.set(name: 'onExit', init: onExit);
    mateParams.set(name: 'semanticsLabel', init: semanticsLabel);
    mateParams.set(name: 'locale', init: locale);
    mateParams.set(name: 'spellOut', init: spellOut);
  }
}
