// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/painting/text_painter.dart';
import 'dart:ui';
import 'dart:core';
import 'package:note/mate.dart';
import 'package:flutter/src/painting/inline_span.dart';
import 'package:flutter/src/painting/strut_style.dart';

/// class PlaceholderDimensions
class PlaceholderDimensions$Mate extends PlaceholderDimensions with Mate<PlaceholderDimensions$Mate> {
  /// PlaceholderDimensions PlaceholderDimensions({required Size size, required PlaceholderAlignment alignment, TextBaseline? baseline, double? baselineOffset})
  PlaceholderDimensions$Mate({
    /// param: {required Size size}
    required Size size,

    /// param: {required PlaceholderAlignment alignment}
    required PlaceholderAlignment alignment,

    /// param: {TextBaseline? baseline}
    TextBaseline? baseline,

    /// param: {double? baselineOffset}
    double? baselineOffset,
  }) : super(
          size: size,
          alignment: alignment,
          baseline: baseline,
          baselineOffset: baselineOffset,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => PlaceholderDimensions$Mate(
        size: p.getValue('size'),
        alignment: p.getValue('alignment'),
        baseline: p.getValue('baseline'),
        baselineOffset: p.getValue('baselineOffset'),
      ),
    );
    mateParams.set(name: 'size', init: size);
    mateParams.set(name: 'alignment', init: alignment);
    mateParams.set(name: 'baseline', init: baseline);
    mateParams.set(name: 'baselineOffset', init: baselineOffset);
  }
}

/// class TextPainter
class TextPainter$Mate extends TextPainter with Mate<TextPainter$Mate> {
  /// TextPainter TextPainter({InlineSpan? text, TextAlign textAlign = TextAlign.start, TextDirection? textDirection, double textScaleFactor = 1.0, int? maxLines, String? ellipsis, Locale? locale, StrutStyle? strutStyle, TextWidthBasis textWidthBasis = TextWidthBasis.parent, TextHeightBehavior? textHeightBehavior})
  TextPainter$Mate({
    /// param: {InlineSpan? text}
    InlineSpan? text,

    /// param: {TextAlign textAlign = TextAlign.start}
    required TextAlign textAlign,

    /// param: {TextDirection? textDirection}
    TextDirection? textDirection,

    /// param: {double textScaleFactor = 1.0}
    required double textScaleFactor,

    /// param: {int? maxLines}
    int? maxLines,

    /// param: {String? ellipsis}
    String? ellipsis,

    /// param: {Locale? locale}
    Locale? locale,

    /// param: {StrutStyle? strutStyle}
    StrutStyle? strutStyle,

    /// param: {TextWidthBasis textWidthBasis = TextWidthBasis.parent}
    required TextWidthBasis textWidthBasis,

    /// param: {TextHeightBehavior? textHeightBehavior}
    TextHeightBehavior? textHeightBehavior,
  }) : super(
          text: text,
          textAlign: textAlign,
          textDirection: textDirection,
          textScaleFactor: textScaleFactor,
          maxLines: maxLines,
          ellipsis: ellipsis,
          locale: locale,
          strutStyle: strutStyle,
          textWidthBasis: textWidthBasis,
          textHeightBehavior: textHeightBehavior,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => TextPainter$Mate(
        text: p.getValue('text'),
        textAlign: p.getValue('textAlign'),
        textDirection: p.getValue('textDirection'),
        textScaleFactor: p.getValue('textScaleFactor'),
        maxLines: p.getValue('maxLines'),
        ellipsis: p.getValue('ellipsis'),
        locale: p.getValue('locale'),
        strutStyle: p.getValue('strutStyle'),
        textWidthBasis: p.getValue('textWidthBasis'),
        textHeightBehavior: p.getValue('textHeightBehavior'),
      ),
    );
    mateParams.set(name: 'text', init: text);
    mateParams.set(name: 'textAlign', init: textAlign);
    mateParams.set(name: 'textDirection', init: textDirection);
    mateParams.set(name: 'textScaleFactor', init: textScaleFactor);
    mateParams.set(name: 'maxLines', init: maxLines);
    mateParams.set(name: 'ellipsis', init: ellipsis);
    mateParams.set(name: 'locale', init: locale);
    mateParams.set(name: 'strutStyle', init: strutStyle);
    mateParams.set(name: 'textWidthBasis', init: textWidthBasis);
    mateParams.set(name: 'textHeightBehavior', init: textHeightBehavior);
  }
}
