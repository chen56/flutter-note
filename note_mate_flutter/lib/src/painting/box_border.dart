// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/painting/box_border.dart';
import 'package:flutter/src/painting/borders.dart';
import 'package:note/mate.dart';

/// class Border extends BoxBorder
class Border$Mate extends Border with Mate<Border$Mate> {
  /// Border Border({BorderSide top = BorderSide.none, BorderSide right = BorderSide.none, BorderSide bottom = BorderSide.none, BorderSide left = BorderSide.none})
  Border$Mate({
    /// optionalParameters: {BorderSide top = BorderSide.none} , hasDefaultValue:true, defaultValueCode:BorderSide.none
    required BorderSide top,

    /// optionalParameters: {BorderSide right = BorderSide.none} , hasDefaultValue:true, defaultValueCode:BorderSide.none
    required BorderSide right,

    /// optionalParameters: {BorderSide bottom = BorderSide.none} , hasDefaultValue:true, defaultValueCode:BorderSide.none
    required BorderSide bottom,

    /// optionalParameters: {BorderSide left = BorderSide.none} , hasDefaultValue:true, defaultValueCode:BorderSide.none
    required BorderSide left,
  }) : super(
          top: top,
          right: right,
          bottom: bottom,
          left: left,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => Border$Mate(
        top: p.getValue('top'),
        right: p.getValue('right'),
        bottom: p.getValue('bottom'),
        left: p.getValue('left'),
      ),
    );
    mateParams.set(name: 'top', init: top);
    mateParams.set(name: 'right', init: right);
    mateParams.set(name: 'bottom', init: bottom);
    mateParams.set(name: 'left', init: left);
  }

  /// Border Border.fromBorderSide(BorderSide side)
  Border$Mate.fromBorderSide(

      /// requiredParameters: BorderSide side
      BorderSide side)
      : super.fromBorderSide(side) {
    mateParams = Params(
      init: this,
      builder: (p) => Border$Mate.fromBorderSide(p.getValue('side')),
    );
    mateParams.set(name: 'side', init: side);
  }

  /// Border Border.symmetric({BorderSide vertical = BorderSide.none, BorderSide horizontal = BorderSide.none})
  Border$Mate.symmetric({
    /// optionalParameters: {BorderSide vertical = BorderSide.none} , hasDefaultValue:true, defaultValueCode:BorderSide.none
    required BorderSide vertical,

    /// optionalParameters: {BorderSide horizontal = BorderSide.none} , hasDefaultValue:true, defaultValueCode:BorderSide.none
    required BorderSide horizontal,
  }) : super.symmetric(
          vertical: vertical,
          horizontal: horizontal,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => Border$Mate.symmetric(
        vertical: p.getValue('vertical'),
        horizontal: p.getValue('horizontal'),
      ),
    );
    mateParams.set(name: 'vertical', init: vertical);
    mateParams.set(name: 'horizontal', init: horizontal);
  }
}

/// class BorderDirectional extends BoxBorder
class BorderDirectional$Mate extends BorderDirectional with Mate<BorderDirectional$Mate> {
  /// BorderDirectional BorderDirectional({BorderSide top = BorderSide.none, BorderSide start = BorderSide.none, BorderSide end = BorderSide.none, BorderSide bottom = BorderSide.none})
  BorderDirectional$Mate({
    /// optionalParameters: {BorderSide top = BorderSide.none} , hasDefaultValue:true, defaultValueCode:BorderSide.none
    required BorderSide top,

    /// optionalParameters: {BorderSide start = BorderSide.none} , hasDefaultValue:true, defaultValueCode:BorderSide.none
    required BorderSide start,

    /// optionalParameters: {BorderSide end = BorderSide.none} , hasDefaultValue:true, defaultValueCode:BorderSide.none
    required BorderSide end,

    /// optionalParameters: {BorderSide bottom = BorderSide.none} , hasDefaultValue:true, defaultValueCode:BorderSide.none
    required BorderSide bottom,
  }) : super(
          top: top,
          start: start,
          end: end,
          bottom: bottom,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => BorderDirectional$Mate(
        top: p.getValue('top'),
        start: p.getValue('start'),
        end: p.getValue('end'),
        bottom: p.getValue('bottom'),
      ),
    );
    mateParams.set(name: 'top', init: top);
    mateParams.set(name: 'start', init: start);
    mateParams.set(name: 'end', init: end);
    mateParams.set(name: 'bottom', init: bottom);
  }
}
