// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/painting/matrix_utils.dart';
import 'dart:core';
import 'package:vector_math/vector_math_64.dart';
import 'package:flutter/src/foundation/diagnostics.dart';
import 'package:note/mate.dart';

/// class TransformProperty extends DiagnosticsProperty<Matrix4>
class TransformProperty$Mate extends TransformProperty with Mate<TransformProperty$Mate> {
  /// TransformProperty TransformProperty(String name, Matrix4? value, {bool showName = true, Object? defaultValue = kNoDefaultValue, DiagnosticLevel level = DiagnosticLevel.info})
  TransformProperty$Mate(
    /// param: String name
    String name,

    /// param: Matrix4? value
    Matrix4? value, {
    /// param: {bool showName = true}
    required bool showName,

    /// param: {Object? defaultValue = kNoDefaultValue}
    Object? defaultValue,

    /// param: {DiagnosticLevel level = DiagnosticLevel.info}
    required DiagnosticLevel level,
  }) : super(
          name,
          value,
          showName: showName,
          defaultValue: defaultValue,
          level: level,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => TransformProperty$Mate(
        p.getValue('name'),
        p.getValue('value'),
        showName: p.getValue('showName'),
        defaultValue: p.getValue('defaultValue'),
        level: p.getValue('level'),
      ),
    );
    mateParams.set(name: 'name', init: name);
    mateParams.set(name: 'value', init: value);
    mateParams.set(name: 'showName', init: showName);
    mateParams.set(name: 'defaultValue', init: defaultValue);
    mateParams.set(name: 'level', init: level);
  }
}
