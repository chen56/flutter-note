// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-11 13:17:25.972171

import 'package:flutter/src/painting/image_provider.dart';
import 'package:flutter/src/services/asset_bundle.dart';
import 'dart:core';
import 'dart:ui';
import 'package:flutter/src/foundation/platform.dart';
import 'dart:io';
import 'dart:typed_data';

/// class ImageConfiguration
class ImageConfiguration$Mate extends ImageConfiguration {
  /// ImageConfiguration ImageConfiguration({AssetBundle? bundle, double? devicePixelRatio, Locale? locale, TextDirection? textDirection, Size? size, TargetPlatform? platform})
  ImageConfiguration$Mate({
    /// param: {AssetBundle? bundle}
    AssetBundle? bundle,

    /// param: {double? devicePixelRatio}
    double? devicePixelRatio,

    /// param: {Locale? locale}
    Locale? locale,

    /// param: {TextDirection? textDirection}
    TextDirection? textDirection,

    /// param: {Size? size}
    Size? size,

    /// param: {TargetPlatform? platform}
    TargetPlatform? platform,
  }) : super(
          bundle: bundle,
          devicePixelRatio: devicePixelRatio,
          locale: locale,
          textDirection: textDirection,
          size: size,
          platform: platform,
        ) {}
}

/// class AssetBundleImageKey
class AssetBundleImageKey$Mate extends AssetBundleImageKey {
  /// AssetBundleImageKey AssetBundleImageKey({required AssetBundle bundle, required String name, required double scale})
  AssetBundleImageKey$Mate({
    /// param: {required AssetBundle bundle}
    required AssetBundle bundle,

    /// param: {required String name}
    required String name,

    /// param: {required double scale}
    required double scale,
  }) : super(
          bundle: bundle,
          name: name,
          scale: scale,
        ) {}
}

/// class ResizeImage extends ImageProvider<ResizeImageKey>
class ResizeImage$Mate extends ResizeImage {
  /// ResizeImage ResizeImage(ImageProvider<Object> imageProvider, {int? width, int? height, bool allowUpscaling = false})
  ResizeImage$Mate(
    /// param: ImageProvider<Object> imageProvider
    ImageProvider<Object> imageProvider, {
    /// param: {int? width}
    int? width,

    /// param: {int? height}
    int? height,

    /// param: {bool allowUpscaling = false}
    required bool allowUpscaling,
  }) : super(
          imageProvider,
          width: width,
          height: height,
          allowUpscaling: allowUpscaling,
        ) {}
}

/// class FileImage extends ImageProvider<FileImage>
class FileImage$Mate extends FileImage {
  /// FileImage FileImage(File file, {double scale = 1.0})
  FileImage$Mate(
    /// param: File file
    File file, {
    /// param: {double scale = 1.0}
    required double scale,
  }) : super(
          file,
          scale: scale,
        ) {}
}

/// class MemoryImage extends ImageProvider<MemoryImage>
class MemoryImage$Mate extends MemoryImage {
  /// MemoryImage MemoryImage(Uint8List bytes, {double scale = 1.0})
  MemoryImage$Mate(
    /// param: Uint8List bytes
    Uint8List bytes, {
    /// param: {double scale = 1.0}
    required double scale,
  }) : super(
          bytes,
          scale: scale,
        ) {}
}

/// class ExactAssetImage extends AssetBundleImageProvider
class ExactAssetImage$Mate extends ExactAssetImage {
  /// ExactAssetImage ExactAssetImage(String assetName, {double scale = 1.0, AssetBundle? bundle, String? package})
  ExactAssetImage$Mate(
    /// param: String assetName
    String assetName, {
    /// param: {double scale = 1.0}
    required double scale,

    /// param: {AssetBundle? bundle}
    AssetBundle? bundle,

    /// param: {String? package}
    String? package,
  }) : super(
          assetName,
          scale: scale,
          bundle: bundle,
          package: package,
        ) {}
}

/// class NetworkImageLoadException implements Exception
class NetworkImageLoadException$Mate extends NetworkImageLoadException {
  /// NetworkImageLoadException NetworkImageLoadException({required int statusCode, required Uri uri})
  NetworkImageLoadException$Mate({
    /// param: {required int statusCode}
    required int statusCode,

    /// param: {required Uri uri}
    required Uri uri,
  }) : super(
          statusCode: statusCode,
          uri: uri,
        ) {}
}
