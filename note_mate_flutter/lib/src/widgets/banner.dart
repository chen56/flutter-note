// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/widgets/banner.dart';
import 'dart:core';
import 'dart:ui';
import 'package:flutter/src/painting/text_style.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';

/// class BannerPainter extends CustomPainter
class BannerPainter$Mate extends BannerPainter with Mate<BannerPainter$Mate> {
  /// BannerPainter BannerPainter({required String message, required TextDirection textDirection, required BannerLocation location, required TextDirection layoutDirection, Color color = _kColor, TextStyle textStyle = _kTextStyle})
  BannerPainter$Mate({
    /// param: {required String message}
    required String message,

    /// param: {required TextDirection textDirection}
    required TextDirection textDirection,

    /// param: {required BannerLocation location}
    required BannerLocation location,

    /// param: {required TextDirection layoutDirection}
    required TextDirection layoutDirection,

    /// param: {Color color = _kColor}
    required Color color,

    /// param: {TextStyle textStyle = _kTextStyle}
    required TextStyle textStyle,
  }) : super(
          message: message,
          textDirection: textDirection,
          location: location,
          layoutDirection: layoutDirection,
          color: color,
          textStyle: textStyle,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => BannerPainter$Mate(
        message: p.getValue('message'),
        textDirection: p.getValue('textDirection'),
        location: p.getValue('location'),
        layoutDirection: p.getValue('layoutDirection'),
        color: p.getValue('color'),
        textStyle: p.getValue('textStyle'),
      ),
    );
    mateParams.set(name: 'message', init: message);
    mateParams.set(name: 'textDirection', init: textDirection);
    mateParams.set(name: 'location', init: location);
    mateParams.set(name: 'layoutDirection', init: layoutDirection);
    mateParams.set(name: 'color', init: color);
    mateParams.set(name: 'textStyle', init: textStyle);
  }
}

/// class Banner extends StatelessWidget
class Banner$Mate extends Banner with WidgetMate<Banner$Mate> {
  /// Banner Banner({Key? key, Widget? child, required String message, TextDirection? textDirection, required BannerLocation location, TextDirection? layoutDirection, Color color = _kColor, TextStyle textStyle = _kTextStyle})
  Banner$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {Widget? child}
    Widget? child,

    /// param: {required String message}
    required String message,

    /// param: {TextDirection? textDirection}
    TextDirection? textDirection,

    /// param: {required BannerLocation location}
    required BannerLocation location,

    /// param: {TextDirection? layoutDirection}
    TextDirection? layoutDirection,

    /// param: {Color color = _kColor}
    required Color color,

    /// param: {TextStyle textStyle = _kTextStyle}
    required TextStyle textStyle,
  }) : super(
          key: key,
          child: child,
          message: message,
          textDirection: textDirection,
          location: location,
          layoutDirection: layoutDirection,
          color: color,
          textStyle: textStyle,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => Banner$Mate(
        key: p.getValue('key'),
        child: p.getValue('child'),
        message: p.getValue('message'),
        textDirection: p.getValue('textDirection'),
        location: p.getValue('location'),
        layoutDirection: p.getValue('layoutDirection'),
        color: p.getValue('color'),
        textStyle: p.getValue('textStyle'),
      ),
    );
    mateParams.set(name: 'key', init: key);
    mateParams.set(name: 'child', init: child);
    mateParams.set(name: 'message', init: message);
    mateParams.set(name: 'textDirection', init: textDirection);
    mateParams.set(name: 'location', init: location);
    mateParams.set(name: 'layoutDirection', init: layoutDirection);
    mateParams.set(name: 'color', init: color);
    mateParams.set(name: 'textStyle', init: textStyle);
  }
}

/// class CheckedModeBanner extends StatelessWidget
class CheckedModeBanner$Mate extends CheckedModeBanner with WidgetMate<CheckedModeBanner$Mate> {
  /// CheckedModeBanner CheckedModeBanner({Key? key, required Widget child})
  CheckedModeBanner$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {required Widget child}
    required Widget child,
  }) : super(
          key: key,
          child: child,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => CheckedModeBanner$Mate(
        key: p.getValue('key'),
        child: p.getValue('child'),
      ),
    );
    mateParams.set(name: 'key', init: key);
    mateParams.set(name: 'child', init: child);
  }
}
