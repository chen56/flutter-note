// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/widgets/single_child_scroll_view.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/painting/basic_types.dart';
import 'dart:core';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/widgets/scroll_physics.dart';
import 'package:flutter/src/widgets/scroll_controller.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/gestures/recognizer.dart';
import 'dart:ui';
import 'package:flutter/src/widgets/scroll_view.dart';
import 'package:note/mate.dart';

/// class SingleChildScrollView extends StatelessWidget
class SingleChildScrollView$Mate extends SingleChildScrollView with WidgetMate<SingleChildScrollView$Mate> {
  /// SingleChildScrollView SingleChildScrollView({Key? key, Axis scrollDirection = Axis.vertical, bool reverse = false, EdgeInsetsGeometry? padding, bool? primary, ScrollPhysics? physics, ScrollController? controller, Widget? child, DragStartBehavior dragStartBehavior = DragStartBehavior.start, Clip clipBehavior = Clip.hardEdge, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior = ScrollViewKeyboardDismissBehavior.manual})
  SingleChildScrollView$Mate({
    /// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
    Key? key,

    /// optionalParameters: {Axis scrollDirection = Axis.vertical} , hasDefaultValue:true, defaultValueCode:Axis.vertical
    required Axis scrollDirection,

    /// optionalParameters: {bool reverse = false} , hasDefaultValue:true, defaultValueCode:false
    required bool reverse,

    /// optionalParameters: {EdgeInsetsGeometry? padding} , hasDefaultValue:false, defaultValueCode:null
    EdgeInsetsGeometry? padding,

    /// optionalParameters: {bool? primary} , hasDefaultValue:false, defaultValueCode:null
    bool? primary,

    /// optionalParameters: {ScrollPhysics? physics} , hasDefaultValue:false, defaultValueCode:null
    ScrollPhysics? physics,

    /// optionalParameters: {ScrollController? controller} , hasDefaultValue:false, defaultValueCode:null
    ScrollController? controller,

    /// optionalParameters: {Widget? child} , hasDefaultValue:false, defaultValueCode:null
    Widget? child,

    /// optionalParameters: {DragStartBehavior dragStartBehavior = DragStartBehavior.start} , hasDefaultValue:true, defaultValueCode:DragStartBehavior.start
    required DragStartBehavior dragStartBehavior,

    /// optionalParameters: {Clip clipBehavior = Clip.hardEdge} , hasDefaultValue:true, defaultValueCode:Clip.hardEdge
    required Clip clipBehavior,

    /// optionalParameters: {String? restorationId} , hasDefaultValue:false, defaultValueCode:null
    String? restorationId,

    /// optionalParameters: {ScrollViewKeyboardDismissBehavior keyboardDismissBehavior = ScrollViewKeyboardDismissBehavior.manual} , hasDefaultValue:true, defaultValueCode:ScrollViewKeyboardDismissBehavior.manual
    required ScrollViewKeyboardDismissBehavior keyboardDismissBehavior,
  }) : super(
          key: key,
          scrollDirection: scrollDirection,
          reverse: reverse,
          padding: padding,
          primary: primary,
          physics: physics,
          controller: controller,
          child: child,
          dragStartBehavior: dragStartBehavior,
          clipBehavior: clipBehavior,
          restorationId: restorationId,
          keyboardDismissBehavior: keyboardDismissBehavior,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => SingleChildScrollView$Mate(
        key: p.getValue('key'),
        scrollDirection: p.getValue('scrollDirection'),
        reverse: p.getValue('reverse'),
        padding: p.getValue('padding'),
        primary: p.getValue('primary'),
        physics: p.getValue('physics'),
        controller: p.getValue('controller'),
        child: p.getValue('child'),
        dragStartBehavior: p.getValue('dragStartBehavior'),
        clipBehavior: p.getValue('clipBehavior'),
        restorationId: p.getValue('restorationId'),
        keyboardDismissBehavior: p.getValue('keyboardDismissBehavior'),
      ),
    );
    mateParams.set(name: 'key', init: key);
    mateParams.set(name: 'scrollDirection', init: scrollDirection);
    mateParams.set(name: 'reverse', init: reverse);
    mateParams.set(name: 'padding', init: padding);
    mateParams.set(name: 'primary', init: primary);
    mateParams.set(name: 'physics', init: physics);
    mateParams.set(name: 'controller', init: controller);
    mateParams.set(name: 'child', init: child);
    mateParams.set(name: 'dragStartBehavior', init: dragStartBehavior);
    mateParams.set(name: 'clipBehavior', init: clipBehavior);
    mateParams.set(name: 'restorationId', init: restorationId);
    mateParams.set(name: 'keyboardDismissBehavior', init: keyboardDismissBehavior);
  }
}
