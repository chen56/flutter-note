// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/widgets/pages.dart';
import 'package:flutter/src/widgets/navigator.dart';
import 'package:flutter/src/widgets/routes.dart';
import 'dart:core';
import 'dart:ui';
import 'package:note/mate.dart';

/// class PageRouteBuilder<T> extends PageRoute<T>
class PageRouteBuilder$Mate<T> extends PageRouteBuilder<T> with Mate<PageRouteBuilder$Mate> {
  /// PageRouteBuilder<T> PageRouteBuilder({RouteSettings? settings, required Widget Function(BuildContext, Animation<double>, Animation<double>) pageBuilder, Widget Function(BuildContext, Animation<double>, Animation<double>, Widget) transitionsBuilder = _defaultTransitionsBuilder, Duration transitionDuration = const Duration(milliseconds: 300), Duration reverseTransitionDuration = const Duration(milliseconds: 300), bool opaque = true, bool barrierDismissible = false, Color? barrierColor, String? barrierLabel, bool maintainState = true, bool fullscreenDialog = false, bool allowSnapshotting = true})
  PageRouteBuilder$Mate({
    /// param: {RouteSettings? settings}
    RouteSettings? settings,

    /// param: {required Widget Function(BuildContext, Animation<double>, Animation<double>) pageBuilder}
    required RoutePageBuilder pageBuilder,

    /// param: {Widget Function(BuildContext, Animation<double>, Animation<double>, Widget) transitionsBuilder = _defaultTransitionsBuilder}
    required RouteTransitionsBuilder transitionsBuilder,

    /// param: {Duration transitionDuration = const Duration(milliseconds: 300)}
    required Duration transitionDuration,

    /// param: {Duration reverseTransitionDuration = const Duration(milliseconds: 300)}
    required Duration reverseTransitionDuration,

    /// param: {bool opaque = true}
    required bool opaque,

    /// param: {bool barrierDismissible = false}
    required bool barrierDismissible,

    /// param: {Color? barrierColor}
    Color? barrierColor,

    /// param: {String? barrierLabel}
    String? barrierLabel,

    /// param: {bool maintainState = true}
    required bool maintainState,

    /// param: {bool fullscreenDialog = false}
    required bool fullscreenDialog,

    /// param: {bool allowSnapshotting = true}
    required bool allowSnapshotting,
  }) : super(
          settings: settings,
          pageBuilder: pageBuilder,
          transitionsBuilder: transitionsBuilder,
          transitionDuration: transitionDuration,
          reverseTransitionDuration: reverseTransitionDuration,
          opaque: opaque,
          barrierDismissible: barrierDismissible,
          barrierColor: barrierColor,
          barrierLabel: barrierLabel,
          maintainState: maintainState,
          fullscreenDialog: fullscreenDialog,
          allowSnapshotting: allowSnapshotting,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => PageRouteBuilder$Mate(
        settings: p.getValue('settings'),
        pageBuilder: p.getValue('pageBuilder'),
        transitionsBuilder: p.getValue('transitionsBuilder'),
        transitionDuration: p.getValue('transitionDuration'),
        reverseTransitionDuration: p.getValue('reverseTransitionDuration'),
        opaque: p.getValue('opaque'),
        barrierDismissible: p.getValue('barrierDismissible'),
        barrierColor: p.getValue('barrierColor'),
        barrierLabel: p.getValue('barrierLabel'),
        maintainState: p.getValue('maintainState'),
        fullscreenDialog: p.getValue('fullscreenDialog'),
        allowSnapshotting: p.getValue('allowSnapshotting'),
      ),
    );
    mateParams.set(name: 'settings', init: settings);
    mateParams.set(name: 'pageBuilder', init: pageBuilder);
    mateParams.set(name: 'transitionsBuilder', init: transitionsBuilder);
    mateParams.set(name: 'transitionDuration', init: transitionDuration);
    mateParams.set(name: 'reverseTransitionDuration', init: reverseTransitionDuration);
    mateParams.set(name: 'opaque', init: opaque);
    mateParams.set(name: 'barrierDismissible', init: barrierDismissible);
    mateParams.set(name: 'barrierColor', init: barrierColor);
    mateParams.set(name: 'barrierLabel', init: barrierLabel);
    mateParams.set(name: 'maintainState', init: maintainState);
    mateParams.set(name: 'fullscreenDialog', init: fullscreenDialog);
    mateParams.set(name: 'allowSnapshotting', init: allowSnapshotting);
  }
}
