// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/widgets/icon.dart';
import 'package:flutter/src/widgets/icon_data.dart';
import 'package:flutter/src/foundation/key.dart';
import 'dart:core';
import 'dart:ui';
import 'package:note/mate.dart';

/// class Icon extends StatelessWidget
class Icon$Mate extends Icon with WidgetMate<Icon$Mate> {
  /// Icon Icon(IconData? icon, {Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection})
  Icon$Mate(
    /// requiredParameters: IconData? icon
    IconData? icon, {
    /// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
    Key? key,

    /// optionalParameters: {double? size} , hasDefaultValue:false, defaultValueCode:null
    double? size,

    /// optionalParameters: {double? fill} , hasDefaultValue:false, defaultValueCode:null
    double? fill,

    /// optionalParameters: {double? weight} , hasDefaultValue:false, defaultValueCode:null
    double? weight,

    /// optionalParameters: {double? grade} , hasDefaultValue:false, defaultValueCode:null
    double? grade,

    /// optionalParameters: {double? opticalSize} , hasDefaultValue:false, defaultValueCode:null
    double? opticalSize,

    /// optionalParameters: {Color? color} , hasDefaultValue:false, defaultValueCode:null
    Color? color,

    /// optionalParameters: {List<Shadow>? shadows} , hasDefaultValue:false, defaultValueCode:null
    List<Shadow>? shadows,

    /// optionalParameters: {String? semanticLabel} , hasDefaultValue:false, defaultValueCode:null
    String? semanticLabel,

    /// optionalParameters: {TextDirection? textDirection} , hasDefaultValue:false, defaultValueCode:null
    TextDirection? textDirection,
  }) : super(
          icon,
          key: key,
          size: size,
          fill: fill,
          weight: weight,
          grade: grade,
          opticalSize: opticalSize,
          color: color,
          shadows: shadows,
          semanticLabel: semanticLabel,
          textDirection: textDirection,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => Icon$Mate(
        p.getValue('icon'),
        key: p.getValue('key'),
        size: p.getValue('size'),
        fill: p.getValue('fill'),
        weight: p.getValue('weight'),
        grade: p.getValue('grade'),
        opticalSize: p.getValue('opticalSize'),
        color: p.getValue('color'),
        shadows: p.getValue('shadows'),
        semanticLabel: p.getValue('semanticLabel'),
        textDirection: p.getValue('textDirection'),
      ),
    );
    mateParams.set(name: 'icon', init: icon);
    mateParams.set(name: 'key', init: key);
    mateParams.set(name: 'size', init: size);
    mateParams.set(name: 'fill', init: fill);
    mateParams.set(name: 'weight', init: weight);
    mateParams.set(name: 'grade', init: grade);
    mateParams.set(name: 'opticalSize', init: opticalSize);
    mateParams.set(name: 'color', init: color);
    mateParams.set(name: 'shadows', init: shadows);
    mateParams.set(name: 'semanticLabel', init: semanticLabel);
    mateParams.set(name: 'textDirection', init: textDirection);
  }
}
