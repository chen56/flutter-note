// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-11 13:17:26.530395

import 'package:flutter/src/widgets/restoration.dart';
import 'package:flutter/src/foundation/key.dart';
import 'dart:core';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/services/restoration.dart';
export 'package:flutter/services.dart' show RestorationBucket;

/// class RestorationScope extends StatefulWidget
class RestorationScope$Mate extends RestorationScope {
  /// RestorationScope RestorationScope({Key? key, required String? restorationId, required Widget child})
  RestorationScope$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {required String? restorationId}
    required String? restorationId,

    /// param: {required Widget child}
    required Widget child,
  }) : super(
          key: key,
          restorationId: restorationId,
          child: child,
        ) {}
}

/// class UnmanagedRestorationScope extends InheritedWidget
class UnmanagedRestorationScope$Mate extends UnmanagedRestorationScope {
  /// UnmanagedRestorationScope UnmanagedRestorationScope({Key? key, RestorationBucket? bucket, required Widget child})
  UnmanagedRestorationScope$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {RestorationBucket? bucket}
    RestorationBucket? bucket,

    /// param: {required Widget child}
    required Widget child,
  }) : super(
          key: key,
          bucket: bucket,
          child: child,
        ) {}
}

/// class RootRestorationScope extends StatefulWidget
class RootRestorationScope$Mate extends RootRestorationScope {
  /// RootRestorationScope RootRestorationScope({Key? key, required String? restorationId, required Widget child})
  RootRestorationScope$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {required String? restorationId}
    required String? restorationId,

    /// param: {required Widget child}
    required Widget child,
  }) : super(
          key: key,
          restorationId: restorationId,
          child: child,
        ) {}
}
