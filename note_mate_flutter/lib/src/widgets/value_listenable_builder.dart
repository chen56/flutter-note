// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/widgets/value_listenable_builder.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/foundation/change_notifier.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:note/mate.dart';

/// class ValueListenableBuilder<T> extends StatefulWidget
class ValueListenableBuilder$Mate<T> extends ValueListenableBuilder<T> with WidgetMate<ValueListenableBuilder$Mate> {
  /// ValueListenableBuilder<T> ValueListenableBuilder({Key? key, required ValueListenable<T> valueListenable, required Widget Function(BuildContext, T, Widget?) builder, Widget? child})
  ValueListenableBuilder$Mate({
    /// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
    Key? key,

    /// optionalParameters: {required ValueListenable<T> valueListenable} , hasDefaultValue:false, defaultValueCode:null
    required ValueListenable<T> valueListenable,

    /// optionalParameters: {required Widget Function(BuildContext, T, Widget?) builder} , hasDefaultValue:false, defaultValueCode:null
    required ValueWidgetBuilder<T> builder,

    /// optionalParameters: {Widget? child} , hasDefaultValue:false, defaultValueCode:null
    Widget? child,
  }) : super(
          key: key,
          valueListenable: valueListenable,
          builder: builder,
          child: child,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => ValueListenableBuilder$Mate(
        key: p.getValue('key'),
        valueListenable: p.getValue('valueListenable'),
        builder: p.getValue('builder'),
        child: p.getValue('child'),
      ),
    );
    mateParams.set(name: 'key', init: key);
    mateParams.set(name: 'valueListenable', init: valueListenable);
    mateParams.set(name: 'builder', init: builder);
    mateParams.set(name: 'child', init: child);
  }
}
