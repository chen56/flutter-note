// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/rendering/list_wheel_viewport.dart';
import 'package:flutter/src/rendering/viewport_offset.dart';
import 'dart:core';
import 'dart:ui';
import 'package:flutter/src/rendering/box.dart';
import 'package:note/mate.dart';

/// class RenderListWheelViewport extends RenderBox with ContainerRenderObjectMixin<RenderBox, ListWheelParentData> implements RenderAbstractViewport
class RenderListWheelViewport$Mate extends RenderListWheelViewport with Mate<RenderListWheelViewport$Mate> {
  /// RenderListWheelViewport RenderListWheelViewport({required ListWheelChildManager childManager, required ViewportOffset offset, double diameterRatio = defaultDiameterRatio, double perspective = defaultPerspective, double offAxisFraction = 0, bool useMagnifier = false, double magnification = 1, double overAndUnderCenterOpacity = 1, required double itemExtent, double squeeze = 1, bool renderChildrenOutsideViewport = false, Clip clipBehavior = Clip.none, List<RenderBox>? children})
  RenderListWheelViewport$Mate({
    /// param: {required ListWheelChildManager childManager}
    required ListWheelChildManager childManager,

    /// param: {required ViewportOffset offset}
    required ViewportOffset offset,

    /// param: {double diameterRatio = defaultDiameterRatio}
    required double diameterRatio,

    /// param: {double perspective = defaultPerspective}
    required double perspective,

    /// param: {double offAxisFraction = 0}
    required double offAxisFraction,

    /// param: {bool useMagnifier = false}
    required bool useMagnifier,

    /// param: {double magnification = 1}
    required double magnification,

    /// param: {double overAndUnderCenterOpacity = 1}
    required double overAndUnderCenterOpacity,

    /// param: {required double itemExtent}
    required double itemExtent,

    /// param: {double squeeze = 1}
    required double squeeze,

    /// param: {bool renderChildrenOutsideViewport = false}
    required bool renderChildrenOutsideViewport,

    /// param: {Clip clipBehavior = Clip.none}
    required Clip clipBehavior,

    /// param: {List<RenderBox>? children}
    List<RenderBox>? children,
  }) : super(
          childManager: childManager,
          offset: offset,
          diameterRatio: diameterRatio,
          perspective: perspective,
          offAxisFraction: offAxisFraction,
          useMagnifier: useMagnifier,
          magnification: magnification,
          overAndUnderCenterOpacity: overAndUnderCenterOpacity,
          itemExtent: itemExtent,
          squeeze: squeeze,
          renderChildrenOutsideViewport: renderChildrenOutsideViewport,
          clipBehavior: clipBehavior,
          children: children,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => RenderListWheelViewport$Mate(
        childManager: p.getValue('childManager'),
        offset: p.getValue('offset'),
        diameterRatio: p.getValue('diameterRatio'),
        perspective: p.getValue('perspective'),
        offAxisFraction: p.getValue('offAxisFraction'),
        useMagnifier: p.getValue('useMagnifier'),
        magnification: p.getValue('magnification'),
        overAndUnderCenterOpacity: p.getValue('overAndUnderCenterOpacity'),
        itemExtent: p.getValue('itemExtent'),
        squeeze: p.getValue('squeeze'),
        renderChildrenOutsideViewport: p.getValue('renderChildrenOutsideViewport'),
        clipBehavior: p.getValue('clipBehavior'),
        children: p.getValue('children'),
      ),
    );
    mateParams.set(name: 'childManager', init: childManager);
    mateParams.set(name: 'offset', init: offset);
    mateParams.set(name: 'diameterRatio', init: diameterRatio);
    mateParams.set(name: 'perspective', init: perspective);
    mateParams.set(name: 'offAxisFraction', init: offAxisFraction);
    mateParams.set(name: 'useMagnifier', init: useMagnifier);
    mateParams.set(name: 'magnification', init: magnification);
    mateParams.set(name: 'overAndUnderCenterOpacity', init: overAndUnderCenterOpacity);
    mateParams.set(name: 'itemExtent', init: itemExtent);
    mateParams.set(name: 'squeeze', init: squeeze);
    mateParams.set(name: 'renderChildrenOutsideViewport', init: renderChildrenOutsideViewport);
    mateParams.set(name: 'clipBehavior', init: clipBehavior);
    mateParams.set(name: 'children', init: children);
  }
}
