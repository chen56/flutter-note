// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-11 13:17:26.134970

import 'package:flutter/src/rendering/viewport.dart';
import 'dart:core';
import 'dart:ui';
import 'package:flutter/src/rendering/object.dart';
import 'package:flutter/src/rendering/sliver.dart';
import 'package:flutter/src/painting/basic_types.dart';
import 'package:flutter/src/rendering/viewport_offset.dart';

/// class RevealedOffset
class RevealedOffset$Mate extends RevealedOffset {
  /// RevealedOffset RevealedOffset({required double offset, required Rect rect})
  RevealedOffset$Mate({
    /// param: {required double offset}
    required double offset,

    /// param: {required Rect rect}
    required Rect rect,
  }) : super(
          offset: offset,
          rect: rect,
        ) {}
}

/// abstract class RenderViewportBase<ParentDataClass extends ContainerParentDataMixin<RenderSliver>> extends RenderBox with ContainerRenderObjectMixin<RenderSliver, ParentDataClass> implements RenderAbstractViewport
abstract class RenderViewportBase$Mate<ParentDataClass extends ContainerParentDataMixin<RenderSliver>>
    extends RenderViewportBase<ParentDataClass> {
  /// RenderViewportBase<ParentDataClass> RenderViewportBase({AxisDirection axisDirection = AxisDirection.down, required AxisDirection crossAxisDirection, required ViewportOffset offset, double? cacheExtent, CacheExtentStyle cacheExtentStyle = CacheExtentStyle.pixel, Clip clipBehavior = Clip.hardEdge})
  RenderViewportBase$Mate({
    /// param: {AxisDirection axisDirection = AxisDirection.down}
    required AxisDirection axisDirection,

    /// param: {required AxisDirection crossAxisDirection}
    required AxisDirection crossAxisDirection,

    /// param: {required ViewportOffset offset}
    required ViewportOffset offset,

    /// param: {double? cacheExtent}
    double? cacheExtent,

    /// param: {CacheExtentStyle cacheExtentStyle = CacheExtentStyle.pixel}
    required CacheExtentStyle cacheExtentStyle,

    /// param: {Clip clipBehavior = Clip.hardEdge}
    required Clip clipBehavior,
  }) : super(
          axisDirection: axisDirection,
          crossAxisDirection: crossAxisDirection,
          offset: offset,
          cacheExtent: cacheExtent,
          cacheExtentStyle: cacheExtentStyle,
          clipBehavior: clipBehavior,
        ) {}
}

/// class RenderViewport extends RenderViewportBase<SliverPhysicalContainerParentData>
class RenderViewport$Mate extends RenderViewport {
  /// RenderViewport RenderViewport({AxisDirection axisDirection = AxisDirection.down, required AxisDirection crossAxisDirection, required ViewportOffset offset, double anchor = 0.0, List<RenderSliver>? children, RenderSliver? center, double? cacheExtent, CacheExtentStyle cacheExtentStyle = CacheExtentStyle.pixel, Clip clipBehavior = Clip.hardEdge})
  RenderViewport$Mate({
    /// param: {AxisDirection axisDirection = AxisDirection.down}
    required AxisDirection axisDirection,

    /// param: {required AxisDirection crossAxisDirection}
    required AxisDirection crossAxisDirection,

    /// param: {required ViewportOffset offset}
    required ViewportOffset offset,

    /// param: {double anchor = 0.0}
    required double anchor,

    /// param: {List<RenderSliver>? children}
    List<RenderSliver>? children,

    /// param: {RenderSliver? center}
    RenderSliver? center,

    /// param: {double? cacheExtent}
    double? cacheExtent,

    /// param: {CacheExtentStyle cacheExtentStyle = CacheExtentStyle.pixel}
    required CacheExtentStyle cacheExtentStyle,

    /// param: {Clip clipBehavior = Clip.hardEdge}
    required Clip clipBehavior,
  }) : super(
          axisDirection: axisDirection,
          crossAxisDirection: crossAxisDirection,
          offset: offset,
          anchor: anchor,
          children: children,
          center: center,
          cacheExtent: cacheExtent,
          cacheExtentStyle: cacheExtentStyle,
          clipBehavior: clipBehavior,
        ) {}
}

/// class RenderShrinkWrappingViewport extends RenderViewportBase<SliverLogicalContainerParentData>
class RenderShrinkWrappingViewport$Mate extends RenderShrinkWrappingViewport {
  /// RenderShrinkWrappingViewport RenderShrinkWrappingViewport({AxisDirection axisDirection = AxisDirection.down, required AxisDirection crossAxisDirection, required ViewportOffset offset, Clip clipBehavior = Clip.hardEdge, List<RenderSliver>? children})
  RenderShrinkWrappingViewport$Mate({
    /// param: {AxisDirection axisDirection = AxisDirection.down}
    required AxisDirection axisDirection,

    /// param: {required AxisDirection crossAxisDirection}
    required AxisDirection crossAxisDirection,

    /// param: {required ViewportOffset offset}
    required ViewportOffset offset,

    /// param: {Clip clipBehavior = Clip.hardEdge}
    required Clip clipBehavior,

    /// param: {List<RenderSliver>? children}
    List<RenderSliver>? children,
  }) : super(
          axisDirection: axisDirection,
          crossAxisDirection: crossAxisDirection,
          offset: offset,
          clipBehavior: clipBehavior,
          children: children,
        ) {}
}
