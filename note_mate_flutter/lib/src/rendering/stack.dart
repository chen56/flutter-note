// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/rendering/stack.dart';
import 'dart:core';
import 'package:note/mate.dart';
import 'package:flutter/src/rendering/box.dart';
import 'package:flutter/src/painting/alignment.dart';
import 'dart:ui';

/// class RelativeRect
class RelativeRect$Mate extends RelativeRect with Mate<RelativeRect$Mate> {
  /// RelativeRect RelativeRect.fromLTRB(double left, double top, double right, double bottom)
  RelativeRect$Mate.fromLTRB(
    /// param: double left
    double left,

    /// param: double top
    double top,

    /// param: double right
    double right,

    /// param: double bottom
    double bottom,
  ) : super.fromLTRB(
          left,
          top,
          right,
          bottom,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => RelativeRect$Mate.fromLTRB(
        p.getValue('left'),
        p.getValue('top'),
        p.getValue('right'),
        p.getValue('bottom'),
      ),
    );
    mateParams.set(name: 'left', init: left);
    mateParams.set(name: 'top', init: top);
    mateParams.set(name: 'right', init: right);
    mateParams.set(name: 'bottom', init: bottom);
  }
}

/// class RenderStack extends RenderBox with ContainerRenderObjectMixin<RenderBox, StackParentData>, RenderBoxContainerDefaultsMixin<RenderBox, StackParentData>
class RenderStack$Mate extends RenderStack with Mate<RenderStack$Mate> {
  /// RenderStack RenderStack({List<RenderBox>? children, AlignmentGeometry alignment = AlignmentDirectional.topStart, TextDirection? textDirection, StackFit fit = StackFit.loose, Clip clipBehavior = Clip.hardEdge})
  RenderStack$Mate({
    /// param: {List<RenderBox>? children}
    List<RenderBox>? children,

    /// param: {AlignmentGeometry alignment = AlignmentDirectional.topStart}
    required AlignmentGeometry alignment,

    /// param: {TextDirection? textDirection}
    TextDirection? textDirection,

    /// param: {StackFit fit = StackFit.loose}
    required StackFit fit,

    /// param: {Clip clipBehavior = Clip.hardEdge}
    required Clip clipBehavior,
  }) : super(
          children: children,
          alignment: alignment,
          textDirection: textDirection,
          fit: fit,
          clipBehavior: clipBehavior,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => RenderStack$Mate(
        children: p.getValue('children'),
        alignment: p.getValue('alignment'),
        textDirection: p.getValue('textDirection'),
        fit: p.getValue('fit'),
        clipBehavior: p.getValue('clipBehavior'),
      ),
    );
    mateParams.set(name: 'children', init: children);
    mateParams.set(name: 'alignment', init: alignment);
    mateParams.set(name: 'textDirection', init: textDirection);
    mateParams.set(name: 'fit', init: fit);
    mateParams.set(name: 'clipBehavior', init: clipBehavior);
  }
}

/// class RenderIndexedStack extends RenderStack
class RenderIndexedStack$Mate extends RenderIndexedStack with Mate<RenderIndexedStack$Mate> {
  /// RenderIndexedStack RenderIndexedStack({List<RenderBox>? children, AlignmentGeometry alignment = AlignmentDirectional.topStart, TextDirection? textDirection, StackFit fit = StackFit.loose, Clip clipBehavior = Clip.hardEdge, int? index = 0})
  RenderIndexedStack$Mate({
    /// param: {List<RenderBox>? children}
    List<RenderBox>? children,

    /// param: {AlignmentGeometry alignment = AlignmentDirectional.topStart}
    required AlignmentGeometry alignment,

    /// param: {TextDirection? textDirection}
    TextDirection? textDirection,

    /// param: {StackFit fit = StackFit.loose}
    required StackFit fit,

    /// param: {Clip clipBehavior = Clip.hardEdge}
    required Clip clipBehavior,

    /// param: {int? index = 0}
    int? index,
  }) : super(
          children: children,
          alignment: alignment,
          textDirection: textDirection,
          fit: fit,
          clipBehavior: clipBehavior,
          index: index,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => RenderIndexedStack$Mate(
        children: p.getValue('children'),
        alignment: p.getValue('alignment'),
        textDirection: p.getValue('textDirection'),
        fit: p.getValue('fit'),
        clipBehavior: p.getValue('clipBehavior'),
        index: p.getValue('index'),
      ),
    );
    mateParams.set(name: 'children', init: children);
    mateParams.set(name: 'alignment', init: alignment);
    mateParams.set(name: 'textDirection', init: textDirection);
    mateParams.set(name: 'fit', init: fit);
    mateParams.set(name: 'clipBehavior', init: clipBehavior);
    mateParams.set(name: 'index', init: index);
  }
}
