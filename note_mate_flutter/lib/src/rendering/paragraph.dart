// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-11 13:17:26.043064

import 'package:flutter/src/rendering/paragraph.dart';
import 'dart:core';
import 'package:flutter/src/painting/inline_span.dart';
import 'dart:ui';
import 'package:flutter/src/painting/text_painter.dart';
import 'package:flutter/src/painting/strut_style.dart';
import 'package:flutter/src/rendering/box.dart';
import 'package:flutter/src/rendering/selection.dart';

/// class PlaceholderSpanIndexSemanticsTag extends SemanticsTag
class PlaceholderSpanIndexSemanticsTag$Mate extends PlaceholderSpanIndexSemanticsTag {
  /// PlaceholderSpanIndexSemanticsTag PlaceholderSpanIndexSemanticsTag(int index)
  PlaceholderSpanIndexSemanticsTag$Mate(

      /// param: int index
      int index)
      : super(index) {}
}

/// class RenderParagraph extends RenderBox with ContainerRenderObjectMixin<RenderBox, TextParentData>, RenderBoxContainerDefaultsMixin<RenderBox, TextParentData>, RelayoutWhenSystemFontsChangeMixin
class RenderParagraph$Mate extends RenderParagraph {
  /// RenderParagraph RenderParagraph(InlineSpan text, {TextAlign textAlign = TextAlign.start, required TextDirection textDirection, bool softWrap = true, TextOverflow overflow = TextOverflow.clip, double textScaleFactor = 1.0, int? maxLines, Locale? locale, StrutStyle? strutStyle, TextWidthBasis textWidthBasis = TextWidthBasis.parent, TextHeightBehavior? textHeightBehavior, List<RenderBox>? children, Color? selectionColor, SelectionRegistrar? registrar})
  RenderParagraph$Mate(
    /// param: InlineSpan text
    InlineSpan text, {
    /// param: {TextAlign textAlign = TextAlign.start}
    required TextAlign textAlign,

    /// param: {required TextDirection textDirection}
    required TextDirection textDirection,

    /// param: {bool softWrap = true}
    required bool softWrap,

    /// param: {TextOverflow overflow = TextOverflow.clip}
    required TextOverflow overflow,

    /// param: {double textScaleFactor = 1.0}
    required double textScaleFactor,

    /// param: {int? maxLines}
    int? maxLines,

    /// param: {Locale? locale}
    Locale? locale,

    /// param: {StrutStyle? strutStyle}
    StrutStyle? strutStyle,

    /// param: {TextWidthBasis textWidthBasis = TextWidthBasis.parent}
    required TextWidthBasis textWidthBasis,

    /// param: {TextHeightBehavior? textHeightBehavior}
    TextHeightBehavior? textHeightBehavior,

    /// param: {List<RenderBox>? children}
    List<RenderBox>? children,

    /// param: {Color? selectionColor}
    Color? selectionColor,

    /// param: {SelectionRegistrar? registrar}
    SelectionRegistrar? registrar,
  }) : super(
          text,
          textAlign: textAlign,
          textDirection: textDirection,
          softWrap: softWrap,
          overflow: overflow,
          textScaleFactor: textScaleFactor,
          maxLines: maxLines,
          locale: locale,
          strutStyle: strutStyle,
          textWidthBasis: textWidthBasis,
          textHeightBehavior: textHeightBehavior,
          children: children,
          selectionColor: selectionColor,
          registrar: registrar,
        ) {}
}
