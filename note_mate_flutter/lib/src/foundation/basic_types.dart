// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/foundation/basic_types.dart';
import 'dart:core';
import 'package:note/mate.dart';

/// class CachingIterable<E> extends IterableBase<E>
class CachingIterable$Mate<E> extends CachingIterable<E> with Mate<CachingIterable$Mate> {
  /// CachingIterable<E> CachingIterable(Iterator<E> _prefillIterator)
  CachingIterable$Mate(

      /// param: Iterator<E> _prefillIterator
      Iterator<E> _prefillIterator)
      : super(_prefillIterator) {
    mateParams = Params(
      init: this,
      builder: (p) => CachingIterable$Mate(p.getValue('_prefillIterator')),
    );
    mateParams.set(name: '_prefillIterator', init: _prefillIterator);
  }
}

/// class Factory<T>
class Factory$Mate<T> extends Factory<T> with Mate<Factory$Mate> {
  /// Factory<T> Factory(T Function() constructor)
  Factory$Mate(

      /// param: T Function() constructor
      ValueGetter<T> constructor)
      : super(constructor) {
    mateParams = Params(
      init: this,
      builder: (p) => Factory$Mate(p.getValue('constructor')),
    );
    mateParams.set(name: 'constructor', init: constructor);
  }
}
