// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/foundation/stack_frame.dart';
import 'dart:core';
import 'package:note/mate.dart';

/// class StackFrame
class StackFrame$Mate extends StackFrame with Mate<StackFrame$Mate> {
  /// StackFrame StackFrame({required int number, required int column, required int line, required String packageScheme, required String package, required String packagePath, String className = '', required String method, bool isConstructor = false, required String source})
  StackFrame$Mate({
    /// param: {required int number}
    required int number,

    /// param: {required int column}
    required int column,

    /// param: {required int line}
    required int line,

    /// param: {required String packageScheme}
    required String packageScheme,

    /// param: {required String package}
    required String package,

    /// param: {required String packagePath}
    required String packagePath,

    /// param: {String className = ''}
    required String className,

    /// param: {required String method}
    required String method,

    /// param: {bool isConstructor = false}
    required bool isConstructor,

    /// param: {required String source}
    required String source,
  }) : super(
          number: number,
          column: column,
          line: line,
          packageScheme: packageScheme,
          package: package,
          packagePath: packagePath,
          className: className,
          method: method,
          isConstructor: isConstructor,
          source: source,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => StackFrame$Mate(
        number: p.getValue('number'),
        column: p.getValue('column'),
        line: p.getValue('line'),
        packageScheme: p.getValue('packageScheme'),
        package: p.getValue('package'),
        packagePath: p.getValue('packagePath'),
        className: p.getValue('className'),
        method: p.getValue('method'),
        isConstructor: p.getValue('isConstructor'),
        source: p.getValue('source'),
      ),
    );
    mateParams.set(name: 'number', init: number);
    mateParams.set(name: 'column', init: column);
    mateParams.set(name: 'line', init: line);
    mateParams.set(name: 'packageScheme', init: packageScheme);
    mateParams.set(name: 'package', init: package);
    mateParams.set(name: 'packagePath', init: packagePath);
    mateParams.set(name: 'className', init: className);
    mateParams.set(name: 'method', init: method);
    mateParams.set(name: 'isConstructor', init: isConstructor);
    mateParams.set(name: 'source', init: source);
  }
}
