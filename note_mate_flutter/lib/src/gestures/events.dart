// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/gestures/events.dart';
import 'dart:core';
import 'dart:ui';
import 'package:note/mate.dart';

/// class PointerAddedEvent extends PointerEvent with _PointerEventDescription, _CopyPointerAddedEvent
class PointerAddedEvent$Mate extends PointerAddedEvent with Mate<PointerAddedEvent$Mate> {
  /// PointerAddedEvent PointerAddedEvent({Duration timeStamp = Duration.zero, int pointer = 0, PointerDeviceKind kind = PointerDeviceKind.touch, int device = 0, Offset position = Offset.zero, bool obscured = false, double pressureMin = 1.0, double pressureMax = 1.0, double distance = 0.0, double distanceMax = 0.0, double radiusMin = 0.0, double radiusMax = 0.0, double orientation = 0.0, double tilt = 0.0, int embedderId = 0})
  PointerAddedEvent$Mate({
    /// param: {Duration timeStamp = Duration.zero}
    required Duration timeStamp,

    /// param: {int pointer = 0}
    required int pointer,

    /// param: {PointerDeviceKind kind = PointerDeviceKind.touch}
    required PointerDeviceKind kind,

    /// param: {int device = 0}
    required int device,

    /// param: {Offset position = Offset.zero}
    required Offset position,

    /// param: {bool obscured = false}
    required bool obscured,

    /// param: {double pressureMin = 1.0}
    required double pressureMin,

    /// param: {double pressureMax = 1.0}
    required double pressureMax,

    /// param: {double distance = 0.0}
    required double distance,

    /// param: {double distanceMax = 0.0}
    required double distanceMax,

    /// param: {double radiusMin = 0.0}
    required double radiusMin,

    /// param: {double radiusMax = 0.0}
    required double radiusMax,

    /// param: {double orientation = 0.0}
    required double orientation,

    /// param: {double tilt = 0.0}
    required double tilt,

    /// param: {int embedderId = 0}
    required int embedderId,
  }) : super(
          timeStamp: timeStamp,
          pointer: pointer,
          kind: kind,
          device: device,
          position: position,
          obscured: obscured,
          pressureMin: pressureMin,
          pressureMax: pressureMax,
          distance: distance,
          distanceMax: distanceMax,
          radiusMin: radiusMin,
          radiusMax: radiusMax,
          orientation: orientation,
          tilt: tilt,
          embedderId: embedderId,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => PointerAddedEvent$Mate(
        timeStamp: p.getValue('timeStamp'),
        pointer: p.getValue('pointer'),
        kind: p.getValue('kind'),
        device: p.getValue('device'),
        position: p.getValue('position'),
        obscured: p.getValue('obscured'),
        pressureMin: p.getValue('pressureMin'),
        pressureMax: p.getValue('pressureMax'),
        distance: p.getValue('distance'),
        distanceMax: p.getValue('distanceMax'),
        radiusMin: p.getValue('radiusMin'),
        radiusMax: p.getValue('radiusMax'),
        orientation: p.getValue('orientation'),
        tilt: p.getValue('tilt'),
        embedderId: p.getValue('embedderId'),
      ),
    );
    mateParams.set(name: 'timeStamp', init: timeStamp);
    mateParams.set(name: 'pointer', init: pointer);
    mateParams.set(name: 'kind', init: kind);
    mateParams.set(name: 'device', init: device);
    mateParams.set(name: 'position', init: position);
    mateParams.set(name: 'obscured', init: obscured);
    mateParams.set(name: 'pressureMin', init: pressureMin);
    mateParams.set(name: 'pressureMax', init: pressureMax);
    mateParams.set(name: 'distance', init: distance);
    mateParams.set(name: 'distanceMax', init: distanceMax);
    mateParams.set(name: 'radiusMin', init: radiusMin);
    mateParams.set(name: 'radiusMax', init: radiusMax);
    mateParams.set(name: 'orientation', init: orientation);
    mateParams.set(name: 'tilt', init: tilt);
    mateParams.set(name: 'embedderId', init: embedderId);
  }
}

/// class PointerRemovedEvent extends PointerEvent with _PointerEventDescription, _CopyPointerRemovedEvent
class PointerRemovedEvent$Mate extends PointerRemovedEvent with Mate<PointerRemovedEvent$Mate> {
  /// PointerRemovedEvent PointerRemovedEvent({Duration timeStamp = Duration.zero, int pointer = 0, PointerDeviceKind kind = PointerDeviceKind.touch, int device = 0, Offset position = Offset.zero, bool obscured = false, double pressureMin = 1.0, double pressureMax = 1.0, double distanceMax = 0.0, double radiusMin = 0.0, double radiusMax = 0.0, PointerRemovedEvent? original, int embedderId = 0})
  PointerRemovedEvent$Mate({
    /// param: {Duration timeStamp = Duration.zero}
    required Duration timeStamp,

    /// param: {int pointer = 0}
    required int pointer,

    /// param: {PointerDeviceKind kind = PointerDeviceKind.touch}
    required PointerDeviceKind kind,

    /// param: {int device = 0}
    required int device,

    /// param: {Offset position = Offset.zero}
    required Offset position,

    /// param: {bool obscured = false}
    required bool obscured,

    /// param: {double pressureMin = 1.0}
    required double pressureMin,

    /// param: {double pressureMax = 1.0}
    required double pressureMax,

    /// param: {double distanceMax = 0.0}
    required double distanceMax,

    /// param: {double radiusMin = 0.0}
    required double radiusMin,

    /// param: {double radiusMax = 0.0}
    required double radiusMax,

    /// param: {PointerRemovedEvent? original}
    PointerRemovedEvent? original,

    /// param: {int embedderId = 0}
    required int embedderId,
  }) : super(
          timeStamp: timeStamp,
          pointer: pointer,
          kind: kind,
          device: device,
          position: position,
          obscured: obscured,
          pressureMin: pressureMin,
          pressureMax: pressureMax,
          distanceMax: distanceMax,
          radiusMin: radiusMin,
          radiusMax: radiusMax,
          original: original,
          embedderId: embedderId,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => PointerRemovedEvent$Mate(
        timeStamp: p.getValue('timeStamp'),
        pointer: p.getValue('pointer'),
        kind: p.getValue('kind'),
        device: p.getValue('device'),
        position: p.getValue('position'),
        obscured: p.getValue('obscured'),
        pressureMin: p.getValue('pressureMin'),
        pressureMax: p.getValue('pressureMax'),
        distanceMax: p.getValue('distanceMax'),
        radiusMin: p.getValue('radiusMin'),
        radiusMax: p.getValue('radiusMax'),
        original: p.getValue('original'),
        embedderId: p.getValue('embedderId'),
      ),
    );
    mateParams.set(name: 'timeStamp', init: timeStamp);
    mateParams.set(name: 'pointer', init: pointer);
    mateParams.set(name: 'kind', init: kind);
    mateParams.set(name: 'device', init: device);
    mateParams.set(name: 'position', init: position);
    mateParams.set(name: 'obscured', init: obscured);
    mateParams.set(name: 'pressureMin', init: pressureMin);
    mateParams.set(name: 'pressureMax', init: pressureMax);
    mateParams.set(name: 'distanceMax', init: distanceMax);
    mateParams.set(name: 'radiusMin', init: radiusMin);
    mateParams.set(name: 'radiusMax', init: radiusMax);
    mateParams.set(name: 'original', init: original);
    mateParams.set(name: 'embedderId', init: embedderId);
  }
}

/// class PointerHoverEvent extends PointerEvent with _PointerEventDescription, _CopyPointerHoverEvent
class PointerHoverEvent$Mate extends PointerHoverEvent with Mate<PointerHoverEvent$Mate> {
  /// PointerHoverEvent PointerHoverEvent({Duration timeStamp = Duration.zero, PointerDeviceKind kind = PointerDeviceKind.touch, int pointer = 0, int device = 0, Offset position = Offset.zero, Offset delta = Offset.zero, int buttons = 0, bool obscured = false, double pressureMin = 1.0, double pressureMax = 1.0, double distance = 0.0, double distanceMax = 0.0, double size = 0.0, double radiusMajor = 0.0, double radiusMinor = 0.0, double radiusMin = 0.0, double radiusMax = 0.0, double orientation = 0.0, double tilt = 0.0, bool synthesized = false, int embedderId = 0})
  PointerHoverEvent$Mate({
    /// param: {Duration timeStamp = Duration.zero}
    required Duration timeStamp,

    /// param: {PointerDeviceKind kind = PointerDeviceKind.touch}
    required PointerDeviceKind kind,

    /// param: {int pointer = 0}
    required int pointer,

    /// param: {int device = 0}
    required int device,

    /// param: {Offset position = Offset.zero}
    required Offset position,

    /// param: {Offset delta = Offset.zero}
    required Offset delta,

    /// param: {int buttons = 0}
    required int buttons,

    /// param: {bool obscured = false}
    required bool obscured,

    /// param: {double pressureMin = 1.0}
    required double pressureMin,

    /// param: {double pressureMax = 1.0}
    required double pressureMax,

    /// param: {double distance = 0.0}
    required double distance,

    /// param: {double distanceMax = 0.0}
    required double distanceMax,

    /// param: {double size = 0.0}
    required double size,

    /// param: {double radiusMajor = 0.0}
    required double radiusMajor,

    /// param: {double radiusMinor = 0.0}
    required double radiusMinor,

    /// param: {double radiusMin = 0.0}
    required double radiusMin,

    /// param: {double radiusMax = 0.0}
    required double radiusMax,

    /// param: {double orientation = 0.0}
    required double orientation,

    /// param: {double tilt = 0.0}
    required double tilt,

    /// param: {bool synthesized = false}
    required bool synthesized,

    /// param: {int embedderId = 0}
    required int embedderId,
  }) : super(
          timeStamp: timeStamp,
          kind: kind,
          pointer: pointer,
          device: device,
          position: position,
          delta: delta,
          buttons: buttons,
          obscured: obscured,
          pressureMin: pressureMin,
          pressureMax: pressureMax,
          distance: distance,
          distanceMax: distanceMax,
          size: size,
          radiusMajor: radiusMajor,
          radiusMinor: radiusMinor,
          radiusMin: radiusMin,
          radiusMax: radiusMax,
          orientation: orientation,
          tilt: tilt,
          synthesized: synthesized,
          embedderId: embedderId,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => PointerHoverEvent$Mate(
        timeStamp: p.getValue('timeStamp'),
        kind: p.getValue('kind'),
        pointer: p.getValue('pointer'),
        device: p.getValue('device'),
        position: p.getValue('position'),
        delta: p.getValue('delta'),
        buttons: p.getValue('buttons'),
        obscured: p.getValue('obscured'),
        pressureMin: p.getValue('pressureMin'),
        pressureMax: p.getValue('pressureMax'),
        distance: p.getValue('distance'),
        distanceMax: p.getValue('distanceMax'),
        size: p.getValue('size'),
        radiusMajor: p.getValue('radiusMajor'),
        radiusMinor: p.getValue('radiusMinor'),
        radiusMin: p.getValue('radiusMin'),
        radiusMax: p.getValue('radiusMax'),
        orientation: p.getValue('orientation'),
        tilt: p.getValue('tilt'),
        synthesized: p.getValue('synthesized'),
        embedderId: p.getValue('embedderId'),
      ),
    );
    mateParams.set(name: 'timeStamp', init: timeStamp);
    mateParams.set(name: 'kind', init: kind);
    mateParams.set(name: 'pointer', init: pointer);
    mateParams.set(name: 'device', init: device);
    mateParams.set(name: 'position', init: position);
    mateParams.set(name: 'delta', init: delta);
    mateParams.set(name: 'buttons', init: buttons);
    mateParams.set(name: 'obscured', init: obscured);
    mateParams.set(name: 'pressureMin', init: pressureMin);
    mateParams.set(name: 'pressureMax', init: pressureMax);
    mateParams.set(name: 'distance', init: distance);
    mateParams.set(name: 'distanceMax', init: distanceMax);
    mateParams.set(name: 'size', init: size);
    mateParams.set(name: 'radiusMajor', init: radiusMajor);
    mateParams.set(name: 'radiusMinor', init: radiusMinor);
    mateParams.set(name: 'radiusMin', init: radiusMin);
    mateParams.set(name: 'radiusMax', init: radiusMax);
    mateParams.set(name: 'orientation', init: orientation);
    mateParams.set(name: 'tilt', init: tilt);
    mateParams.set(name: 'synthesized', init: synthesized);
    mateParams.set(name: 'embedderId', init: embedderId);
  }
}

/// class PointerEnterEvent extends PointerEvent with _PointerEventDescription, _CopyPointerEnterEvent
class PointerEnterEvent$Mate extends PointerEnterEvent with Mate<PointerEnterEvent$Mate> {
  /// PointerEnterEvent PointerEnterEvent({Duration timeStamp = Duration.zero, int pointer = 0, PointerDeviceKind kind = PointerDeviceKind.touch, int device = 0, Offset position = Offset.zero, Offset delta = Offset.zero, int buttons = 0, bool obscured = false, double pressureMin = 1.0, double pressureMax = 1.0, double distance = 0.0, double distanceMax = 0.0, double size = 0.0, double radiusMajor = 0.0, double radiusMinor = 0.0, double radiusMin = 0.0, double radiusMax = 0.0, double orientation = 0.0, double tilt = 0.0, bool down = false, bool synthesized = false, int embedderId = 0})
  PointerEnterEvent$Mate({
    /// param: {Duration timeStamp = Duration.zero}
    required Duration timeStamp,

    /// param: {int pointer = 0}
    required int pointer,

    /// param: {PointerDeviceKind kind = PointerDeviceKind.touch}
    required PointerDeviceKind kind,

    /// param: {int device = 0}
    required int device,

    /// param: {Offset position = Offset.zero}
    required Offset position,

    /// param: {Offset delta = Offset.zero}
    required Offset delta,

    /// param: {int buttons = 0}
    required int buttons,

    /// param: {bool obscured = false}
    required bool obscured,

    /// param: {double pressureMin = 1.0}
    required double pressureMin,

    /// param: {double pressureMax = 1.0}
    required double pressureMax,

    /// param: {double distance = 0.0}
    required double distance,

    /// param: {double distanceMax = 0.0}
    required double distanceMax,

    /// param: {double size = 0.0}
    required double size,

    /// param: {double radiusMajor = 0.0}
    required double radiusMajor,

    /// param: {double radiusMinor = 0.0}
    required double radiusMinor,

    /// param: {double radiusMin = 0.0}
    required double radiusMin,

    /// param: {double radiusMax = 0.0}
    required double radiusMax,

    /// param: {double orientation = 0.0}
    required double orientation,

    /// param: {double tilt = 0.0}
    required double tilt,

    /// param: {bool down = false}
    required bool down,

    /// param: {bool synthesized = false}
    required bool synthesized,

    /// param: {int embedderId = 0}
    required int embedderId,
  }) : super(
          timeStamp: timeStamp,
          pointer: pointer,
          kind: kind,
          device: device,
          position: position,
          delta: delta,
          buttons: buttons,
          obscured: obscured,
          pressureMin: pressureMin,
          pressureMax: pressureMax,
          distance: distance,
          distanceMax: distanceMax,
          size: size,
          radiusMajor: radiusMajor,
          radiusMinor: radiusMinor,
          radiusMin: radiusMin,
          radiusMax: radiusMax,
          orientation: orientation,
          tilt: tilt,
          down: down,
          synthesized: synthesized,
          embedderId: embedderId,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => PointerEnterEvent$Mate(
        timeStamp: p.getValue('timeStamp'),
        pointer: p.getValue('pointer'),
        kind: p.getValue('kind'),
        device: p.getValue('device'),
        position: p.getValue('position'),
        delta: p.getValue('delta'),
        buttons: p.getValue('buttons'),
        obscured: p.getValue('obscured'),
        pressureMin: p.getValue('pressureMin'),
        pressureMax: p.getValue('pressureMax'),
        distance: p.getValue('distance'),
        distanceMax: p.getValue('distanceMax'),
        size: p.getValue('size'),
        radiusMajor: p.getValue('radiusMajor'),
        radiusMinor: p.getValue('radiusMinor'),
        radiusMin: p.getValue('radiusMin'),
        radiusMax: p.getValue('radiusMax'),
        orientation: p.getValue('orientation'),
        tilt: p.getValue('tilt'),
        down: p.getValue('down'),
        synthesized: p.getValue('synthesized'),
        embedderId: p.getValue('embedderId'),
      ),
    );
    mateParams.set(name: 'timeStamp', init: timeStamp);
    mateParams.set(name: 'pointer', init: pointer);
    mateParams.set(name: 'kind', init: kind);
    mateParams.set(name: 'device', init: device);
    mateParams.set(name: 'position', init: position);
    mateParams.set(name: 'delta', init: delta);
    mateParams.set(name: 'buttons', init: buttons);
    mateParams.set(name: 'obscured', init: obscured);
    mateParams.set(name: 'pressureMin', init: pressureMin);
    mateParams.set(name: 'pressureMax', init: pressureMax);
    mateParams.set(name: 'distance', init: distance);
    mateParams.set(name: 'distanceMax', init: distanceMax);
    mateParams.set(name: 'size', init: size);
    mateParams.set(name: 'radiusMajor', init: radiusMajor);
    mateParams.set(name: 'radiusMinor', init: radiusMinor);
    mateParams.set(name: 'radiusMin', init: radiusMin);
    mateParams.set(name: 'radiusMax', init: radiusMax);
    mateParams.set(name: 'orientation', init: orientation);
    mateParams.set(name: 'tilt', init: tilt);
    mateParams.set(name: 'down', init: down);
    mateParams.set(name: 'synthesized', init: synthesized);
    mateParams.set(name: 'embedderId', init: embedderId);
  }
}

/// class PointerExitEvent extends PointerEvent with _PointerEventDescription, _CopyPointerExitEvent
class PointerExitEvent$Mate extends PointerExitEvent with Mate<PointerExitEvent$Mate> {
  /// PointerExitEvent PointerExitEvent({Duration timeStamp = Duration.zero, PointerDeviceKind kind = PointerDeviceKind.touch, int pointer = 0, int device = 0, Offset position = Offset.zero, Offset delta = Offset.zero, int buttons = 0, bool obscured = false, double pressureMin = 1.0, double pressureMax = 1.0, double distance = 0.0, double distanceMax = 0.0, double size = 0.0, double radiusMajor = 0.0, double radiusMinor = 0.0, double radiusMin = 0.0, double radiusMax = 0.0, double orientation = 0.0, double tilt = 0.0, bool down = false, bool synthesized = false, int embedderId = 0})
  PointerExitEvent$Mate({
    /// param: {Duration timeStamp = Duration.zero}
    required Duration timeStamp,

    /// param: {PointerDeviceKind kind = PointerDeviceKind.touch}
    required PointerDeviceKind kind,

    /// param: {int pointer = 0}
    required int pointer,

    /// param: {int device = 0}
    required int device,

    /// param: {Offset position = Offset.zero}
    required Offset position,

    /// param: {Offset delta = Offset.zero}
    required Offset delta,

    /// param: {int buttons = 0}
    required int buttons,

    /// param: {bool obscured = false}
    required bool obscured,

    /// param: {double pressureMin = 1.0}
    required double pressureMin,

    /// param: {double pressureMax = 1.0}
    required double pressureMax,

    /// param: {double distance = 0.0}
    required double distance,

    /// param: {double distanceMax = 0.0}
    required double distanceMax,

    /// param: {double size = 0.0}
    required double size,

    /// param: {double radiusMajor = 0.0}
    required double radiusMajor,

    /// param: {double radiusMinor = 0.0}
    required double radiusMinor,

    /// param: {double radiusMin = 0.0}
    required double radiusMin,

    /// param: {double radiusMax = 0.0}
    required double radiusMax,

    /// param: {double orientation = 0.0}
    required double orientation,

    /// param: {double tilt = 0.0}
    required double tilt,

    /// param: {bool down = false}
    required bool down,

    /// param: {bool synthesized = false}
    required bool synthesized,

    /// param: {int embedderId = 0}
    required int embedderId,
  }) : super(
          timeStamp: timeStamp,
          kind: kind,
          pointer: pointer,
          device: device,
          position: position,
          delta: delta,
          buttons: buttons,
          obscured: obscured,
          pressureMin: pressureMin,
          pressureMax: pressureMax,
          distance: distance,
          distanceMax: distanceMax,
          size: size,
          radiusMajor: radiusMajor,
          radiusMinor: radiusMinor,
          radiusMin: radiusMin,
          radiusMax: radiusMax,
          orientation: orientation,
          tilt: tilt,
          down: down,
          synthesized: synthesized,
          embedderId: embedderId,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => PointerExitEvent$Mate(
        timeStamp: p.getValue('timeStamp'),
        kind: p.getValue('kind'),
        pointer: p.getValue('pointer'),
        device: p.getValue('device'),
        position: p.getValue('position'),
        delta: p.getValue('delta'),
        buttons: p.getValue('buttons'),
        obscured: p.getValue('obscured'),
        pressureMin: p.getValue('pressureMin'),
        pressureMax: p.getValue('pressureMax'),
        distance: p.getValue('distance'),
        distanceMax: p.getValue('distanceMax'),
        size: p.getValue('size'),
        radiusMajor: p.getValue('radiusMajor'),
        radiusMinor: p.getValue('radiusMinor'),
        radiusMin: p.getValue('radiusMin'),
        radiusMax: p.getValue('radiusMax'),
        orientation: p.getValue('orientation'),
        tilt: p.getValue('tilt'),
        down: p.getValue('down'),
        synthesized: p.getValue('synthesized'),
        embedderId: p.getValue('embedderId'),
      ),
    );
    mateParams.set(name: 'timeStamp', init: timeStamp);
    mateParams.set(name: 'kind', init: kind);
    mateParams.set(name: 'pointer', init: pointer);
    mateParams.set(name: 'device', init: device);
    mateParams.set(name: 'position', init: position);
    mateParams.set(name: 'delta', init: delta);
    mateParams.set(name: 'buttons', init: buttons);
    mateParams.set(name: 'obscured', init: obscured);
    mateParams.set(name: 'pressureMin', init: pressureMin);
    mateParams.set(name: 'pressureMax', init: pressureMax);
    mateParams.set(name: 'distance', init: distance);
    mateParams.set(name: 'distanceMax', init: distanceMax);
    mateParams.set(name: 'size', init: size);
    mateParams.set(name: 'radiusMajor', init: radiusMajor);
    mateParams.set(name: 'radiusMinor', init: radiusMinor);
    mateParams.set(name: 'radiusMin', init: radiusMin);
    mateParams.set(name: 'radiusMax', init: radiusMax);
    mateParams.set(name: 'orientation', init: orientation);
    mateParams.set(name: 'tilt', init: tilt);
    mateParams.set(name: 'down', init: down);
    mateParams.set(name: 'synthesized', init: synthesized);
    mateParams.set(name: 'embedderId', init: embedderId);
  }
}

/// class PointerDownEvent extends PointerEvent with _PointerEventDescription, _CopyPointerDownEvent
class PointerDownEvent$Mate extends PointerDownEvent with Mate<PointerDownEvent$Mate> {
  /// PointerDownEvent PointerDownEvent({Duration timeStamp = Duration.zero, int pointer = 0, PointerDeviceKind kind = PointerDeviceKind.touch, int device = 0, Offset position = Offset.zero, int buttons = kPrimaryButton, bool obscured = false, double pressure = 1.0, double pressureMin = 1.0, double pressureMax = 1.0, double distanceMax = 0.0, double size = 0.0, double radiusMajor = 0.0, double radiusMinor = 0.0, double radiusMin = 0.0, double radiusMax = 0.0, double orientation = 0.0, double tilt = 0.0, int embedderId = 0})
  PointerDownEvent$Mate({
    /// param: {Duration timeStamp = Duration.zero}
    required Duration timeStamp,

    /// param: {int pointer = 0}
    required int pointer,

    /// param: {PointerDeviceKind kind = PointerDeviceKind.touch}
    required PointerDeviceKind kind,

    /// param: {int device = 0}
    required int device,

    /// param: {Offset position = Offset.zero}
    required Offset position,

    /// param: {int buttons = kPrimaryButton}
    required int buttons,

    /// param: {bool obscured = false}
    required bool obscured,

    /// param: {double pressure = 1.0}
    required double pressure,

    /// param: {double pressureMin = 1.0}
    required double pressureMin,

    /// param: {double pressureMax = 1.0}
    required double pressureMax,

    /// param: {double distanceMax = 0.0}
    required double distanceMax,

    /// param: {double size = 0.0}
    required double size,

    /// param: {double radiusMajor = 0.0}
    required double radiusMajor,

    /// param: {double radiusMinor = 0.0}
    required double radiusMinor,

    /// param: {double radiusMin = 0.0}
    required double radiusMin,

    /// param: {double radiusMax = 0.0}
    required double radiusMax,

    /// param: {double orientation = 0.0}
    required double orientation,

    /// param: {double tilt = 0.0}
    required double tilt,

    /// param: {int embedderId = 0}
    required int embedderId,
  }) : super(
          timeStamp: timeStamp,
          pointer: pointer,
          kind: kind,
          device: device,
          position: position,
          buttons: buttons,
          obscured: obscured,
          pressure: pressure,
          pressureMin: pressureMin,
          pressureMax: pressureMax,
          distanceMax: distanceMax,
          size: size,
          radiusMajor: radiusMajor,
          radiusMinor: radiusMinor,
          radiusMin: radiusMin,
          radiusMax: radiusMax,
          orientation: orientation,
          tilt: tilt,
          embedderId: embedderId,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => PointerDownEvent$Mate(
        timeStamp: p.getValue('timeStamp'),
        pointer: p.getValue('pointer'),
        kind: p.getValue('kind'),
        device: p.getValue('device'),
        position: p.getValue('position'),
        buttons: p.getValue('buttons'),
        obscured: p.getValue('obscured'),
        pressure: p.getValue('pressure'),
        pressureMin: p.getValue('pressureMin'),
        pressureMax: p.getValue('pressureMax'),
        distanceMax: p.getValue('distanceMax'),
        size: p.getValue('size'),
        radiusMajor: p.getValue('radiusMajor'),
        radiusMinor: p.getValue('radiusMinor'),
        radiusMin: p.getValue('radiusMin'),
        radiusMax: p.getValue('radiusMax'),
        orientation: p.getValue('orientation'),
        tilt: p.getValue('tilt'),
        embedderId: p.getValue('embedderId'),
      ),
    );
    mateParams.set(name: 'timeStamp', init: timeStamp);
    mateParams.set(name: 'pointer', init: pointer);
    mateParams.set(name: 'kind', init: kind);
    mateParams.set(name: 'device', init: device);
    mateParams.set(name: 'position', init: position);
    mateParams.set(name: 'buttons', init: buttons);
    mateParams.set(name: 'obscured', init: obscured);
    mateParams.set(name: 'pressure', init: pressure);
    mateParams.set(name: 'pressureMin', init: pressureMin);
    mateParams.set(name: 'pressureMax', init: pressureMax);
    mateParams.set(name: 'distanceMax', init: distanceMax);
    mateParams.set(name: 'size', init: size);
    mateParams.set(name: 'radiusMajor', init: radiusMajor);
    mateParams.set(name: 'radiusMinor', init: radiusMinor);
    mateParams.set(name: 'radiusMin', init: radiusMin);
    mateParams.set(name: 'radiusMax', init: radiusMax);
    mateParams.set(name: 'orientation', init: orientation);
    mateParams.set(name: 'tilt', init: tilt);
    mateParams.set(name: 'embedderId', init: embedderId);
  }
}

/// class PointerMoveEvent extends PointerEvent with _PointerEventDescription, _CopyPointerMoveEvent
class PointerMoveEvent$Mate extends PointerMoveEvent with Mate<PointerMoveEvent$Mate> {
  /// PointerMoveEvent PointerMoveEvent({Duration timeStamp = Duration.zero, int pointer = 0, PointerDeviceKind kind = PointerDeviceKind.touch, int device = 0, Offset position = Offset.zero, Offset delta = Offset.zero, int buttons = kPrimaryButton, bool obscured = false, double pressure = 1.0, double pressureMin = 1.0, double pressureMax = 1.0, double distanceMax = 0.0, double size = 0.0, double radiusMajor = 0.0, double radiusMinor = 0.0, double radiusMin = 0.0, double radiusMax = 0.0, double orientation = 0.0, double tilt = 0.0, int platformData = 0, bool synthesized = false, int embedderId = 0})
  PointerMoveEvent$Mate({
    /// param: {Duration timeStamp = Duration.zero}
    required Duration timeStamp,

    /// param: {int pointer = 0}
    required int pointer,

    /// param: {PointerDeviceKind kind = PointerDeviceKind.touch}
    required PointerDeviceKind kind,

    /// param: {int device = 0}
    required int device,

    /// param: {Offset position = Offset.zero}
    required Offset position,

    /// param: {Offset delta = Offset.zero}
    required Offset delta,

    /// param: {int buttons = kPrimaryButton}
    required int buttons,

    /// param: {bool obscured = false}
    required bool obscured,

    /// param: {double pressure = 1.0}
    required double pressure,

    /// param: {double pressureMin = 1.0}
    required double pressureMin,

    /// param: {double pressureMax = 1.0}
    required double pressureMax,

    /// param: {double distanceMax = 0.0}
    required double distanceMax,

    /// param: {double size = 0.0}
    required double size,

    /// param: {double radiusMajor = 0.0}
    required double radiusMajor,

    /// param: {double radiusMinor = 0.0}
    required double radiusMinor,

    /// param: {double radiusMin = 0.0}
    required double radiusMin,

    /// param: {double radiusMax = 0.0}
    required double radiusMax,

    /// param: {double orientation = 0.0}
    required double orientation,

    /// param: {double tilt = 0.0}
    required double tilt,

    /// param: {int platformData = 0}
    required int platformData,

    /// param: {bool synthesized = false}
    required bool synthesized,

    /// param: {int embedderId = 0}
    required int embedderId,
  }) : super(
          timeStamp: timeStamp,
          pointer: pointer,
          kind: kind,
          device: device,
          position: position,
          delta: delta,
          buttons: buttons,
          obscured: obscured,
          pressure: pressure,
          pressureMin: pressureMin,
          pressureMax: pressureMax,
          distanceMax: distanceMax,
          size: size,
          radiusMajor: radiusMajor,
          radiusMinor: radiusMinor,
          radiusMin: radiusMin,
          radiusMax: radiusMax,
          orientation: orientation,
          tilt: tilt,
          platformData: platformData,
          synthesized: synthesized,
          embedderId: embedderId,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => PointerMoveEvent$Mate(
        timeStamp: p.getValue('timeStamp'),
        pointer: p.getValue('pointer'),
        kind: p.getValue('kind'),
        device: p.getValue('device'),
        position: p.getValue('position'),
        delta: p.getValue('delta'),
        buttons: p.getValue('buttons'),
        obscured: p.getValue('obscured'),
        pressure: p.getValue('pressure'),
        pressureMin: p.getValue('pressureMin'),
        pressureMax: p.getValue('pressureMax'),
        distanceMax: p.getValue('distanceMax'),
        size: p.getValue('size'),
        radiusMajor: p.getValue('radiusMajor'),
        radiusMinor: p.getValue('radiusMinor'),
        radiusMin: p.getValue('radiusMin'),
        radiusMax: p.getValue('radiusMax'),
        orientation: p.getValue('orientation'),
        tilt: p.getValue('tilt'),
        platformData: p.getValue('platformData'),
        synthesized: p.getValue('synthesized'),
        embedderId: p.getValue('embedderId'),
      ),
    );
    mateParams.set(name: 'timeStamp', init: timeStamp);
    mateParams.set(name: 'pointer', init: pointer);
    mateParams.set(name: 'kind', init: kind);
    mateParams.set(name: 'device', init: device);
    mateParams.set(name: 'position', init: position);
    mateParams.set(name: 'delta', init: delta);
    mateParams.set(name: 'buttons', init: buttons);
    mateParams.set(name: 'obscured', init: obscured);
    mateParams.set(name: 'pressure', init: pressure);
    mateParams.set(name: 'pressureMin', init: pressureMin);
    mateParams.set(name: 'pressureMax', init: pressureMax);
    mateParams.set(name: 'distanceMax', init: distanceMax);
    mateParams.set(name: 'size', init: size);
    mateParams.set(name: 'radiusMajor', init: radiusMajor);
    mateParams.set(name: 'radiusMinor', init: radiusMinor);
    mateParams.set(name: 'radiusMin', init: radiusMin);
    mateParams.set(name: 'radiusMax', init: radiusMax);
    mateParams.set(name: 'orientation', init: orientation);
    mateParams.set(name: 'tilt', init: tilt);
    mateParams.set(name: 'platformData', init: platformData);
    mateParams.set(name: 'synthesized', init: synthesized);
    mateParams.set(name: 'embedderId', init: embedderId);
  }
}

/// class PointerUpEvent extends PointerEvent with _PointerEventDescription, _CopyPointerUpEvent
class PointerUpEvent$Mate extends PointerUpEvent with Mate<PointerUpEvent$Mate> {
  /// PointerUpEvent PointerUpEvent({Duration timeStamp = Duration.zero, int pointer = 0, PointerDeviceKind kind = PointerDeviceKind.touch, int device = 0, Offset position = Offset.zero, int buttons = 0, bool obscured = false, double pressure = 0.0, double pressureMin = 1.0, double pressureMax = 1.0, double distance = 0.0, double distanceMax = 0.0, double size = 0.0, double radiusMajor = 0.0, double radiusMinor = 0.0, double radiusMin = 0.0, double radiusMax = 0.0, double orientation = 0.0, double tilt = 0.0, int embedderId = 0})
  PointerUpEvent$Mate({
    /// param: {Duration timeStamp = Duration.zero}
    required Duration timeStamp,

    /// param: {int pointer = 0}
    required int pointer,

    /// param: {PointerDeviceKind kind = PointerDeviceKind.touch}
    required PointerDeviceKind kind,

    /// param: {int device = 0}
    required int device,

    /// param: {Offset position = Offset.zero}
    required Offset position,

    /// param: {int buttons = 0}
    required int buttons,

    /// param: {bool obscured = false}
    required bool obscured,

    /// param: {double pressure = 0.0}
    required double pressure,

    /// param: {double pressureMin = 1.0}
    required double pressureMin,

    /// param: {double pressureMax = 1.0}
    required double pressureMax,

    /// param: {double distance = 0.0}
    required double distance,

    /// param: {double distanceMax = 0.0}
    required double distanceMax,

    /// param: {double size = 0.0}
    required double size,

    /// param: {double radiusMajor = 0.0}
    required double radiusMajor,

    /// param: {double radiusMinor = 0.0}
    required double radiusMinor,

    /// param: {double radiusMin = 0.0}
    required double radiusMin,

    /// param: {double radiusMax = 0.0}
    required double radiusMax,

    /// param: {double orientation = 0.0}
    required double orientation,

    /// param: {double tilt = 0.0}
    required double tilt,

    /// param: {int embedderId = 0}
    required int embedderId,
  }) : super(
          timeStamp: timeStamp,
          pointer: pointer,
          kind: kind,
          device: device,
          position: position,
          buttons: buttons,
          obscured: obscured,
          pressure: pressure,
          pressureMin: pressureMin,
          pressureMax: pressureMax,
          distance: distance,
          distanceMax: distanceMax,
          size: size,
          radiusMajor: radiusMajor,
          radiusMinor: radiusMinor,
          radiusMin: radiusMin,
          radiusMax: radiusMax,
          orientation: orientation,
          tilt: tilt,
          embedderId: embedderId,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => PointerUpEvent$Mate(
        timeStamp: p.getValue('timeStamp'),
        pointer: p.getValue('pointer'),
        kind: p.getValue('kind'),
        device: p.getValue('device'),
        position: p.getValue('position'),
        buttons: p.getValue('buttons'),
        obscured: p.getValue('obscured'),
        pressure: p.getValue('pressure'),
        pressureMin: p.getValue('pressureMin'),
        pressureMax: p.getValue('pressureMax'),
        distance: p.getValue('distance'),
        distanceMax: p.getValue('distanceMax'),
        size: p.getValue('size'),
        radiusMajor: p.getValue('radiusMajor'),
        radiusMinor: p.getValue('radiusMinor'),
        radiusMin: p.getValue('radiusMin'),
        radiusMax: p.getValue('radiusMax'),
        orientation: p.getValue('orientation'),
        tilt: p.getValue('tilt'),
        embedderId: p.getValue('embedderId'),
      ),
    );
    mateParams.set(name: 'timeStamp', init: timeStamp);
    mateParams.set(name: 'pointer', init: pointer);
    mateParams.set(name: 'kind', init: kind);
    mateParams.set(name: 'device', init: device);
    mateParams.set(name: 'position', init: position);
    mateParams.set(name: 'buttons', init: buttons);
    mateParams.set(name: 'obscured', init: obscured);
    mateParams.set(name: 'pressure', init: pressure);
    mateParams.set(name: 'pressureMin', init: pressureMin);
    mateParams.set(name: 'pressureMax', init: pressureMax);
    mateParams.set(name: 'distance', init: distance);
    mateParams.set(name: 'distanceMax', init: distanceMax);
    mateParams.set(name: 'size', init: size);
    mateParams.set(name: 'radiusMajor', init: radiusMajor);
    mateParams.set(name: 'radiusMinor', init: radiusMinor);
    mateParams.set(name: 'radiusMin', init: radiusMin);
    mateParams.set(name: 'radiusMax', init: radiusMax);
    mateParams.set(name: 'orientation', init: orientation);
    mateParams.set(name: 'tilt', init: tilt);
    mateParams.set(name: 'embedderId', init: embedderId);
  }
}

/// class PointerScrollEvent extends PointerSignalEvent with _PointerEventDescription, _CopyPointerScrollEvent
class PointerScrollEvent$Mate extends PointerScrollEvent with Mate<PointerScrollEvent$Mate> {
  /// PointerScrollEvent PointerScrollEvent({Duration timeStamp = Duration.zero, PointerDeviceKind kind = PointerDeviceKind.mouse, int device = 0, Offset position = Offset.zero, Offset scrollDelta = Offset.zero, int embedderId = 0})
  PointerScrollEvent$Mate({
    /// param: {Duration timeStamp = Duration.zero}
    required Duration timeStamp,

    /// param: {PointerDeviceKind kind = PointerDeviceKind.mouse}
    required PointerDeviceKind kind,

    /// param: {int device = 0}
    required int device,

    /// param: {Offset position = Offset.zero}
    required Offset position,

    /// param: {Offset scrollDelta = Offset.zero}
    required Offset scrollDelta,

    /// param: {int embedderId = 0}
    required int embedderId,
  }) : super(
          timeStamp: timeStamp,
          kind: kind,
          device: device,
          position: position,
          scrollDelta: scrollDelta,
          embedderId: embedderId,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => PointerScrollEvent$Mate(
        timeStamp: p.getValue('timeStamp'),
        kind: p.getValue('kind'),
        device: p.getValue('device'),
        position: p.getValue('position'),
        scrollDelta: p.getValue('scrollDelta'),
        embedderId: p.getValue('embedderId'),
      ),
    );
    mateParams.set(name: 'timeStamp', init: timeStamp);
    mateParams.set(name: 'kind', init: kind);
    mateParams.set(name: 'device', init: device);
    mateParams.set(name: 'position', init: position);
    mateParams.set(name: 'scrollDelta', init: scrollDelta);
    mateParams.set(name: 'embedderId', init: embedderId);
  }
}

/// class PointerScrollInertiaCancelEvent extends PointerSignalEvent with _PointerEventDescription, _CopyPointerScrollInertiaCancelEvent
class PointerScrollInertiaCancelEvent$Mate extends PointerScrollInertiaCancelEvent
    with Mate<PointerScrollInertiaCancelEvent$Mate> {
  /// PointerScrollInertiaCancelEvent PointerScrollInertiaCancelEvent({Duration timeStamp = Duration.zero, PointerDeviceKind kind = PointerDeviceKind.mouse, int device = 0, Offset position = Offset.zero, int embedderId = 0})
  PointerScrollInertiaCancelEvent$Mate({
    /// param: {Duration timeStamp = Duration.zero}
    required Duration timeStamp,

    /// param: {PointerDeviceKind kind = PointerDeviceKind.mouse}
    required PointerDeviceKind kind,

    /// param: {int device = 0}
    required int device,

    /// param: {Offset position = Offset.zero}
    required Offset position,

    /// param: {int embedderId = 0}
    required int embedderId,
  }) : super(
          timeStamp: timeStamp,
          kind: kind,
          device: device,
          position: position,
          embedderId: embedderId,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => PointerScrollInertiaCancelEvent$Mate(
        timeStamp: p.getValue('timeStamp'),
        kind: p.getValue('kind'),
        device: p.getValue('device'),
        position: p.getValue('position'),
        embedderId: p.getValue('embedderId'),
      ),
    );
    mateParams.set(name: 'timeStamp', init: timeStamp);
    mateParams.set(name: 'kind', init: kind);
    mateParams.set(name: 'device', init: device);
    mateParams.set(name: 'position', init: position);
    mateParams.set(name: 'embedderId', init: embedderId);
  }
}

/// class PointerScaleEvent extends PointerSignalEvent with _PointerEventDescription, _CopyPointerScaleEvent
class PointerScaleEvent$Mate extends PointerScaleEvent with Mate<PointerScaleEvent$Mate> {
  /// PointerScaleEvent PointerScaleEvent({Duration timeStamp = Duration.zero, PointerDeviceKind kind = PointerDeviceKind.mouse, int device = 0, Offset position = Offset.zero, int embedderId = 0, double scale = 1.0})
  PointerScaleEvent$Mate({
    /// param: {Duration timeStamp = Duration.zero}
    required Duration timeStamp,

    /// param: {PointerDeviceKind kind = PointerDeviceKind.mouse}
    required PointerDeviceKind kind,

    /// param: {int device = 0}
    required int device,

    /// param: {Offset position = Offset.zero}
    required Offset position,

    /// param: {int embedderId = 0}
    required int embedderId,

    /// param: {double scale = 1.0}
    required double scale,
  }) : super(
          timeStamp: timeStamp,
          kind: kind,
          device: device,
          position: position,
          embedderId: embedderId,
          scale: scale,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => PointerScaleEvent$Mate(
        timeStamp: p.getValue('timeStamp'),
        kind: p.getValue('kind'),
        device: p.getValue('device'),
        position: p.getValue('position'),
        embedderId: p.getValue('embedderId'),
        scale: p.getValue('scale'),
      ),
    );
    mateParams.set(name: 'timeStamp', init: timeStamp);
    mateParams.set(name: 'kind', init: kind);
    mateParams.set(name: 'device', init: device);
    mateParams.set(name: 'position', init: position);
    mateParams.set(name: 'embedderId', init: embedderId);
    mateParams.set(name: 'scale', init: scale);
  }
}

/// class PointerPanZoomStartEvent extends PointerEvent with _PointerEventDescription, _CopyPointerPanZoomStartEvent
class PointerPanZoomStartEvent$Mate extends PointerPanZoomStartEvent with Mate<PointerPanZoomStartEvent$Mate> {
  /// PointerPanZoomStartEvent PointerPanZoomStartEvent({Duration timeStamp = Duration.zero, int device = 0, int pointer = 0, Offset position = Offset.zero, int embedderId = 0, bool synthesized = false})
  PointerPanZoomStartEvent$Mate({
    /// param: {Duration timeStamp = Duration.zero}
    required Duration timeStamp,

    /// param: {int device = 0}
    required int device,

    /// param: {int pointer = 0}
    required int pointer,

    /// param: {Offset position = Offset.zero}
    required Offset position,

    /// param: {int embedderId = 0}
    required int embedderId,

    /// param: {bool synthesized = false}
    required bool synthesized,
  }) : super(
          timeStamp: timeStamp,
          device: device,
          pointer: pointer,
          position: position,
          embedderId: embedderId,
          synthesized: synthesized,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => PointerPanZoomStartEvent$Mate(
        timeStamp: p.getValue('timeStamp'),
        device: p.getValue('device'),
        pointer: p.getValue('pointer'),
        position: p.getValue('position'),
        embedderId: p.getValue('embedderId'),
        synthesized: p.getValue('synthesized'),
      ),
    );
    mateParams.set(name: 'timeStamp', init: timeStamp);
    mateParams.set(name: 'device', init: device);
    mateParams.set(name: 'pointer', init: pointer);
    mateParams.set(name: 'position', init: position);
    mateParams.set(name: 'embedderId', init: embedderId);
    mateParams.set(name: 'synthesized', init: synthesized);
  }
}

/// class PointerPanZoomUpdateEvent extends PointerEvent with _PointerEventDescription, _CopyPointerPanZoomUpdateEvent
class PointerPanZoomUpdateEvent$Mate extends PointerPanZoomUpdateEvent with Mate<PointerPanZoomUpdateEvent$Mate> {
  /// PointerPanZoomUpdateEvent PointerPanZoomUpdateEvent({Duration timeStamp = Duration.zero, int device = 0, int pointer = 0, Offset position = Offset.zero, int embedderId = 0, Offset pan = Offset.zero, Offset panDelta = Offset.zero, double scale = 1.0, double rotation = 0.0, bool synthesized = false})
  PointerPanZoomUpdateEvent$Mate({
    /// param: {Duration timeStamp = Duration.zero}
    required Duration timeStamp,

    /// param: {int device = 0}
    required int device,

    /// param: {int pointer = 0}
    required int pointer,

    /// param: {Offset position = Offset.zero}
    required Offset position,

    /// param: {int embedderId = 0}
    required int embedderId,

    /// param: {Offset pan = Offset.zero}
    required Offset pan,

    /// param: {Offset panDelta = Offset.zero}
    required Offset panDelta,

    /// param: {double scale = 1.0}
    required double scale,

    /// param: {double rotation = 0.0}
    required double rotation,

    /// param: {bool synthesized = false}
    required bool synthesized,
  }) : super(
          timeStamp: timeStamp,
          device: device,
          pointer: pointer,
          position: position,
          embedderId: embedderId,
          pan: pan,
          panDelta: panDelta,
          scale: scale,
          rotation: rotation,
          synthesized: synthesized,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => PointerPanZoomUpdateEvent$Mate(
        timeStamp: p.getValue('timeStamp'),
        device: p.getValue('device'),
        pointer: p.getValue('pointer'),
        position: p.getValue('position'),
        embedderId: p.getValue('embedderId'),
        pan: p.getValue('pan'),
        panDelta: p.getValue('panDelta'),
        scale: p.getValue('scale'),
        rotation: p.getValue('rotation'),
        synthesized: p.getValue('synthesized'),
      ),
    );
    mateParams.set(name: 'timeStamp', init: timeStamp);
    mateParams.set(name: 'device', init: device);
    mateParams.set(name: 'pointer', init: pointer);
    mateParams.set(name: 'position', init: position);
    mateParams.set(name: 'embedderId', init: embedderId);
    mateParams.set(name: 'pan', init: pan);
    mateParams.set(name: 'panDelta', init: panDelta);
    mateParams.set(name: 'scale', init: scale);
    mateParams.set(name: 'rotation', init: rotation);
    mateParams.set(name: 'synthesized', init: synthesized);
  }
}

/// class PointerPanZoomEndEvent extends PointerEvent with _PointerEventDescription, _CopyPointerPanZoomEndEvent
class PointerPanZoomEndEvent$Mate extends PointerPanZoomEndEvent with Mate<PointerPanZoomEndEvent$Mate> {
  /// PointerPanZoomEndEvent PointerPanZoomEndEvent({Duration timeStamp = Duration.zero, int device = 0, int pointer = 0, Offset position = Offset.zero, int embedderId = 0, bool synthesized = false})
  PointerPanZoomEndEvent$Mate({
    /// param: {Duration timeStamp = Duration.zero}
    required Duration timeStamp,

    /// param: {int device = 0}
    required int device,

    /// param: {int pointer = 0}
    required int pointer,

    /// param: {Offset position = Offset.zero}
    required Offset position,

    /// param: {int embedderId = 0}
    required int embedderId,

    /// param: {bool synthesized = false}
    required bool synthesized,
  }) : super(
          timeStamp: timeStamp,
          device: device,
          pointer: pointer,
          position: position,
          embedderId: embedderId,
          synthesized: synthesized,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => PointerPanZoomEndEvent$Mate(
        timeStamp: p.getValue('timeStamp'),
        device: p.getValue('device'),
        pointer: p.getValue('pointer'),
        position: p.getValue('position'),
        embedderId: p.getValue('embedderId'),
        synthesized: p.getValue('synthesized'),
      ),
    );
    mateParams.set(name: 'timeStamp', init: timeStamp);
    mateParams.set(name: 'device', init: device);
    mateParams.set(name: 'pointer', init: pointer);
    mateParams.set(name: 'position', init: position);
    mateParams.set(name: 'embedderId', init: embedderId);
    mateParams.set(name: 'synthesized', init: synthesized);
  }
}

/// class PointerCancelEvent extends PointerEvent with _PointerEventDescription, _CopyPointerCancelEvent
class PointerCancelEvent$Mate extends PointerCancelEvent with Mate<PointerCancelEvent$Mate> {
  /// PointerCancelEvent PointerCancelEvent({Duration timeStamp = Duration.zero, int pointer = 0, PointerDeviceKind kind = PointerDeviceKind.touch, int device = 0, Offset position = Offset.zero, int buttons = 0, bool obscured = false, double pressureMin = 1.0, double pressureMax = 1.0, double distance = 0.0, double distanceMax = 0.0, double size = 0.0, double radiusMajor = 0.0, double radiusMinor = 0.0, double radiusMin = 0.0, double radiusMax = 0.0, double orientation = 0.0, double tilt = 0.0, int embedderId = 0})
  PointerCancelEvent$Mate({
    /// param: {Duration timeStamp = Duration.zero}
    required Duration timeStamp,

    /// param: {int pointer = 0}
    required int pointer,

    /// param: {PointerDeviceKind kind = PointerDeviceKind.touch}
    required PointerDeviceKind kind,

    /// param: {int device = 0}
    required int device,

    /// param: {Offset position = Offset.zero}
    required Offset position,

    /// param: {int buttons = 0}
    required int buttons,

    /// param: {bool obscured = false}
    required bool obscured,

    /// param: {double pressureMin = 1.0}
    required double pressureMin,

    /// param: {double pressureMax = 1.0}
    required double pressureMax,

    /// param: {double distance = 0.0}
    required double distance,

    /// param: {double distanceMax = 0.0}
    required double distanceMax,

    /// param: {double size = 0.0}
    required double size,

    /// param: {double radiusMajor = 0.0}
    required double radiusMajor,

    /// param: {double radiusMinor = 0.0}
    required double radiusMinor,

    /// param: {double radiusMin = 0.0}
    required double radiusMin,

    /// param: {double radiusMax = 0.0}
    required double radiusMax,

    /// param: {double orientation = 0.0}
    required double orientation,

    /// param: {double tilt = 0.0}
    required double tilt,

    /// param: {int embedderId = 0}
    required int embedderId,
  }) : super(
          timeStamp: timeStamp,
          pointer: pointer,
          kind: kind,
          device: device,
          position: position,
          buttons: buttons,
          obscured: obscured,
          pressureMin: pressureMin,
          pressureMax: pressureMax,
          distance: distance,
          distanceMax: distanceMax,
          size: size,
          radiusMajor: radiusMajor,
          radiusMinor: radiusMinor,
          radiusMin: radiusMin,
          radiusMax: radiusMax,
          orientation: orientation,
          tilt: tilt,
          embedderId: embedderId,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => PointerCancelEvent$Mate(
        timeStamp: p.getValue('timeStamp'),
        pointer: p.getValue('pointer'),
        kind: p.getValue('kind'),
        device: p.getValue('device'),
        position: p.getValue('position'),
        buttons: p.getValue('buttons'),
        obscured: p.getValue('obscured'),
        pressureMin: p.getValue('pressureMin'),
        pressureMax: p.getValue('pressureMax'),
        distance: p.getValue('distance'),
        distanceMax: p.getValue('distanceMax'),
        size: p.getValue('size'),
        radiusMajor: p.getValue('radiusMajor'),
        radiusMinor: p.getValue('radiusMinor'),
        radiusMin: p.getValue('radiusMin'),
        radiusMax: p.getValue('radiusMax'),
        orientation: p.getValue('orientation'),
        tilt: p.getValue('tilt'),
        embedderId: p.getValue('embedderId'),
      ),
    );
    mateParams.set(name: 'timeStamp', init: timeStamp);
    mateParams.set(name: 'pointer', init: pointer);
    mateParams.set(name: 'kind', init: kind);
    mateParams.set(name: 'device', init: device);
    mateParams.set(name: 'position', init: position);
    mateParams.set(name: 'buttons', init: buttons);
    mateParams.set(name: 'obscured', init: obscured);
    mateParams.set(name: 'pressureMin', init: pressureMin);
    mateParams.set(name: 'pressureMax', init: pressureMax);
    mateParams.set(name: 'distance', init: distance);
    mateParams.set(name: 'distanceMax', init: distanceMax);
    mateParams.set(name: 'size', init: size);
    mateParams.set(name: 'radiusMajor', init: radiusMajor);
    mateParams.set(name: 'radiusMinor', init: radiusMinor);
    mateParams.set(name: 'radiusMin', init: radiusMin);
    mateParams.set(name: 'radiusMax', init: radiusMax);
    mateParams.set(name: 'orientation', init: orientation);
    mateParams.set(name: 'tilt', init: tilt);
    mateParams.set(name: 'embedderId', init: embedderId);
  }
}
