// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/material/text_form_field.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/editable_text.dart';
import 'dart:core';
import 'package:flutter/src/widgets/focus_manager.dart';
import 'package:flutter/src/material/input_decorator.dart';
import 'package:flutter/src/services/text_input.dart';
import 'package:flutter/src/painting/text_style.dart';
import 'package:flutter/src/painting/strut_style.dart';
import 'dart:ui';
import 'package:flutter/src/painting/alignment.dart';
import 'package:flutter/src/services/text_formatter.dart';
import 'package:flutter/src/foundation/basic_types.dart';
import 'package:flutter/src/gestures/tap.dart';
import 'package:flutter/src/widgets/tap_region.dart';
import 'package:flutter/src/widgets/form.dart';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/widgets/text_selection.dart';
import 'package:flutter/src/material/text_field.dart';
import 'package:flutter/src/widgets/scroll_physics.dart';
import 'package:flutter/src/widgets/scroll_controller.dart';
import 'package:flutter/src/services/mouse_cursor.dart';
import 'package:flutter/src/widgets/magnifier.dart';
import 'package:note/mate.dart';
export 'package:flutter/services.dart' show SmartDashesType, SmartQuotesType;

/// class TextFormField extends FormField<String>
class TextFormField$Mate extends TextFormField with WidgetMate<TextFormField$Mate> {
  /// TextFormField TextFormField({Key? key, TextEditingController? controller, String? initialValue, FocusNode? focusNode, InputDecoration? decoration = const InputDecoration(), TextInputType? keyboardType, TextCapitalization textCapitalization = TextCapitalization.none, TextInputAction? textInputAction, TextStyle? style, StrutStyle? strutStyle, TextDirection? textDirection, TextAlign textAlign = TextAlign.start, TextAlignVertical? textAlignVertical, bool autofocus = false, bool readOnly = false, ToolbarOptions? toolbarOptions, bool? showCursor, String obscuringCharacter = '•', bool obscureText = false, bool autocorrect = true, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions = true, MaxLengthEnforcement? maxLengthEnforcement, int? maxLines = 1, int? minLines, bool expands = false, int? maxLength, void Function(String)? onChanged, void Function()? onTap, void Function(PointerDownEvent)? onTapOutside, void Function()? onEditingComplete, void Function(String)? onFieldSubmitted, void Function(String?)? onSaved, String? Function(String?)? validator, List<TextInputFormatter>? inputFormatters, bool? enabled, double cursorWidth = 2.0, double? cursorHeight, Radius? cursorRadius, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding = const EdgeInsets.all(20.0), bool? enableInteractiveSelection, TextSelectionControls? selectionControls, Widget? Function(BuildContext, {required int currentLength, required bool isFocused, required int? maxLength})? buildCounter, ScrollPhysics? scrollPhysics, Iterable<String>? autofillHints, AutovalidateMode? autovalidateMode, ScrollController? scrollController, String? restorationId, bool enableIMEPersonalizedLearning = true, MouseCursor? mouseCursor, Widget Function(BuildContext, EditableTextState)? contextMenuBuilder = _defaultContextMenuBuilder, TextMagnifierConfiguration? magnifierConfiguration})
  TextFormField$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {TextEditingController? controller}
    TextEditingController? controller,

    /// param: {String? initialValue}
    String? initialValue,

    /// param: {FocusNode? focusNode}
    FocusNode? focusNode,

    /// param: {InputDecoration? decoration = const InputDecoration()}
    InputDecoration? decoration,

    /// param: {TextInputType? keyboardType}
    TextInputType? keyboardType,

    /// param: {TextCapitalization textCapitalization = TextCapitalization.none}
    required TextCapitalization textCapitalization,

    /// param: {TextInputAction? textInputAction}
    TextInputAction? textInputAction,

    /// param: {TextStyle? style}
    TextStyle? style,

    /// param: {StrutStyle? strutStyle}
    StrutStyle? strutStyle,

    /// param: {TextDirection? textDirection}
    TextDirection? textDirection,

    /// param: {TextAlign textAlign = TextAlign.start}
    required TextAlign textAlign,

    /// param: {TextAlignVertical? textAlignVertical}
    TextAlignVertical? textAlignVertical,

    /// param: {bool autofocus = false}
    required bool autofocus,

    /// param: {bool readOnly = false}
    required bool readOnly,

    /// param: {ToolbarOptions? toolbarOptions}
    ToolbarOptions? toolbarOptions,

    /// param: {bool? showCursor}
    bool? showCursor,

    /// param: {String obscuringCharacter = '•'}
    required String obscuringCharacter,

    /// param: {bool obscureText = false}
    required bool obscureText,

    /// param: {bool autocorrect = true}
    required bool autocorrect,

    /// param: {SmartDashesType? smartDashesType}
    SmartDashesType? smartDashesType,

    /// param: {SmartQuotesType? smartQuotesType}
    SmartQuotesType? smartQuotesType,

    /// param: {bool enableSuggestions = true}
    required bool enableSuggestions,

    /// param: {MaxLengthEnforcement? maxLengthEnforcement}
    MaxLengthEnforcement? maxLengthEnforcement,

    /// param: {int? maxLines = 1}
    int? maxLines,

    /// param: {int? minLines}
    int? minLines,

    /// param: {bool expands = false}
    required bool expands,

    /// param: {int? maxLength}
    int? maxLength,

    /// param: {void Function(String)? onChanged}
    ValueChanged<String>? onChanged,

    /// param: {void Function()? onTap}
    GestureTapCallback? onTap,

    /// param: {void Function(PointerDownEvent)? onTapOutside}
    TapRegionCallback? onTapOutside,

    /// param: {void Function()? onEditingComplete}
    VoidCallback? onEditingComplete,

    /// param: {void Function(String)? onFieldSubmitted}
    ValueChanged<String>? onFieldSubmitted,

    /// param: {void Function(String?)? onSaved}
    FormFieldSetter<String>? onSaved,

    /// param: {String? Function(String?)? validator}
    FormFieldValidator<String>? validator,

    /// param: {List<TextInputFormatter>? inputFormatters}
    List<TextInputFormatter>? inputFormatters,

    /// param: {bool? enabled}
    bool? enabled,

    /// param: {double cursorWidth = 2.0}
    required double cursorWidth,

    /// param: {double? cursorHeight}
    double? cursorHeight,

    /// param: {Radius? cursorRadius}
    Radius? cursorRadius,

    /// param: {Color? cursorColor}
    Color? cursorColor,

    /// param: {Brightness? keyboardAppearance}
    Brightness? keyboardAppearance,

    /// param: {EdgeInsets scrollPadding = const EdgeInsets.all(20.0)}
    required EdgeInsets scrollPadding,

    /// param: {bool? enableInteractiveSelection}
    bool? enableInteractiveSelection,

    /// param: {TextSelectionControls? selectionControls}
    TextSelectionControls? selectionControls,

    /// param: {Widget? Function(BuildContext, {required int currentLength, required bool isFocused, required int? maxLength})? buildCounter}
    InputCounterWidgetBuilder? buildCounter,

    /// param: {ScrollPhysics? scrollPhysics}
    ScrollPhysics? scrollPhysics,

    /// param: {Iterable<String>? autofillHints}
    Iterable<String>? autofillHints,

    /// param: {AutovalidateMode? autovalidateMode}
    AutovalidateMode? autovalidateMode,

    /// param: {ScrollController? scrollController}
    ScrollController? scrollController,

    /// param: {String? restorationId}
    String? restorationId,

    /// param: {bool enableIMEPersonalizedLearning = true}
    required bool enableIMEPersonalizedLearning,

    /// param: {MouseCursor? mouseCursor}
    MouseCursor? mouseCursor,

    /// param: {Widget Function(BuildContext, EditableTextState)? contextMenuBuilder = _defaultContextMenuBuilder}
    EditableTextContextMenuBuilder? contextMenuBuilder,

    /// param: {TextMagnifierConfiguration? magnifierConfiguration}
    TextMagnifierConfiguration? magnifierConfiguration,
  }) : super(
          key: key,
          controller: controller,
          initialValue: initialValue,
          focusNode: focusNode,
          decoration: decoration,
          keyboardType: keyboardType,
          textCapitalization: textCapitalization,
          textInputAction: textInputAction,
          style: style,
          strutStyle: strutStyle,
          textDirection: textDirection,
          textAlign: textAlign,
          textAlignVertical: textAlignVertical,
          autofocus: autofocus,
          readOnly: readOnly,
          toolbarOptions: toolbarOptions,
          showCursor: showCursor,
          obscuringCharacter: obscuringCharacter,
          obscureText: obscureText,
          autocorrect: autocorrect,
          smartDashesType: smartDashesType,
          smartQuotesType: smartQuotesType,
          enableSuggestions: enableSuggestions,
          maxLengthEnforcement: maxLengthEnforcement,
          maxLines: maxLines,
          minLines: minLines,
          expands: expands,
          maxLength: maxLength,
          onChanged: onChanged,
          onTap: onTap,
          onTapOutside: onTapOutside,
          onEditingComplete: onEditingComplete,
          onFieldSubmitted: onFieldSubmitted,
          onSaved: onSaved,
          validator: validator,
          inputFormatters: inputFormatters,
          enabled: enabled,
          cursorWidth: cursorWidth,
          cursorHeight: cursorHeight,
          cursorRadius: cursorRadius,
          cursorColor: cursorColor,
          keyboardAppearance: keyboardAppearance,
          scrollPadding: scrollPadding,
          enableInteractiveSelection: enableInteractiveSelection,
          selectionControls: selectionControls,
          buildCounter: buildCounter,
          scrollPhysics: scrollPhysics,
          autofillHints: autofillHints,
          autovalidateMode: autovalidateMode,
          scrollController: scrollController,
          restorationId: restorationId,
          enableIMEPersonalizedLearning: enableIMEPersonalizedLearning,
          mouseCursor: mouseCursor,
          contextMenuBuilder: contextMenuBuilder,
          magnifierConfiguration: magnifierConfiguration,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => TextFormField$Mate(
        key: p.getValue('key'),
        controller: p.getValue('controller'),
        initialValue: p.getValue('initialValue'),
        focusNode: p.getValue('focusNode'),
        decoration: p.getValue('decoration'),
        keyboardType: p.getValue('keyboardType'),
        textCapitalization: p.getValue('textCapitalization'),
        textInputAction: p.getValue('textInputAction'),
        style: p.getValue('style'),
        strutStyle: p.getValue('strutStyle'),
        textDirection: p.getValue('textDirection'),
        textAlign: p.getValue('textAlign'),
        textAlignVertical: p.getValue('textAlignVertical'),
        autofocus: p.getValue('autofocus'),
        readOnly: p.getValue('readOnly'),
        toolbarOptions: p.getValue('toolbarOptions'),
        showCursor: p.getValue('showCursor'),
        obscuringCharacter: p.getValue('obscuringCharacter'),
        obscureText: p.getValue('obscureText'),
        autocorrect: p.getValue('autocorrect'),
        smartDashesType: p.getValue('smartDashesType'),
        smartQuotesType: p.getValue('smartQuotesType'),
        enableSuggestions: p.getValue('enableSuggestions'),
        maxLengthEnforcement: p.getValue('maxLengthEnforcement'),
        maxLines: p.getValue('maxLines'),
        minLines: p.getValue('minLines'),
        expands: p.getValue('expands'),
        maxLength: p.getValue('maxLength'),
        onChanged: p.getValue('onChanged'),
        onTap: p.getValue('onTap'),
        onTapOutside: p.getValue('onTapOutside'),
        onEditingComplete: p.getValue('onEditingComplete'),
        onFieldSubmitted: p.getValue('onFieldSubmitted'),
        onSaved: p.getValue('onSaved'),
        validator: p.getValue('validator'),
        inputFormatters: p.getValue('inputFormatters'),
        enabled: p.getValue('enabled'),
        cursorWidth: p.getValue('cursorWidth'),
        cursorHeight: p.getValue('cursorHeight'),
        cursorRadius: p.getValue('cursorRadius'),
        cursorColor: p.getValue('cursorColor'),
        keyboardAppearance: p.getValue('keyboardAppearance'),
        scrollPadding: p.getValue('scrollPadding'),
        enableInteractiveSelection: p.getValue('enableInteractiveSelection'),
        selectionControls: p.getValue('selectionControls'),
        buildCounter: p.getValue('buildCounter'),
        scrollPhysics: p.getValue('scrollPhysics'),
        autofillHints: p.getValue('autofillHints'),
        autovalidateMode: p.getValue('autovalidateMode'),
        scrollController: p.getValue('scrollController'),
        restorationId: p.getValue('restorationId'),
        enableIMEPersonalizedLearning: p.getValue('enableIMEPersonalizedLearning'),
        mouseCursor: p.getValue('mouseCursor'),
        contextMenuBuilder: p.getValue('contextMenuBuilder'),
        magnifierConfiguration: p.getValue('magnifierConfiguration'),
      ),
    );
    mateParams.set(name: 'key', init: key);
    mateParams.set(name: 'controller', init: controller);
    mateParams.set(name: 'initialValue', init: initialValue);
    mateParams.set(name: 'focusNode', init: focusNode);
    mateParams.set(name: 'decoration', init: decoration);
    mateParams.set(name: 'keyboardType', init: keyboardType);
    mateParams.set(name: 'textCapitalization', init: textCapitalization);
    mateParams.set(name: 'textInputAction', init: textInputAction);
    mateParams.set(name: 'style', init: style);
    mateParams.set(name: 'strutStyle', init: strutStyle);
    mateParams.set(name: 'textDirection', init: textDirection);
    mateParams.set(name: 'textAlign', init: textAlign);
    mateParams.set(name: 'textAlignVertical', init: textAlignVertical);
    mateParams.set(name: 'autofocus', init: autofocus);
    mateParams.set(name: 'readOnly', init: readOnly);
    mateParams.set(name: 'toolbarOptions', init: toolbarOptions);
    mateParams.set(name: 'showCursor', init: showCursor);
    mateParams.set(name: 'obscuringCharacter', init: obscuringCharacter);
    mateParams.set(name: 'obscureText', init: obscureText);
    mateParams.set(name: 'autocorrect', init: autocorrect);
    mateParams.set(name: 'smartDashesType', init: smartDashesType);
    mateParams.set(name: 'smartQuotesType', init: smartQuotesType);
    mateParams.set(name: 'enableSuggestions', init: enableSuggestions);
    mateParams.set(name: 'maxLengthEnforcement', init: maxLengthEnforcement);
    mateParams.set(name: 'maxLines', init: maxLines);
    mateParams.set(name: 'minLines', init: minLines);
    mateParams.set(name: 'expands', init: expands);
    mateParams.set(name: 'maxLength', init: maxLength);
    mateParams.set(name: 'onChanged', init: onChanged);
    mateParams.set(name: 'onTap', init: onTap);
    mateParams.set(name: 'onTapOutside', init: onTapOutside);
    mateParams.set(name: 'onEditingComplete', init: onEditingComplete);
    mateParams.set(name: 'onFieldSubmitted', init: onFieldSubmitted);
    mateParams.set(name: 'onSaved', init: onSaved);
    mateParams.set(name: 'validator', init: validator);
    mateParams.set(name: 'inputFormatters', init: inputFormatters);
    mateParams.set(name: 'enabled', init: enabled);
    mateParams.set(name: 'cursorWidth', init: cursorWidth);
    mateParams.set(name: 'cursorHeight', init: cursorHeight);
    mateParams.set(name: 'cursorRadius', init: cursorRadius);
    mateParams.set(name: 'cursorColor', init: cursorColor);
    mateParams.set(name: 'keyboardAppearance', init: keyboardAppearance);
    mateParams.set(name: 'scrollPadding', init: scrollPadding);
    mateParams.set(name: 'enableInteractiveSelection', init: enableInteractiveSelection);
    mateParams.set(name: 'selectionControls', init: selectionControls);
    mateParams.set(name: 'buildCounter', init: buildCounter);
    mateParams.set(name: 'scrollPhysics', init: scrollPhysics);
    mateParams.set(name: 'autofillHints', init: autofillHints);
    mateParams.set(name: 'autovalidateMode', init: autovalidateMode);
    mateParams.set(name: 'scrollController', init: scrollController);
    mateParams.set(name: 'restorationId', init: restorationId);
    mateParams.set(name: 'enableIMEPersonalizedLearning', init: enableIMEPersonalizedLearning);
    mateParams.set(name: 'mouseCursor', init: mouseCursor);
    mateParams.set(name: 'contextMenuBuilder', init: contextMenuBuilder);
    mateParams.set(name: 'magnifierConfiguration', init: magnifierConfiguration);
  }
}
