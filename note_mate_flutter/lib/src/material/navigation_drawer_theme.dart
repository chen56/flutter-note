// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/material/navigation_drawer_theme.dart';
import 'dart:core';
import 'dart:ui';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/material/material_state.dart';
import 'package:flutter/src/painting/text_style.dart';
import 'package:flutter/src/widgets/icon_theme_data.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';

/// class NavigationDrawerThemeData with Diagnosticable
class NavigationDrawerThemeData$Mate extends NavigationDrawerThemeData with Mate<NavigationDrawerThemeData$Mate> {
  /// NavigationDrawerThemeData NavigationDrawerThemeData({double? tileHeight, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, Size? indicatorSize, MaterialStateProperty<TextStyle?>? labelTextStyle, MaterialStateProperty<IconThemeData?>? iconTheme})
  NavigationDrawerThemeData$Mate({
    /// param: {double? tileHeight}
    double? tileHeight,

    /// param: {Color? backgroundColor}
    Color? backgroundColor,

    /// param: {double? elevation}
    double? elevation,

    /// param: {Color? shadowColor}
    Color? shadowColor,

    /// param: {Color? surfaceTintColor}
    Color? surfaceTintColor,

    /// param: {Color? indicatorColor}
    Color? indicatorColor,

    /// param: {ShapeBorder? indicatorShape}
    ShapeBorder? indicatorShape,

    /// param: {Size? indicatorSize}
    Size? indicatorSize,

    /// param: {MaterialStateProperty<TextStyle?>? labelTextStyle}
    MaterialStateProperty<TextStyle?>? labelTextStyle,

    /// param: {MaterialStateProperty<IconThemeData?>? iconTheme}
    MaterialStateProperty<IconThemeData?>? iconTheme,
  }) : super(
          tileHeight: tileHeight,
          backgroundColor: backgroundColor,
          elevation: elevation,
          shadowColor: shadowColor,
          surfaceTintColor: surfaceTintColor,
          indicatorColor: indicatorColor,
          indicatorShape: indicatorShape,
          indicatorSize: indicatorSize,
          labelTextStyle: labelTextStyle,
          iconTheme: iconTheme,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => NavigationDrawerThemeData$Mate(
        tileHeight: p.getValue('tileHeight'),
        backgroundColor: p.getValue('backgroundColor'),
        elevation: p.getValue('elevation'),
        shadowColor: p.getValue('shadowColor'),
        surfaceTintColor: p.getValue('surfaceTintColor'),
        indicatorColor: p.getValue('indicatorColor'),
        indicatorShape: p.getValue('indicatorShape'),
        indicatorSize: p.getValue('indicatorSize'),
        labelTextStyle: p.getValue('labelTextStyle'),
        iconTheme: p.getValue('iconTheme'),
      ),
    );
    mateParams.set(name: 'tileHeight', init: tileHeight);
    mateParams.set(name: 'backgroundColor', init: backgroundColor);
    mateParams.set(name: 'elevation', init: elevation);
    mateParams.set(name: 'shadowColor', init: shadowColor);
    mateParams.set(name: 'surfaceTintColor', init: surfaceTintColor);
    mateParams.set(name: 'indicatorColor', init: indicatorColor);
    mateParams.set(name: 'indicatorShape', init: indicatorShape);
    mateParams.set(name: 'indicatorSize', init: indicatorSize);
    mateParams.set(name: 'labelTextStyle', init: labelTextStyle);
    mateParams.set(name: 'iconTheme', init: iconTheme);
  }
}

/// class NavigationDrawerTheme extends InheritedTheme
class NavigationDrawerTheme$Mate extends NavigationDrawerTheme with WidgetMate<NavigationDrawerTheme$Mate> {
  /// NavigationDrawerTheme NavigationDrawerTheme({Key? key, required NavigationDrawerThemeData data, required Widget child})
  NavigationDrawerTheme$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {required NavigationDrawerThemeData data}
    required NavigationDrawerThemeData data,

    /// param: {required Widget child}
    required Widget child,
  }) : super(
          key: key,
          data: data,
          child: child,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => NavigationDrawerTheme$Mate(
        key: p.getValue('key'),
        data: p.getValue('data'),
        child: p.getValue('child'),
      ),
    );
    mateParams.set(name: 'key', init: key);
    mateParams.set(name: 'data', init: data);
    mateParams.set(name: 'child', init: child);
  }
}
