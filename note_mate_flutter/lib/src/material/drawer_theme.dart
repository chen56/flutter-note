// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/material/drawer_theme.dart';
import 'dart:ui';
import 'dart:core';
import 'package:flutter/src/painting/borders.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';

/// class DrawerThemeData with Diagnosticable
class DrawerThemeData$Mate extends DrawerThemeData with Mate<DrawerThemeData$Mate> {
  /// DrawerThemeData DrawerThemeData({Color? backgroundColor, Color? scrimColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, ShapeBorder? shape, ShapeBorder? endShape, double? width})
  DrawerThemeData$Mate({
    /// param: {Color? backgroundColor}
    Color? backgroundColor,

    /// param: {Color? scrimColor}
    Color? scrimColor,

    /// param: {double? elevation}
    double? elevation,

    /// param: {Color? shadowColor}
    Color? shadowColor,

    /// param: {Color? surfaceTintColor}
    Color? surfaceTintColor,

    /// param: {ShapeBorder? shape}
    ShapeBorder? shape,

    /// param: {ShapeBorder? endShape}
    ShapeBorder? endShape,

    /// param: {double? width}
    double? width,
  }) : super(
          backgroundColor: backgroundColor,
          scrimColor: scrimColor,
          elevation: elevation,
          shadowColor: shadowColor,
          surfaceTintColor: surfaceTintColor,
          shape: shape,
          endShape: endShape,
          width: width,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => DrawerThemeData$Mate(
        backgroundColor: p.getValue('backgroundColor'),
        scrimColor: p.getValue('scrimColor'),
        elevation: p.getValue('elevation'),
        shadowColor: p.getValue('shadowColor'),
        surfaceTintColor: p.getValue('surfaceTintColor'),
        shape: p.getValue('shape'),
        endShape: p.getValue('endShape'),
        width: p.getValue('width'),
      ),
    );
    mateParams.set(name: 'backgroundColor', init: backgroundColor);
    mateParams.set(name: 'scrimColor', init: scrimColor);
    mateParams.set(name: 'elevation', init: elevation);
    mateParams.set(name: 'shadowColor', init: shadowColor);
    mateParams.set(name: 'surfaceTintColor', init: surfaceTintColor);
    mateParams.set(name: 'shape', init: shape);
    mateParams.set(name: 'endShape', init: endShape);
    mateParams.set(name: 'width', init: width);
  }
}

/// class DrawerTheme extends InheritedTheme
class DrawerTheme$Mate extends DrawerTheme with WidgetMate<DrawerTheme$Mate> {
  /// DrawerTheme DrawerTheme({Key? key, required DrawerThemeData data, required Widget child})
  DrawerTheme$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {required DrawerThemeData data}
    required DrawerThemeData data,

    /// param: {required Widget child}
    required Widget child,
  }) : super(
          key: key,
          data: data,
          child: child,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => DrawerTheme$Mate(
        key: p.getValue('key'),
        data: p.getValue('data'),
        child: p.getValue('child'),
      ),
    );
    mateParams.set(name: 'key', init: key);
    mateParams.set(name: 'data', init: data);
    mateParams.set(name: 'child', init: child);
  }
}
