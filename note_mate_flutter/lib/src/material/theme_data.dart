// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/material/theme_data.dart';
import 'dart:core';
import 'package:flutter/src/cupertino/theme.dart';
import 'package:flutter/src/material/input_decorator.dart';
import 'package:flutter/src/material/page_transitions_theme.dart';
import 'package:flutter/src/foundation/platform.dart';
import 'package:flutter/src/material/scrollbar_theme.dart';
import 'package:flutter/src/material/ink_well.dart';
import 'dart:ui';
import 'package:flutter/src/material/color_scheme.dart';
import 'package:flutter/src/widgets/icon_theme_data.dart';
import 'package:flutter/src/material/text_theme.dart';
import 'package:flutter/src/material/typography.dart';
import 'package:flutter/src/material/app_bar_theme.dart';
import 'package:flutter/src/material/badge_theme.dart';
import 'package:flutter/src/material/banner_theme.dart';
import 'package:flutter/src/material/bottom_app_bar_theme.dart';
import 'package:flutter/src/material/bottom_navigation_bar_theme.dart';
import 'package:flutter/src/material/bottom_sheet_theme.dart';
import 'package:flutter/src/material/button_bar_theme.dart';
import 'package:flutter/src/material/button_theme.dart';
import 'package:flutter/src/material/card_theme.dart';
import 'package:flutter/src/material/checkbox_theme.dart';
import 'package:flutter/src/material/chip_theme.dart';
import 'package:flutter/src/material/data_table_theme.dart';
import 'package:flutter/src/material/date_picker_theme.dart';
import 'package:flutter/src/material/dialog_theme.dart';
import 'package:flutter/src/material/divider_theme.dart';
import 'package:flutter/src/material/drawer_theme.dart';
import 'package:flutter/src/material/dropdown_menu_theme.dart';
import 'package:flutter/src/material/elevated_button_theme.dart';
import 'package:flutter/src/material/expansion_tile_theme.dart';
import 'package:flutter/src/material/filled_button_theme.dart';
import 'package:flutter/src/material/floating_action_button_theme.dart';
import 'package:flutter/src/material/icon_button_theme.dart';
import 'package:flutter/src/material/list_tile_theme.dart';
import 'package:flutter/src/material/menu_bar_theme.dart';
import 'package:flutter/src/material/menu_button_theme.dart';
import 'package:flutter/src/material/menu_theme.dart';
import 'package:flutter/src/material/navigation_bar_theme.dart';
import 'package:flutter/src/material/navigation_drawer_theme.dart';
import 'package:flutter/src/material/navigation_rail_theme.dart';
import 'package:flutter/src/material/outlined_button_theme.dart';
import 'package:flutter/src/material/popup_menu_theme.dart';
import 'package:flutter/src/material/progress_indicator_theme.dart';
import 'package:flutter/src/material/radio_theme.dart';
import 'package:flutter/src/material/segmented_button_theme.dart';
import 'package:flutter/src/material/slider_theme.dart';
import 'package:flutter/src/material/snack_bar_theme.dart';
import 'package:flutter/src/material/switch_theme.dart';
import 'package:flutter/src/material/tab_bar_theme.dart';
import 'package:flutter/src/material/text_button_theme.dart';
import 'package:flutter/src/material/text_selection_theme.dart';
import 'package:flutter/src/material/time_picker_theme.dart';
import 'package:flutter/src/material/toggle_buttons_theme.dart';
import 'package:flutter/src/material/tooltip_theme.dart';
import 'package:note/mate.dart';

/// class ThemeData with Diagnosticable
class ThemeData$Mate extends ThemeData with Mate<ThemeData$Mate> {
  /// ThemeData ThemeData.raw({required bool applyElevationOverlayColor, required NoDefaultCupertinoThemeData? cupertinoOverrideTheme, required Map<Object, ThemeExtension<dynamic>> extensions, required InputDecorationTheme inputDecorationTheme, required MaterialTapTargetSize materialTapTargetSize, required PageTransitionsTheme pageTransitionsTheme, required TargetPlatform platform, required ScrollbarThemeData scrollbarTheme, required InteractiveInkFeatureFactory splashFactory, required bool useMaterial3, required VisualDensity visualDensity, required Color canvasColor, required Color cardColor, required ColorScheme colorScheme, required Color dialogBackgroundColor, required Color disabledColor, required Color dividerColor, required Color focusColor, required Color highlightColor, required Color hintColor, required Color hoverColor, required Color indicatorColor, required Color primaryColor, required Color primaryColorDark, required Color primaryColorLight, required Color scaffoldBackgroundColor, required Color secondaryHeaderColor, required Color shadowColor, required Color splashColor, required Color unselectedWidgetColor, required IconThemeData iconTheme, required IconThemeData primaryIconTheme, required TextTheme primaryTextTheme, required TextTheme textTheme, required Typography typography, required AppBarTheme appBarTheme, required BadgeThemeData badgeTheme, required MaterialBannerThemeData bannerTheme, required BottomAppBarTheme bottomAppBarTheme, required BottomNavigationBarThemeData bottomNavigationBarTheme, required BottomSheetThemeData bottomSheetTheme, required ButtonBarThemeData buttonBarTheme, required ButtonThemeData buttonTheme, required CardTheme cardTheme, required CheckboxThemeData checkboxTheme, required ChipThemeData chipTheme, required DataTableThemeData dataTableTheme, required DatePickerThemeData datePickerTheme, required DialogTheme dialogTheme, required DividerThemeData dividerTheme, required DrawerThemeData drawerTheme, required DropdownMenuThemeData dropdownMenuTheme, required ElevatedButtonThemeData elevatedButtonTheme, required ExpansionTileThemeData expansionTileTheme, required FilledButtonThemeData filledButtonTheme, required FloatingActionButtonThemeData floatingActionButtonTheme, required IconButtonThemeData iconButtonTheme, required ListTileThemeData listTileTheme, required MenuBarThemeData menuBarTheme, required MenuButtonThemeData menuButtonTheme, required MenuThemeData menuTheme, required NavigationBarThemeData navigationBarTheme, required NavigationDrawerThemeData navigationDrawerTheme, required NavigationRailThemeData navigationRailTheme, required OutlinedButtonThemeData outlinedButtonTheme, required PopupMenuThemeData popupMenuTheme, required ProgressIndicatorThemeData progressIndicatorTheme, required RadioThemeData radioTheme, required SegmentedButtonThemeData segmentedButtonTheme, required SliderThemeData sliderTheme, required SnackBarThemeData snackBarTheme, required SwitchThemeData switchTheme, required TabBarTheme tabBarTheme, required TextButtonThemeData textButtonTheme, required TextSelectionThemeData textSelectionTheme, required TimePickerThemeData timePickerTheme, required ToggleButtonsThemeData toggleButtonsTheme, required TooltipThemeData tooltipTheme, Color? accentColor, Brightness? accentColorBrightness, bool? fixTextFieldOutlineLabel, Brightness? primaryColorBrightness, AndroidOverscrollIndicator? androidOverscrollIndicator, Color? toggleableActiveColor, Color? selectedRowColor, Color? errorColor, Color? backgroundColor, Color? bottomAppBarColor})
  ThemeData$Mate.raw({
    /// optionalParameters: {required bool applyElevationOverlayColor} , hasDefaultValue:false, defaultValueCode:null
    required bool applyElevationOverlayColor,

    /// optionalParameters: {required NoDefaultCupertinoThemeData? cupertinoOverrideTheme} , hasDefaultValue:false, defaultValueCode:null
    required NoDefaultCupertinoThemeData? cupertinoOverrideTheme,

    /// optionalParameters: {required Map<Object, ThemeExtension<dynamic>> extensions} , hasDefaultValue:false, defaultValueCode:null
    required Map<Object, ThemeExtension<dynamic>> extensions,

    /// optionalParameters: {required InputDecorationTheme inputDecorationTheme} , hasDefaultValue:false, defaultValueCode:null
    required InputDecorationTheme inputDecorationTheme,

    /// optionalParameters: {required MaterialTapTargetSize materialTapTargetSize} , hasDefaultValue:false, defaultValueCode:null
    required MaterialTapTargetSize materialTapTargetSize,

    /// optionalParameters: {required PageTransitionsTheme pageTransitionsTheme} , hasDefaultValue:false, defaultValueCode:null
    required PageTransitionsTheme pageTransitionsTheme,

    /// optionalParameters: {required TargetPlatform platform} , hasDefaultValue:false, defaultValueCode:null
    required TargetPlatform platform,

    /// optionalParameters: {required ScrollbarThemeData scrollbarTheme} , hasDefaultValue:false, defaultValueCode:null
    required ScrollbarThemeData scrollbarTheme,

    /// optionalParameters: {required InteractiveInkFeatureFactory splashFactory} , hasDefaultValue:false, defaultValueCode:null
    required InteractiveInkFeatureFactory splashFactory,

    /// optionalParameters: {required bool useMaterial3} , hasDefaultValue:false, defaultValueCode:null
    required bool useMaterial3,

    /// optionalParameters: {required VisualDensity visualDensity} , hasDefaultValue:false, defaultValueCode:null
    required VisualDensity visualDensity,

    /// optionalParameters: {required Color canvasColor} , hasDefaultValue:false, defaultValueCode:null
    required Color canvasColor,

    /// optionalParameters: {required Color cardColor} , hasDefaultValue:false, defaultValueCode:null
    required Color cardColor,

    /// optionalParameters: {required ColorScheme colorScheme} , hasDefaultValue:false, defaultValueCode:null
    required ColorScheme colorScheme,

    /// optionalParameters: {required Color dialogBackgroundColor} , hasDefaultValue:false, defaultValueCode:null
    required Color dialogBackgroundColor,

    /// optionalParameters: {required Color disabledColor} , hasDefaultValue:false, defaultValueCode:null
    required Color disabledColor,

    /// optionalParameters: {required Color dividerColor} , hasDefaultValue:false, defaultValueCode:null
    required Color dividerColor,

    /// optionalParameters: {required Color focusColor} , hasDefaultValue:false, defaultValueCode:null
    required Color focusColor,

    /// optionalParameters: {required Color highlightColor} , hasDefaultValue:false, defaultValueCode:null
    required Color highlightColor,

    /// optionalParameters: {required Color hintColor} , hasDefaultValue:false, defaultValueCode:null
    required Color hintColor,

    /// optionalParameters: {required Color hoverColor} , hasDefaultValue:false, defaultValueCode:null
    required Color hoverColor,

    /// optionalParameters: {required Color indicatorColor} , hasDefaultValue:false, defaultValueCode:null
    required Color indicatorColor,

    /// optionalParameters: {required Color primaryColor} , hasDefaultValue:false, defaultValueCode:null
    required Color primaryColor,

    /// optionalParameters: {required Color primaryColorDark} , hasDefaultValue:false, defaultValueCode:null
    required Color primaryColorDark,

    /// optionalParameters: {required Color primaryColorLight} , hasDefaultValue:false, defaultValueCode:null
    required Color primaryColorLight,

    /// optionalParameters: {required Color scaffoldBackgroundColor} , hasDefaultValue:false, defaultValueCode:null
    required Color scaffoldBackgroundColor,

    /// optionalParameters: {required Color secondaryHeaderColor} , hasDefaultValue:false, defaultValueCode:null
    required Color secondaryHeaderColor,

    /// optionalParameters: {required Color shadowColor} , hasDefaultValue:false, defaultValueCode:null
    required Color shadowColor,

    /// optionalParameters: {required Color splashColor} , hasDefaultValue:false, defaultValueCode:null
    required Color splashColor,

    /// optionalParameters: {required Color unselectedWidgetColor} , hasDefaultValue:false, defaultValueCode:null
    required Color unselectedWidgetColor,

    /// optionalParameters: {required IconThemeData iconTheme} , hasDefaultValue:false, defaultValueCode:null
    required IconThemeData iconTheme,

    /// optionalParameters: {required IconThemeData primaryIconTheme} , hasDefaultValue:false, defaultValueCode:null
    required IconThemeData primaryIconTheme,

    /// optionalParameters: {required TextTheme primaryTextTheme} , hasDefaultValue:false, defaultValueCode:null
    required TextTheme primaryTextTheme,

    /// optionalParameters: {required TextTheme textTheme} , hasDefaultValue:false, defaultValueCode:null
    required TextTheme textTheme,

    /// optionalParameters: {required Typography typography} , hasDefaultValue:false, defaultValueCode:null
    required Typography typography,

    /// optionalParameters: {required AppBarTheme appBarTheme} , hasDefaultValue:false, defaultValueCode:null
    required AppBarTheme appBarTheme,

    /// optionalParameters: {required BadgeThemeData badgeTheme} , hasDefaultValue:false, defaultValueCode:null
    required BadgeThemeData badgeTheme,

    /// optionalParameters: {required MaterialBannerThemeData bannerTheme} , hasDefaultValue:false, defaultValueCode:null
    required MaterialBannerThemeData bannerTheme,

    /// optionalParameters: {required BottomAppBarTheme bottomAppBarTheme} , hasDefaultValue:false, defaultValueCode:null
    required BottomAppBarTheme bottomAppBarTheme,

    /// optionalParameters: {required BottomNavigationBarThemeData bottomNavigationBarTheme} , hasDefaultValue:false, defaultValueCode:null
    required BottomNavigationBarThemeData bottomNavigationBarTheme,

    /// optionalParameters: {required BottomSheetThemeData bottomSheetTheme} , hasDefaultValue:false, defaultValueCode:null
    required BottomSheetThemeData bottomSheetTheme,

    /// optionalParameters: {required ButtonBarThemeData buttonBarTheme} , hasDefaultValue:false, defaultValueCode:null
    required ButtonBarThemeData buttonBarTheme,

    /// optionalParameters: {required ButtonThemeData buttonTheme} , hasDefaultValue:false, defaultValueCode:null
    required ButtonThemeData buttonTheme,

    /// optionalParameters: {required CardTheme cardTheme} , hasDefaultValue:false, defaultValueCode:null
    required CardTheme cardTheme,

    /// optionalParameters: {required CheckboxThemeData checkboxTheme} , hasDefaultValue:false, defaultValueCode:null
    required CheckboxThemeData checkboxTheme,

    /// optionalParameters: {required ChipThemeData chipTheme} , hasDefaultValue:false, defaultValueCode:null
    required ChipThemeData chipTheme,

    /// optionalParameters: {required DataTableThemeData dataTableTheme} , hasDefaultValue:false, defaultValueCode:null
    required DataTableThemeData dataTableTheme,

    /// optionalParameters: {required DatePickerThemeData datePickerTheme} , hasDefaultValue:false, defaultValueCode:null
    required DatePickerThemeData datePickerTheme,

    /// optionalParameters: {required DialogTheme dialogTheme} , hasDefaultValue:false, defaultValueCode:null
    required DialogTheme dialogTheme,

    /// optionalParameters: {required DividerThemeData dividerTheme} , hasDefaultValue:false, defaultValueCode:null
    required DividerThemeData dividerTheme,

    /// optionalParameters: {required DrawerThemeData drawerTheme} , hasDefaultValue:false, defaultValueCode:null
    required DrawerThemeData drawerTheme,

    /// optionalParameters: {required DropdownMenuThemeData dropdownMenuTheme} , hasDefaultValue:false, defaultValueCode:null
    required DropdownMenuThemeData dropdownMenuTheme,

    /// optionalParameters: {required ElevatedButtonThemeData elevatedButtonTheme} , hasDefaultValue:false, defaultValueCode:null
    required ElevatedButtonThemeData elevatedButtonTheme,

    /// optionalParameters: {required ExpansionTileThemeData expansionTileTheme} , hasDefaultValue:false, defaultValueCode:null
    required ExpansionTileThemeData expansionTileTheme,

    /// optionalParameters: {required FilledButtonThemeData filledButtonTheme} , hasDefaultValue:false, defaultValueCode:null
    required FilledButtonThemeData filledButtonTheme,

    /// optionalParameters: {required FloatingActionButtonThemeData floatingActionButtonTheme} , hasDefaultValue:false, defaultValueCode:null
    required FloatingActionButtonThemeData floatingActionButtonTheme,

    /// optionalParameters: {required IconButtonThemeData iconButtonTheme} , hasDefaultValue:false, defaultValueCode:null
    required IconButtonThemeData iconButtonTheme,

    /// optionalParameters: {required ListTileThemeData listTileTheme} , hasDefaultValue:false, defaultValueCode:null
    required ListTileThemeData listTileTheme,

    /// optionalParameters: {required MenuBarThemeData menuBarTheme} , hasDefaultValue:false, defaultValueCode:null
    required MenuBarThemeData menuBarTheme,

    /// optionalParameters: {required MenuButtonThemeData menuButtonTheme} , hasDefaultValue:false, defaultValueCode:null
    required MenuButtonThemeData menuButtonTheme,

    /// optionalParameters: {required MenuThemeData menuTheme} , hasDefaultValue:false, defaultValueCode:null
    required MenuThemeData menuTheme,

    /// optionalParameters: {required NavigationBarThemeData navigationBarTheme} , hasDefaultValue:false, defaultValueCode:null
    required NavigationBarThemeData navigationBarTheme,

    /// optionalParameters: {required NavigationDrawerThemeData navigationDrawerTheme} , hasDefaultValue:false, defaultValueCode:null
    required NavigationDrawerThemeData navigationDrawerTheme,

    /// optionalParameters: {required NavigationRailThemeData navigationRailTheme} , hasDefaultValue:false, defaultValueCode:null
    required NavigationRailThemeData navigationRailTheme,

    /// optionalParameters: {required OutlinedButtonThemeData outlinedButtonTheme} , hasDefaultValue:false, defaultValueCode:null
    required OutlinedButtonThemeData outlinedButtonTheme,

    /// optionalParameters: {required PopupMenuThemeData popupMenuTheme} , hasDefaultValue:false, defaultValueCode:null
    required PopupMenuThemeData popupMenuTheme,

    /// optionalParameters: {required ProgressIndicatorThemeData progressIndicatorTheme} , hasDefaultValue:false, defaultValueCode:null
    required ProgressIndicatorThemeData progressIndicatorTheme,

    /// optionalParameters: {required RadioThemeData radioTheme} , hasDefaultValue:false, defaultValueCode:null
    required RadioThemeData radioTheme,

    /// optionalParameters: {required SegmentedButtonThemeData segmentedButtonTheme} , hasDefaultValue:false, defaultValueCode:null
    required SegmentedButtonThemeData segmentedButtonTheme,

    /// optionalParameters: {required SliderThemeData sliderTheme} , hasDefaultValue:false, defaultValueCode:null
    required SliderThemeData sliderTheme,

    /// optionalParameters: {required SnackBarThemeData snackBarTheme} , hasDefaultValue:false, defaultValueCode:null
    required SnackBarThemeData snackBarTheme,

    /// optionalParameters: {required SwitchThemeData switchTheme} , hasDefaultValue:false, defaultValueCode:null
    required SwitchThemeData switchTheme,

    /// optionalParameters: {required TabBarTheme tabBarTheme} , hasDefaultValue:false, defaultValueCode:null
    required TabBarTheme tabBarTheme,

    /// optionalParameters: {required TextButtonThemeData textButtonTheme} , hasDefaultValue:false, defaultValueCode:null
    required TextButtonThemeData textButtonTheme,

    /// optionalParameters: {required TextSelectionThemeData textSelectionTheme} , hasDefaultValue:false, defaultValueCode:null
    required TextSelectionThemeData textSelectionTheme,

    /// optionalParameters: {required TimePickerThemeData timePickerTheme} , hasDefaultValue:false, defaultValueCode:null
    required TimePickerThemeData timePickerTheme,

    /// optionalParameters: {required ToggleButtonsThemeData toggleButtonsTheme} , hasDefaultValue:false, defaultValueCode:null
    required ToggleButtonsThemeData toggleButtonsTheme,

    /// optionalParameters: {required TooltipThemeData tooltipTheme} , hasDefaultValue:false, defaultValueCode:null
    required TooltipThemeData tooltipTheme,
  }) : super.raw(
          applyElevationOverlayColor: applyElevationOverlayColor,
          cupertinoOverrideTheme: cupertinoOverrideTheme,
          extensions: extensions,
          inputDecorationTheme: inputDecorationTheme,
          materialTapTargetSize: materialTapTargetSize,
          pageTransitionsTheme: pageTransitionsTheme,
          platform: platform,
          scrollbarTheme: scrollbarTheme,
          splashFactory: splashFactory,
          useMaterial3: useMaterial3,
          visualDensity: visualDensity,
          canvasColor: canvasColor,
          cardColor: cardColor,
          colorScheme: colorScheme,
          dialogBackgroundColor: dialogBackgroundColor,
          disabledColor: disabledColor,
          dividerColor: dividerColor,
          focusColor: focusColor,
          highlightColor: highlightColor,
          hintColor: hintColor,
          hoverColor: hoverColor,
          indicatorColor: indicatorColor,
          primaryColor: primaryColor,
          primaryColorDark: primaryColorDark,
          primaryColorLight: primaryColorLight,
          scaffoldBackgroundColor: scaffoldBackgroundColor,
          secondaryHeaderColor: secondaryHeaderColor,
          shadowColor: shadowColor,
          splashColor: splashColor,
          unselectedWidgetColor: unselectedWidgetColor,
          iconTheme: iconTheme,
          primaryIconTheme: primaryIconTheme,
          primaryTextTheme: primaryTextTheme,
          textTheme: textTheme,
          typography: typography,
          appBarTheme: appBarTheme,
          badgeTheme: badgeTheme,
          bannerTheme: bannerTheme,
          bottomAppBarTheme: bottomAppBarTheme,
          bottomNavigationBarTheme: bottomNavigationBarTheme,
          bottomSheetTheme: bottomSheetTheme,
          buttonBarTheme: buttonBarTheme,
          buttonTheme: buttonTheme,
          cardTheme: cardTheme,
          checkboxTheme: checkboxTheme,
          chipTheme: chipTheme,
          dataTableTheme: dataTableTheme,
          datePickerTheme: datePickerTheme,
          dialogTheme: dialogTheme,
          dividerTheme: dividerTheme,
          drawerTheme: drawerTheme,
          dropdownMenuTheme: dropdownMenuTheme,
          elevatedButtonTheme: elevatedButtonTheme,
          expansionTileTheme: expansionTileTheme,
          filledButtonTheme: filledButtonTheme,
          floatingActionButtonTheme: floatingActionButtonTheme,
          iconButtonTheme: iconButtonTheme,
          listTileTheme: listTileTheme,
          menuBarTheme: menuBarTheme,
          menuButtonTheme: menuButtonTheme,
          menuTheme: menuTheme,
          navigationBarTheme: navigationBarTheme,
          navigationDrawerTheme: navigationDrawerTheme,
          navigationRailTheme: navigationRailTheme,
          outlinedButtonTheme: outlinedButtonTheme,
          popupMenuTheme: popupMenuTheme,
          progressIndicatorTheme: progressIndicatorTheme,
          radioTheme: radioTheme,
          segmentedButtonTheme: segmentedButtonTheme,
          sliderTheme: sliderTheme,
          snackBarTheme: snackBarTheme,
          switchTheme: switchTheme,
          tabBarTheme: tabBarTheme,
          textButtonTheme: textButtonTheme,
          textSelectionTheme: textSelectionTheme,
          timePickerTheme: timePickerTheme,
          toggleButtonsTheme: toggleButtonsTheme,
          tooltipTheme: tooltipTheme,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => ThemeData$Mate.raw(
        applyElevationOverlayColor: p.getValue('applyElevationOverlayColor'),
        cupertinoOverrideTheme: p.getValue('cupertinoOverrideTheme'),
        extensions: p.getValue('extensions'),
        inputDecorationTheme: p.getValue('inputDecorationTheme'),
        materialTapTargetSize: p.getValue('materialTapTargetSize'),
        pageTransitionsTheme: p.getValue('pageTransitionsTheme'),
        platform: p.getValue('platform'),
        scrollbarTheme: p.getValue('scrollbarTheme'),
        splashFactory: p.getValue('splashFactory'),
        useMaterial3: p.getValue('useMaterial3'),
        visualDensity: p.getValue('visualDensity'),
        canvasColor: p.getValue('canvasColor'),
        cardColor: p.getValue('cardColor'),
        colorScheme: p.getValue('colorScheme'),
        dialogBackgroundColor: p.getValue('dialogBackgroundColor'),
        disabledColor: p.getValue('disabledColor'),
        dividerColor: p.getValue('dividerColor'),
        focusColor: p.getValue('focusColor'),
        highlightColor: p.getValue('highlightColor'),
        hintColor: p.getValue('hintColor'),
        hoverColor: p.getValue('hoverColor'),
        indicatorColor: p.getValue('indicatorColor'),
        primaryColor: p.getValue('primaryColor'),
        primaryColorDark: p.getValue('primaryColorDark'),
        primaryColorLight: p.getValue('primaryColorLight'),
        scaffoldBackgroundColor: p.getValue('scaffoldBackgroundColor'),
        secondaryHeaderColor: p.getValue('secondaryHeaderColor'),
        shadowColor: p.getValue('shadowColor'),
        splashColor: p.getValue('splashColor'),
        unselectedWidgetColor: p.getValue('unselectedWidgetColor'),
        iconTheme: p.getValue('iconTheme'),
        primaryIconTheme: p.getValue('primaryIconTheme'),
        primaryTextTheme: p.getValue('primaryTextTheme'),
        textTheme: p.getValue('textTheme'),
        typography: p.getValue('typography'),
        appBarTheme: p.getValue('appBarTheme'),
        badgeTheme: p.getValue('badgeTheme'),
        bannerTheme: p.getValue('bannerTheme'),
        bottomAppBarTheme: p.getValue('bottomAppBarTheme'),
        bottomNavigationBarTheme: p.getValue('bottomNavigationBarTheme'),
        bottomSheetTheme: p.getValue('bottomSheetTheme'),
        buttonBarTheme: p.getValue('buttonBarTheme'),
        buttonTheme: p.getValue('buttonTheme'),
        cardTheme: p.getValue('cardTheme'),
        checkboxTheme: p.getValue('checkboxTheme'),
        chipTheme: p.getValue('chipTheme'),
        dataTableTheme: p.getValue('dataTableTheme'),
        datePickerTheme: p.getValue('datePickerTheme'),
        dialogTheme: p.getValue('dialogTheme'),
        dividerTheme: p.getValue('dividerTheme'),
        drawerTheme: p.getValue('drawerTheme'),
        dropdownMenuTheme: p.getValue('dropdownMenuTheme'),
        elevatedButtonTheme: p.getValue('elevatedButtonTheme'),
        expansionTileTheme: p.getValue('expansionTileTheme'),
        filledButtonTheme: p.getValue('filledButtonTheme'),
        floatingActionButtonTheme: p.getValue('floatingActionButtonTheme'),
        iconButtonTheme: p.getValue('iconButtonTheme'),
        listTileTheme: p.getValue('listTileTheme'),
        menuBarTheme: p.getValue('menuBarTheme'),
        menuButtonTheme: p.getValue('menuButtonTheme'),
        menuTheme: p.getValue('menuTheme'),
        navigationBarTheme: p.getValue('navigationBarTheme'),
        navigationDrawerTheme: p.getValue('navigationDrawerTheme'),
        navigationRailTheme: p.getValue('navigationRailTheme'),
        outlinedButtonTheme: p.getValue('outlinedButtonTheme'),
        popupMenuTheme: p.getValue('popupMenuTheme'),
        progressIndicatorTheme: p.getValue('progressIndicatorTheme'),
        radioTheme: p.getValue('radioTheme'),
        segmentedButtonTheme: p.getValue('segmentedButtonTheme'),
        sliderTheme: p.getValue('sliderTheme'),
        snackBarTheme: p.getValue('snackBarTheme'),
        switchTheme: p.getValue('switchTheme'),
        tabBarTheme: p.getValue('tabBarTheme'),
        textButtonTheme: p.getValue('textButtonTheme'),
        textSelectionTheme: p.getValue('textSelectionTheme'),
        timePickerTheme: p.getValue('timePickerTheme'),
        toggleButtonsTheme: p.getValue('toggleButtonsTheme'),
        tooltipTheme: p.getValue('tooltipTheme'),
      ),
    );
    mateParams.set(name: 'applyElevationOverlayColor', init: applyElevationOverlayColor);
    mateParams.set(name: 'cupertinoOverrideTheme', init: cupertinoOverrideTheme);
    mateParams.set(name: 'extensions', init: extensions);
    mateParams.set(name: 'inputDecorationTheme', init: inputDecorationTheme);
    mateParams.set(name: 'materialTapTargetSize', init: materialTapTargetSize);
    mateParams.set(name: 'pageTransitionsTheme', init: pageTransitionsTheme);
    mateParams.set(name: 'platform', init: platform);
    mateParams.set(name: 'scrollbarTheme', init: scrollbarTheme);
    mateParams.set(name: 'splashFactory', init: splashFactory);
    mateParams.set(name: 'useMaterial3', init: useMaterial3);
    mateParams.set(name: 'visualDensity', init: visualDensity);
    mateParams.set(name: 'canvasColor', init: canvasColor);
    mateParams.set(name: 'cardColor', init: cardColor);
    mateParams.set(name: 'colorScheme', init: colorScheme);
    mateParams.set(name: 'dialogBackgroundColor', init: dialogBackgroundColor);
    mateParams.set(name: 'disabledColor', init: disabledColor);
    mateParams.set(name: 'dividerColor', init: dividerColor);
    mateParams.set(name: 'focusColor', init: focusColor);
    mateParams.set(name: 'highlightColor', init: highlightColor);
    mateParams.set(name: 'hintColor', init: hintColor);
    mateParams.set(name: 'hoverColor', init: hoverColor);
    mateParams.set(name: 'indicatorColor', init: indicatorColor);
    mateParams.set(name: 'primaryColor', init: primaryColor);
    mateParams.set(name: 'primaryColorDark', init: primaryColorDark);
    mateParams.set(name: 'primaryColorLight', init: primaryColorLight);
    mateParams.set(name: 'scaffoldBackgroundColor', init: scaffoldBackgroundColor);
    mateParams.set(name: 'secondaryHeaderColor', init: secondaryHeaderColor);
    mateParams.set(name: 'shadowColor', init: shadowColor);
    mateParams.set(name: 'splashColor', init: splashColor);
    mateParams.set(name: 'unselectedWidgetColor', init: unselectedWidgetColor);
    mateParams.set(name: 'iconTheme', init: iconTheme);
    mateParams.set(name: 'primaryIconTheme', init: primaryIconTheme);
    mateParams.set(name: 'primaryTextTheme', init: primaryTextTheme);
    mateParams.set(name: 'textTheme', init: textTheme);
    mateParams.set(name: 'typography', init: typography);
    mateParams.set(name: 'appBarTheme', init: appBarTheme);
    mateParams.set(name: 'badgeTheme', init: badgeTheme);
    mateParams.set(name: 'bannerTheme', init: bannerTheme);
    mateParams.set(name: 'bottomAppBarTheme', init: bottomAppBarTheme);
    mateParams.set(name: 'bottomNavigationBarTheme', init: bottomNavigationBarTheme);
    mateParams.set(name: 'bottomSheetTheme', init: bottomSheetTheme);
    mateParams.set(name: 'buttonBarTheme', init: buttonBarTheme);
    mateParams.set(name: 'buttonTheme', init: buttonTheme);
    mateParams.set(name: 'cardTheme', init: cardTheme);
    mateParams.set(name: 'checkboxTheme', init: checkboxTheme);
    mateParams.set(name: 'chipTheme', init: chipTheme);
    mateParams.set(name: 'dataTableTheme', init: dataTableTheme);
    mateParams.set(name: 'datePickerTheme', init: datePickerTheme);
    mateParams.set(name: 'dialogTheme', init: dialogTheme);
    mateParams.set(name: 'dividerTheme', init: dividerTheme);
    mateParams.set(name: 'drawerTheme', init: drawerTheme);
    mateParams.set(name: 'dropdownMenuTheme', init: dropdownMenuTheme);
    mateParams.set(name: 'elevatedButtonTheme', init: elevatedButtonTheme);
    mateParams.set(name: 'expansionTileTheme', init: expansionTileTheme);
    mateParams.set(name: 'filledButtonTheme', init: filledButtonTheme);
    mateParams.set(name: 'floatingActionButtonTheme', init: floatingActionButtonTheme);
    mateParams.set(name: 'iconButtonTheme', init: iconButtonTheme);
    mateParams.set(name: 'listTileTheme', init: listTileTheme);
    mateParams.set(name: 'menuBarTheme', init: menuBarTheme);
    mateParams.set(name: 'menuButtonTheme', init: menuButtonTheme);
    mateParams.set(name: 'menuTheme', init: menuTheme);
    mateParams.set(name: 'navigationBarTheme', init: navigationBarTheme);
    mateParams.set(name: 'navigationDrawerTheme', init: navigationDrawerTheme);
    mateParams.set(name: 'navigationRailTheme', init: navigationRailTheme);
    mateParams.set(name: 'outlinedButtonTheme', init: outlinedButtonTheme);
    mateParams.set(name: 'popupMenuTheme', init: popupMenuTheme);
    mateParams.set(name: 'progressIndicatorTheme', init: progressIndicatorTheme);
    mateParams.set(name: 'radioTheme', init: radioTheme);
    mateParams.set(name: 'segmentedButtonTheme', init: segmentedButtonTheme);
    mateParams.set(name: 'sliderTheme', init: sliderTheme);
    mateParams.set(name: 'snackBarTheme', init: snackBarTheme);
    mateParams.set(name: 'switchTheme', init: switchTheme);
    mateParams.set(name: 'tabBarTheme', init: tabBarTheme);
    mateParams.set(name: 'textButtonTheme', init: textButtonTheme);
    mateParams.set(name: 'textSelectionTheme', init: textSelectionTheme);
    mateParams.set(name: 'timePickerTheme', init: timePickerTheme);
    mateParams.set(name: 'toggleButtonsTheme', init: toggleButtonsTheme);
    mateParams.set(name: 'tooltipTheme', init: tooltipTheme);
  }
}

/// class MaterialBasedCupertinoThemeData extends CupertinoThemeData
class MaterialBasedCupertinoThemeData$Mate extends MaterialBasedCupertinoThemeData
    with Mate<MaterialBasedCupertinoThemeData$Mate> {
  /// MaterialBasedCupertinoThemeData MaterialBasedCupertinoThemeData({required ThemeData materialTheme})
  MaterialBasedCupertinoThemeData$Mate(
      {
      /// optionalParameters: {required ThemeData materialTheme} , hasDefaultValue:false, defaultValueCode:null
      required ThemeData materialTheme})
      : super(materialTheme: materialTheme) {
    mateParams = Params(
      init: this,
      builder: (p) => MaterialBasedCupertinoThemeData$Mate(materialTheme: p.getValue('materialTheme')),
    );
    mateParams.set(name: 'materialTheme', init: materialTheme);
  }
}

/// class VisualDensity with Diagnosticable
class VisualDensity$Mate extends VisualDensity with Mate<VisualDensity$Mate> {
  /// VisualDensity VisualDensity({double horizontal = 0.0, double vertical = 0.0})
  VisualDensity$Mate({
    /// optionalParameters: {double horizontal = 0.0} , hasDefaultValue:true, defaultValueCode:0.0
    required double horizontal,

    /// optionalParameters: {double vertical = 0.0} , hasDefaultValue:true, defaultValueCode:0.0
    required double vertical,
  }) : super(
          horizontal: horizontal,
          vertical: vertical,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => VisualDensity$Mate(
        horizontal: p.getValue('horizontal'),
        vertical: p.getValue('vertical'),
      ),
    );
    mateParams.set(name: 'horizontal', init: horizontal);
    mateParams.set(name: 'vertical', init: vertical);
  }
}
