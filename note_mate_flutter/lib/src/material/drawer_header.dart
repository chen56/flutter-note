// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/material/drawer_header.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/painting/decoration.dart';
import 'package:flutter/src/painting/edge_insets.dart';
import 'dart:core';
import 'package:flutter/src/animation/curves.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:note/mate.dart';

/// class DrawerHeader extends StatelessWidget
class DrawerHeader$Mate extends DrawerHeader with WidgetMate<DrawerHeader$Mate> {
  /// DrawerHeader DrawerHeader({Key? key, Decoration? decoration, EdgeInsetsGeometry? margin = const EdgeInsets.only(bottom: 8.0), EdgeInsetsGeometry padding = const EdgeInsets.fromLTRB(16.0, 16.0, 16.0, 8.0), Duration duration = const Duration(milliseconds: 250), Curve curve = Curves.fastOutSlowIn, required Widget? child})
  DrawerHeader$Mate({
    /// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
    Key? key,

    /// optionalParameters: {Decoration? decoration} , hasDefaultValue:false, defaultValueCode:null
    Decoration? decoration,

    /// optionalParameters: {EdgeInsetsGeometry? margin = const EdgeInsets.only(bottom: 8.0)} , hasDefaultValue:true, defaultValueCode:const EdgeInsets.only(bottom: 8.0)
    EdgeInsetsGeometry? margin,

    /// optionalParameters: {EdgeInsetsGeometry padding = const EdgeInsets.fromLTRB(16.0, 16.0, 16.0, 8.0)} , hasDefaultValue:true, defaultValueCode:const EdgeInsets.fromLTRB(16.0, 16.0, 16.0, 8.0)
    required EdgeInsetsGeometry padding,

    /// optionalParameters: {Duration duration = const Duration(milliseconds: 250)} , hasDefaultValue:true, defaultValueCode:const Duration(milliseconds: 250)
    required Duration duration,

    /// optionalParameters: {Curve curve = Curves.fastOutSlowIn} , hasDefaultValue:true, defaultValueCode:Curves.fastOutSlowIn
    required Curve curve,

    /// optionalParameters: {required Widget? child} , hasDefaultValue:false, defaultValueCode:null
    required Widget? child,
  }) : super(
          key: key,
          decoration: decoration,
          margin: margin,
          padding: padding,
          duration: duration,
          curve: curve,
          child: child,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => DrawerHeader$Mate(
        key: p.getValue('key'),
        decoration: p.getValue('decoration'),
        margin: p.getValue('margin'),
        padding: p.getValue('padding'),
        duration: p.getValue('duration'),
        curve: p.getValue('curve'),
        child: p.getValue('child'),
      ),
    );
    mateParams.set(name: 'key', init: key);
    mateParams.set(name: 'decoration', init: decoration);
    mateParams.set(name: 'margin', init: margin);
    mateParams.set(name: 'padding', init: padding);
    mateParams.set(name: 'duration', init: duration);
    mateParams.set(name: 'curve', init: curve);
    mateParams.set(name: 'child', init: child);
  }
}
