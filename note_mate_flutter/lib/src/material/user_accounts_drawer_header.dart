// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/material/user_accounts_drawer_header.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/painting/decoration.dart';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'dart:core';
import 'dart:ui';
import 'package:note/mate.dart';

/// class UserAccountsDrawerHeader extends StatefulWidget
class UserAccountsDrawerHeader$Mate extends UserAccountsDrawerHeader with WidgetMate<UserAccountsDrawerHeader$Mate> {
  /// UserAccountsDrawerHeader UserAccountsDrawerHeader({Key? key, Decoration? decoration, EdgeInsetsGeometry? margin = const EdgeInsets.only(bottom: 8.0), Widget? currentAccountPicture, List<Widget>? otherAccountsPictures, Size currentAccountPictureSize = const Size.square(72.0), Size otherAccountsPicturesSize = const Size.square(40.0), required Widget? accountName, required Widget? accountEmail, void Function()? onDetailsPressed, Color arrowColor = Colors.white})
  UserAccountsDrawerHeader$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {Decoration? decoration}
    Decoration? decoration,

    /// param: {EdgeInsetsGeometry? margin = const EdgeInsets.only(bottom: 8.0)}
    EdgeInsetsGeometry? margin,

    /// param: {Widget? currentAccountPicture}
    Widget? currentAccountPicture,

    /// param: {List<Widget>? otherAccountsPictures}
    List<Widget>? otherAccountsPictures,

    /// param: {Size currentAccountPictureSize = const Size.square(72.0)}
    required Size currentAccountPictureSize,

    /// param: {Size otherAccountsPicturesSize = const Size.square(40.0)}
    required Size otherAccountsPicturesSize,

    /// param: {required Widget? accountName}
    required Widget? accountName,

    /// param: {required Widget? accountEmail}
    required Widget? accountEmail,

    /// param: {void Function()? onDetailsPressed}
    VoidCallback? onDetailsPressed,

    /// param: {Color arrowColor = Colors.white}
    required Color arrowColor,
  }) : super(
          key: key,
          decoration: decoration,
          margin: margin,
          currentAccountPicture: currentAccountPicture,
          otherAccountsPictures: otherAccountsPictures,
          currentAccountPictureSize: currentAccountPictureSize,
          otherAccountsPicturesSize: otherAccountsPicturesSize,
          accountName: accountName,
          accountEmail: accountEmail,
          onDetailsPressed: onDetailsPressed,
          arrowColor: arrowColor,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => UserAccountsDrawerHeader$Mate(
        key: p.getValue('key'),
        decoration: p.getValue('decoration'),
        margin: p.getValue('margin'),
        currentAccountPicture: p.getValue('currentAccountPicture'),
        otherAccountsPictures: p.getValue('otherAccountsPictures'),
        currentAccountPictureSize: p.getValue('currentAccountPictureSize'),
        otherAccountsPicturesSize: p.getValue('otherAccountsPicturesSize'),
        accountName: p.getValue('accountName'),
        accountEmail: p.getValue('accountEmail'),
        onDetailsPressed: p.getValue('onDetailsPressed'),
        arrowColor: p.getValue('arrowColor'),
      ),
    );
    mateParams.set(name: 'key', init: key);
    mateParams.set(name: 'decoration', init: decoration);
    mateParams.set(name: 'margin', init: margin);
    mateParams.set(name: 'currentAccountPicture', init: currentAccountPicture);
    mateParams.set(name: 'otherAccountsPictures', init: otherAccountsPictures);
    mateParams.set(name: 'currentAccountPictureSize', init: currentAccountPictureSize);
    mateParams.set(name: 'otherAccountsPicturesSize', init: otherAccountsPicturesSize);
    mateParams.set(name: 'accountName', init: accountName);
    mateParams.set(name: 'accountEmail', init: accountEmail);
    mateParams.set(name: 'onDetailsPressed', init: onDetailsPressed);
    mateParams.set(name: 'arrowColor', init: arrowColor);
  }
}
