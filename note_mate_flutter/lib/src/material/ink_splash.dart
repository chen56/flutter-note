// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/material/ink_splash.dart';
import 'package:flutter/src/material/material.dart';
import 'package:flutter/src/rendering/box.dart';
import 'dart:ui';
import 'dart:core';
import 'package:flutter/src/painting/border_radius.dart';
import 'package:flutter/src/painting/borders.dart';
import 'package:note/mate.dart';

/// class InkSplash extends InteractiveInkFeature
class InkSplash$Mate extends InkSplash with Mate<InkSplash$Mate> {
  /// InkSplash InkSplash({required MaterialInkController controller, required RenderBox referenceBox, required TextDirection textDirection, Offset? position, required Color color, bool containedInkWell = false, Rect Function()? rectCallback, BorderRadius? borderRadius, ShapeBorder? customBorder, double? radius, void Function()? onRemoved})
  InkSplash$Mate({
    /// optionalParameters: {required MaterialInkController controller} , hasDefaultValue:false, defaultValueCode:null
    required MaterialInkController controller,

    /// optionalParameters: {required RenderBox referenceBox} , hasDefaultValue:false, defaultValueCode:null
    required RenderBox referenceBox,

    /// optionalParameters: {required TextDirection textDirection} , hasDefaultValue:false, defaultValueCode:null
    required TextDirection textDirection,

    /// optionalParameters: {Offset? position} , hasDefaultValue:false, defaultValueCode:null
    Offset? position,

    /// optionalParameters: {required Color color} , hasDefaultValue:false, defaultValueCode:null
    required Color color,

    /// optionalParameters: {bool containedInkWell = false} , hasDefaultValue:true, defaultValueCode:false
    required bool containedInkWell,

    /// optionalParameters: {Rect Function()? rectCallback} , hasDefaultValue:false, defaultValueCode:null
    RectCallback? rectCallback,

    /// optionalParameters: {BorderRadius? borderRadius} , hasDefaultValue:false, defaultValueCode:null
    BorderRadius? borderRadius,

    /// optionalParameters: {ShapeBorder? customBorder} , hasDefaultValue:false, defaultValueCode:null
    ShapeBorder? customBorder,

    /// optionalParameters: {double? radius} , hasDefaultValue:false, defaultValueCode:null
    double? radius,

    /// optionalParameters: {void Function()? onRemoved} , hasDefaultValue:false, defaultValueCode:null
    VoidCallback? onRemoved,
  }) : super(
          controller: controller,
          referenceBox: referenceBox,
          textDirection: textDirection,
          position: position,
          color: color,
          containedInkWell: containedInkWell,
          rectCallback: rectCallback,
          borderRadius: borderRadius,
          customBorder: customBorder,
          radius: radius,
          onRemoved: onRemoved,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => InkSplash$Mate(
        controller: p.getValue('controller'),
        referenceBox: p.getValue('referenceBox'),
        textDirection: p.getValue('textDirection'),
        position: p.getValue('position'),
        color: p.getValue('color'),
        containedInkWell: p.getValue('containedInkWell'),
        rectCallback: p.getValue('rectCallback'),
        borderRadius: p.getValue('borderRadius'),
        customBorder: p.getValue('customBorder'),
        radius: p.getValue('radius'),
        onRemoved: p.getValue('onRemoved'),
      ),
    );
    mateParams.set(name: 'controller', init: controller);
    mateParams.set(name: 'referenceBox', init: referenceBox);
    mateParams.set(name: 'textDirection', init: textDirection);
    mateParams.set(name: 'position', init: position);
    mateParams.set(name: 'color', init: color);
    mateParams.set(name: 'containedInkWell', init: containedInkWell);
    mateParams.set(name: 'rectCallback', init: rectCallback);
    mateParams.set(name: 'borderRadius', init: borderRadius);
    mateParams.set(name: 'customBorder', init: customBorder);
    mateParams.set(name: 'radius', init: radius);
    mateParams.set(name: 'onRemoved', init: onRemoved);
  }
}
