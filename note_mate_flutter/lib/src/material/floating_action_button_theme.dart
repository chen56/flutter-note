// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/material/floating_action_button_theme.dart';
import 'dart:ui';
import 'dart:core';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/rendering/box.dart';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/painting/text_style.dart';
import 'package:flutter/src/material/material_state.dart';
import 'package:flutter/src/services/mouse_cursor.dart';
import 'package:note/mate.dart';

/// class FloatingActionButtonThemeData with Diagnosticable
class FloatingActionButtonThemeData$Mate extends FloatingActionButtonThemeData
    with Mate<FloatingActionButtonThemeData$Mate> {
  /// FloatingActionButtonThemeData FloatingActionButtonThemeData({Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? disabledElevation, double? highlightElevation, ShapeBorder? shape, bool? enableFeedback, double? iconSize, BoxConstraints? sizeConstraints, BoxConstraints? smallSizeConstraints, BoxConstraints? largeSizeConstraints, BoxConstraints? extendedSizeConstraints, double? extendedIconLabelSpacing, EdgeInsetsGeometry? extendedPadding, TextStyle? extendedTextStyle, MaterialStateProperty<MouseCursor?>? mouseCursor})
  FloatingActionButtonThemeData$Mate({
    /// param: {Color? foregroundColor}
    Color? foregroundColor,

    /// param: {Color? backgroundColor}
    Color? backgroundColor,

    /// param: {Color? focusColor}
    Color? focusColor,

    /// param: {Color? hoverColor}
    Color? hoverColor,

    /// param: {Color? splashColor}
    Color? splashColor,

    /// param: {double? elevation}
    double? elevation,

    /// param: {double? focusElevation}
    double? focusElevation,

    /// param: {double? hoverElevation}
    double? hoverElevation,

    /// param: {double? disabledElevation}
    double? disabledElevation,

    /// param: {double? highlightElevation}
    double? highlightElevation,

    /// param: {ShapeBorder? shape}
    ShapeBorder? shape,

    /// param: {bool? enableFeedback}
    bool? enableFeedback,

    /// param: {double? iconSize}
    double? iconSize,

    /// param: {BoxConstraints? sizeConstraints}
    BoxConstraints? sizeConstraints,

    /// param: {BoxConstraints? smallSizeConstraints}
    BoxConstraints? smallSizeConstraints,

    /// param: {BoxConstraints? largeSizeConstraints}
    BoxConstraints? largeSizeConstraints,

    /// param: {BoxConstraints? extendedSizeConstraints}
    BoxConstraints? extendedSizeConstraints,

    /// param: {double? extendedIconLabelSpacing}
    double? extendedIconLabelSpacing,

    /// param: {EdgeInsetsGeometry? extendedPadding}
    EdgeInsetsGeometry? extendedPadding,

    /// param: {TextStyle? extendedTextStyle}
    TextStyle? extendedTextStyle,

    /// param: {MaterialStateProperty<MouseCursor?>? mouseCursor}
    MaterialStateProperty<MouseCursor?>? mouseCursor,
  }) : super(
          foregroundColor: foregroundColor,
          backgroundColor: backgroundColor,
          focusColor: focusColor,
          hoverColor: hoverColor,
          splashColor: splashColor,
          elevation: elevation,
          focusElevation: focusElevation,
          hoverElevation: hoverElevation,
          disabledElevation: disabledElevation,
          highlightElevation: highlightElevation,
          shape: shape,
          enableFeedback: enableFeedback,
          iconSize: iconSize,
          sizeConstraints: sizeConstraints,
          smallSizeConstraints: smallSizeConstraints,
          largeSizeConstraints: largeSizeConstraints,
          extendedSizeConstraints: extendedSizeConstraints,
          extendedIconLabelSpacing: extendedIconLabelSpacing,
          extendedPadding: extendedPadding,
          extendedTextStyle: extendedTextStyle,
          mouseCursor: mouseCursor,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => FloatingActionButtonThemeData$Mate(
        foregroundColor: p.getValue('foregroundColor'),
        backgroundColor: p.getValue('backgroundColor'),
        focusColor: p.getValue('focusColor'),
        hoverColor: p.getValue('hoverColor'),
        splashColor: p.getValue('splashColor'),
        elevation: p.getValue('elevation'),
        focusElevation: p.getValue('focusElevation'),
        hoverElevation: p.getValue('hoverElevation'),
        disabledElevation: p.getValue('disabledElevation'),
        highlightElevation: p.getValue('highlightElevation'),
        shape: p.getValue('shape'),
        enableFeedback: p.getValue('enableFeedback'),
        iconSize: p.getValue('iconSize'),
        sizeConstraints: p.getValue('sizeConstraints'),
        smallSizeConstraints: p.getValue('smallSizeConstraints'),
        largeSizeConstraints: p.getValue('largeSizeConstraints'),
        extendedSizeConstraints: p.getValue('extendedSizeConstraints'),
        extendedIconLabelSpacing: p.getValue('extendedIconLabelSpacing'),
        extendedPadding: p.getValue('extendedPadding'),
        extendedTextStyle: p.getValue('extendedTextStyle'),
        mouseCursor: p.getValue('mouseCursor'),
      ),
    );
    mateParams.set(name: 'foregroundColor', init: foregroundColor);
    mateParams.set(name: 'backgroundColor', init: backgroundColor);
    mateParams.set(name: 'focusColor', init: focusColor);
    mateParams.set(name: 'hoverColor', init: hoverColor);
    mateParams.set(name: 'splashColor', init: splashColor);
    mateParams.set(name: 'elevation', init: elevation);
    mateParams.set(name: 'focusElevation', init: focusElevation);
    mateParams.set(name: 'hoverElevation', init: hoverElevation);
    mateParams.set(name: 'disabledElevation', init: disabledElevation);
    mateParams.set(name: 'highlightElevation', init: highlightElevation);
    mateParams.set(name: 'shape', init: shape);
    mateParams.set(name: 'enableFeedback', init: enableFeedback);
    mateParams.set(name: 'iconSize', init: iconSize);
    mateParams.set(name: 'sizeConstraints', init: sizeConstraints);
    mateParams.set(name: 'smallSizeConstraints', init: smallSizeConstraints);
    mateParams.set(name: 'largeSizeConstraints', init: largeSizeConstraints);
    mateParams.set(name: 'extendedSizeConstraints', init: extendedSizeConstraints);
    mateParams.set(name: 'extendedIconLabelSpacing', init: extendedIconLabelSpacing);
    mateParams.set(name: 'extendedPadding', init: extendedPadding);
    mateParams.set(name: 'extendedTextStyle', init: extendedTextStyle);
    mateParams.set(name: 'mouseCursor', init: mouseCursor);
  }
}
