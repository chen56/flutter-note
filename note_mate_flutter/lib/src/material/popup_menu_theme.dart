// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/material/popup_menu_theme.dart';
import 'dart:ui';
import 'package:flutter/src/painting/borders.dart';
import 'dart:core';
import 'package:flutter/src/painting/text_style.dart';
import 'package:flutter/src/material/material_state.dart';
import 'package:flutter/src/services/mouse_cursor.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';

/// class PopupMenuThemeData with Diagnosticable
class PopupMenuThemeData$Mate extends PopupMenuThemeData with Mate<PopupMenuThemeData$Mate> {
  /// PopupMenuThemeData PopupMenuThemeData({Color? color, ShapeBorder? shape, double? elevation, Color? shadowColor, Color? surfaceTintColor, TextStyle? textStyle, MaterialStateProperty<TextStyle?>? labelTextStyle, bool? enableFeedback, MaterialStateProperty<MouseCursor?>? mouseCursor, PopupMenuPosition? position})
  PopupMenuThemeData$Mate({
    /// param: {Color? color}
    Color? color,

    /// param: {ShapeBorder? shape}
    ShapeBorder? shape,

    /// param: {double? elevation}
    double? elevation,

    /// param: {Color? shadowColor}
    Color? shadowColor,

    /// param: {Color? surfaceTintColor}
    Color? surfaceTintColor,

    /// param: {TextStyle? textStyle}
    TextStyle? textStyle,

    /// param: {MaterialStateProperty<TextStyle?>? labelTextStyle}
    MaterialStateProperty<TextStyle?>? labelTextStyle,

    /// param: {bool? enableFeedback}
    bool? enableFeedback,

    /// param: {MaterialStateProperty<MouseCursor?>? mouseCursor}
    MaterialStateProperty<MouseCursor?>? mouseCursor,

    /// param: {PopupMenuPosition? position}
    PopupMenuPosition? position,
  }) : super(
          color: color,
          shape: shape,
          elevation: elevation,
          shadowColor: shadowColor,
          surfaceTintColor: surfaceTintColor,
          textStyle: textStyle,
          labelTextStyle: labelTextStyle,
          enableFeedback: enableFeedback,
          mouseCursor: mouseCursor,
          position: position,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => PopupMenuThemeData$Mate(
        color: p.getValue('color'),
        shape: p.getValue('shape'),
        elevation: p.getValue('elevation'),
        shadowColor: p.getValue('shadowColor'),
        surfaceTintColor: p.getValue('surfaceTintColor'),
        textStyle: p.getValue('textStyle'),
        labelTextStyle: p.getValue('labelTextStyle'),
        enableFeedback: p.getValue('enableFeedback'),
        mouseCursor: p.getValue('mouseCursor'),
        position: p.getValue('position'),
      ),
    );
    mateParams.set(name: 'color', init: color);
    mateParams.set(name: 'shape', init: shape);
    mateParams.set(name: 'elevation', init: elevation);
    mateParams.set(name: 'shadowColor', init: shadowColor);
    mateParams.set(name: 'surfaceTintColor', init: surfaceTintColor);
    mateParams.set(name: 'textStyle', init: textStyle);
    mateParams.set(name: 'labelTextStyle', init: labelTextStyle);
    mateParams.set(name: 'enableFeedback', init: enableFeedback);
    mateParams.set(name: 'mouseCursor', init: mouseCursor);
    mateParams.set(name: 'position', init: position);
  }
}

/// class PopupMenuTheme extends InheritedTheme
class PopupMenuTheme$Mate extends PopupMenuTheme with WidgetMate<PopupMenuTheme$Mate> {
  /// PopupMenuTheme PopupMenuTheme({Key? key, required PopupMenuThemeData data, required Widget child})
  PopupMenuTheme$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {required PopupMenuThemeData data}
    required PopupMenuThemeData data,

    /// param: {required Widget child}
    required Widget child,
  }) : super(
          key: key,
          data: data,
          child: child,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => PopupMenuTheme$Mate(
        key: p.getValue('key'),
        data: p.getValue('data'),
        child: p.getValue('child'),
      ),
    );
    mateParams.set(name: 'key', init: key);
    mateParams.set(name: 'data', init: data);
    mateParams.set(name: 'child', init: child);
  }
}
