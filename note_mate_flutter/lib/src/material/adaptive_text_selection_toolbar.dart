// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-11 13:17:26.729962

import 'package:flutter/src/material/adaptive_text_selection_toolbar.dart';
import 'package:flutter/src/foundation/key.dart';
import 'dart:core';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/text_selection_toolbar_anchors.dart';
import 'package:flutter/src/widgets/context_menu_button_item.dart';
import 'package:flutter/src/widgets/text_selection.dart';
import 'dart:ui';
import 'package:flutter/src/widgets/editable_text.dart';
import 'package:flutter/src/rendering/selection.dart';
import 'package:flutter/src/widgets/selectable_region.dart';

/// class AdaptiveTextSelectionToolbar extends StatelessWidget
class AdaptiveTextSelectionToolbar$Mate extends AdaptiveTextSelectionToolbar {
  /// AdaptiveTextSelectionToolbar AdaptiveTextSelectionToolbar({Key? key, required List<Widget>? children, required TextSelectionToolbarAnchors anchors})
  AdaptiveTextSelectionToolbar$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {required List<Widget>? children}
    required List<Widget>? children,

    /// param: {required TextSelectionToolbarAnchors anchors}
    required TextSelectionToolbarAnchors anchors,
  }) : super(
          key: key,
          children: children,
          anchors: anchors,
        ) {}

  /// AdaptiveTextSelectionToolbar AdaptiveTextSelectionToolbar.buttonItems({Key? key, required List<ContextMenuButtonItem>? buttonItems, required TextSelectionToolbarAnchors anchors})
  AdaptiveTextSelectionToolbar$Mate.buttonItems({
    /// param: {Key? key}
    Key? key,

    /// param: {required List<ContextMenuButtonItem>? buttonItems}
    required List<ContextMenuButtonItem>? buttonItems,

    /// param: {required TextSelectionToolbarAnchors anchors}
    required TextSelectionToolbarAnchors anchors,
  }) : super.buttonItems(
          key: key,
          buttonItems: buttonItems,
          anchors: anchors,
        ) {}

  /// AdaptiveTextSelectionToolbar AdaptiveTextSelectionToolbar.editable({Key? key, required ClipboardStatus clipboardStatus, required void Function()? onCopy, required void Function()? onCut, required void Function()? onPaste, required void Function()? onSelectAll, required TextSelectionToolbarAnchors anchors})
  AdaptiveTextSelectionToolbar$Mate.editable({
    /// param: {Key? key}
    Key? key,

    /// param: {required ClipboardStatus clipboardStatus}
    required ClipboardStatus clipboardStatus,

    /// param: {required void Function()? onCopy}
    required VoidCallback? onCopy,

    /// param: {required void Function()? onCut}
    required VoidCallback? onCut,

    /// param: {required void Function()? onPaste}
    required VoidCallback? onPaste,

    /// param: {required void Function()? onSelectAll}
    required VoidCallback? onSelectAll,

    /// param: {required TextSelectionToolbarAnchors anchors}
    required TextSelectionToolbarAnchors anchors,
  }) : super.editable(
          key: key,
          clipboardStatus: clipboardStatus,
          onCopy: onCopy,
          onCut: onCut,
          onPaste: onPaste,
          onSelectAll: onSelectAll,
          anchors: anchors,
        ) {}

  /// AdaptiveTextSelectionToolbar AdaptiveTextSelectionToolbar.editableText({Key? key, required EditableTextState editableTextState})
  AdaptiveTextSelectionToolbar$Mate.editableText({
    /// param: {Key? key}
    Key? key,

    /// param: {required EditableTextState editableTextState}
    required EditableTextState editableTextState,
  }) : super.editableText(
          key: key,
          editableTextState: editableTextState,
        ) {}

  /// AdaptiveTextSelectionToolbar AdaptiveTextSelectionToolbar.selectable({Key? key, required void Function() onCopy, required void Function() onSelectAll, required SelectionGeometry selectionGeometry, required TextSelectionToolbarAnchors anchors})
  AdaptiveTextSelectionToolbar$Mate.selectable({
    /// param: {Key? key}
    Key? key,

    /// param: {required void Function() onCopy}
    required VoidCallback onCopy,

    /// param: {required void Function() onSelectAll}
    required VoidCallback onSelectAll,

    /// param: {required SelectionGeometry selectionGeometry}
    required SelectionGeometry selectionGeometry,

    /// param: {required TextSelectionToolbarAnchors anchors}
    required TextSelectionToolbarAnchors anchors,
  }) : super.selectable(
          key: key,
          onCopy: onCopy,
          onSelectAll: onSelectAll,
          selectionGeometry: selectionGeometry,
          anchors: anchors,
        ) {}

  /// AdaptiveTextSelectionToolbar AdaptiveTextSelectionToolbar.selectableRegion({Key? key, required SelectableRegionState selectableRegionState})
  AdaptiveTextSelectionToolbar$Mate.selectableRegion({
    /// param: {Key? key}
    Key? key,

    /// param: {required SelectableRegionState selectableRegionState}
    required SelectableRegionState selectableRegionState,
  }) : super.selectableRegion(
          key: key,
          selectableRegionState: selectableRegionState,
        ) {}
}
