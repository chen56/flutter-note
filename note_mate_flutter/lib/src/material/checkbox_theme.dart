// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/material/checkbox_theme.dart';
import 'package:flutter/src/material/material_state.dart';
import 'package:flutter/src/services/mouse_cursor.dart';
import 'dart:ui';
import 'dart:core';
import 'package:flutter/src/material/theme_data.dart';
import 'package:flutter/src/painting/borders.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';

/// class CheckboxThemeData with Diagnosticable
class CheckboxThemeData$Mate extends CheckboxThemeData with Mate<CheckboxThemeData$Mate> {
  /// CheckboxThemeData CheckboxThemeData({MaterialStateProperty<MouseCursor?>? mouseCursor, MaterialStateProperty<Color?>? fillColor, MaterialStateProperty<Color?>? checkColor, MaterialStateProperty<Color?>? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, OutlinedBorder? shape, BorderSide? side})
  CheckboxThemeData$Mate({
    /// param: {MaterialStateProperty<MouseCursor?>? mouseCursor}
    MaterialStateProperty<MouseCursor?>? mouseCursor,

    /// param: {MaterialStateProperty<Color?>? fillColor}
    MaterialStateProperty<Color?>? fillColor,

    /// param: {MaterialStateProperty<Color?>? checkColor}
    MaterialStateProperty<Color?>? checkColor,

    /// param: {MaterialStateProperty<Color?>? overlayColor}
    MaterialStateProperty<Color?>? overlayColor,

    /// param: {double? splashRadius}
    double? splashRadius,

    /// param: {MaterialTapTargetSize? materialTapTargetSize}
    MaterialTapTargetSize? materialTapTargetSize,

    /// param: {VisualDensity? visualDensity}
    VisualDensity? visualDensity,

    /// param: {OutlinedBorder? shape}
    OutlinedBorder? shape,

    /// param: {BorderSide? side}
    BorderSide? side,
  }) : super(
          mouseCursor: mouseCursor,
          fillColor: fillColor,
          checkColor: checkColor,
          overlayColor: overlayColor,
          splashRadius: splashRadius,
          materialTapTargetSize: materialTapTargetSize,
          visualDensity: visualDensity,
          shape: shape,
          side: side,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => CheckboxThemeData$Mate(
        mouseCursor: p.getValue('mouseCursor'),
        fillColor: p.getValue('fillColor'),
        checkColor: p.getValue('checkColor'),
        overlayColor: p.getValue('overlayColor'),
        splashRadius: p.getValue('splashRadius'),
        materialTapTargetSize: p.getValue('materialTapTargetSize'),
        visualDensity: p.getValue('visualDensity'),
        shape: p.getValue('shape'),
        side: p.getValue('side'),
      ),
    );
    mateParams.set(name: 'mouseCursor', init: mouseCursor);
    mateParams.set(name: 'fillColor', init: fillColor);
    mateParams.set(name: 'checkColor', init: checkColor);
    mateParams.set(name: 'overlayColor', init: overlayColor);
    mateParams.set(name: 'splashRadius', init: splashRadius);
    mateParams.set(name: 'materialTapTargetSize', init: materialTapTargetSize);
    mateParams.set(name: 'visualDensity', init: visualDensity);
    mateParams.set(name: 'shape', init: shape);
    mateParams.set(name: 'side', init: side);
  }
}

/// class CheckboxTheme extends InheritedWidget
class CheckboxTheme$Mate extends CheckboxTheme with WidgetMate<CheckboxTheme$Mate> {
  /// CheckboxTheme CheckboxTheme({Key? key, required CheckboxThemeData data, required Widget child})
  CheckboxTheme$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {required CheckboxThemeData data}
    required CheckboxThemeData data,

    /// param: {required Widget child}
    required Widget child,
  }) : super(
          key: key,
          data: data,
          child: child,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => CheckboxTheme$Mate(
        key: p.getValue('key'),
        data: p.getValue('data'),
        child: p.getValue('child'),
      ),
    );
    mateParams.set(name: 'key', init: key);
    mateParams.set(name: 'data', init: data);
    mateParams.set(name: 'child', init: child);
  }
}
