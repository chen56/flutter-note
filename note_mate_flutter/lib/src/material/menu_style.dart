// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/material/menu_style.dart';
import 'package:flutter/src/material/material_state.dart';
import 'dart:ui';
import 'dart:core';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/services/mouse_cursor.dart';
import 'package:flutter/src/material/theme_data.dart';
import 'package:flutter/src/painting/alignment.dart';
import 'package:note/mate.dart';

/// class MenuStyle with Diagnosticable
class MenuStyle$Mate extends MenuStyle with Mate<MenuStyle$Mate> {
  /// MenuStyle MenuStyle({MaterialStateProperty<Color?>? backgroundColor, MaterialStateProperty<Color?>? shadowColor, MaterialStateProperty<Color?>? surfaceTintColor, MaterialStateProperty<double?>? elevation, MaterialStateProperty<EdgeInsetsGeometry?>? padding, MaterialStateProperty<Size?>? minimumSize, MaterialStateProperty<Size?>? fixedSize, MaterialStateProperty<Size?>? maximumSize, MaterialStateProperty<BorderSide?>? side, MaterialStateProperty<OutlinedBorder?>? shape, MaterialStateProperty<MouseCursor?>? mouseCursor, VisualDensity? visualDensity, AlignmentGeometry? alignment})
  MenuStyle$Mate({
    /// optionalParameters: {MaterialStateProperty<Color?>? backgroundColor} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<Color?>? backgroundColor,

    /// optionalParameters: {MaterialStateProperty<Color?>? shadowColor} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<Color?>? shadowColor,

    /// optionalParameters: {MaterialStateProperty<Color?>? surfaceTintColor} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<Color?>? surfaceTintColor,

    /// optionalParameters: {MaterialStateProperty<double?>? elevation} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<double?>? elevation,

    /// optionalParameters: {MaterialStateProperty<EdgeInsetsGeometry?>? padding} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<EdgeInsetsGeometry?>? padding,

    /// optionalParameters: {MaterialStateProperty<Size?>? minimumSize} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<Size?>? minimumSize,

    /// optionalParameters: {MaterialStateProperty<Size?>? fixedSize} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<Size?>? fixedSize,

    /// optionalParameters: {MaterialStateProperty<Size?>? maximumSize} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<Size?>? maximumSize,

    /// optionalParameters: {MaterialStateProperty<BorderSide?>? side} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<BorderSide?>? side,

    /// optionalParameters: {MaterialStateProperty<OutlinedBorder?>? shape} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<OutlinedBorder?>? shape,

    /// optionalParameters: {MaterialStateProperty<MouseCursor?>? mouseCursor} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<MouseCursor?>? mouseCursor,

    /// optionalParameters: {VisualDensity? visualDensity} , hasDefaultValue:false, defaultValueCode:null
    VisualDensity? visualDensity,

    /// optionalParameters: {AlignmentGeometry? alignment} , hasDefaultValue:false, defaultValueCode:null
    AlignmentGeometry? alignment,
  }) : super(
          backgroundColor: backgroundColor,
          shadowColor: shadowColor,
          surfaceTintColor: surfaceTintColor,
          elevation: elevation,
          padding: padding,
          minimumSize: minimumSize,
          fixedSize: fixedSize,
          maximumSize: maximumSize,
          side: side,
          shape: shape,
          mouseCursor: mouseCursor,
          visualDensity: visualDensity,
          alignment: alignment,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => MenuStyle$Mate(
        backgroundColor: p.getValue('backgroundColor'),
        shadowColor: p.getValue('shadowColor'),
        surfaceTintColor: p.getValue('surfaceTintColor'),
        elevation: p.getValue('elevation'),
        padding: p.getValue('padding'),
        minimumSize: p.getValue('minimumSize'),
        fixedSize: p.getValue('fixedSize'),
        maximumSize: p.getValue('maximumSize'),
        side: p.getValue('side'),
        shape: p.getValue('shape'),
        mouseCursor: p.getValue('mouseCursor'),
        visualDensity: p.getValue('visualDensity'),
        alignment: p.getValue('alignment'),
      ),
    );
    mateParams.set(name: 'backgroundColor', init: backgroundColor);
    mateParams.set(name: 'shadowColor', init: shadowColor);
    mateParams.set(name: 'surfaceTintColor', init: surfaceTintColor);
    mateParams.set(name: 'elevation', init: elevation);
    mateParams.set(name: 'padding', init: padding);
    mateParams.set(name: 'minimumSize', init: minimumSize);
    mateParams.set(name: 'fixedSize', init: fixedSize);
    mateParams.set(name: 'maximumSize', init: maximumSize);
    mateParams.set(name: 'side', init: side);
    mateParams.set(name: 'shape', init: shape);
    mateParams.set(name: 'mouseCursor', init: mouseCursor);
    mateParams.set(name: 'visualDensity', init: visualDensity);
    mateParams.set(name: 'alignment', init: alignment);
  }
}
