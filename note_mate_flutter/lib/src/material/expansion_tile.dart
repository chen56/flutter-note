// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/material/expansion_tile.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/foundation/basic_types.dart';
import 'dart:core';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/rendering/flex.dart';
import 'package:flutter/src/painting/alignment.dart';
import 'dart:ui';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/material/list_tile.dart';
import 'package:note/mate.dart';

/// class ExpansionTile extends StatefulWidget
class ExpansionTile$Mate extends ExpansionTile with WidgetMate<ExpansionTile$Mate> {
  /// ExpansionTile ExpansionTile({Key? key, Widget? leading, required Widget title, Widget? subtitle, void Function(bool)? onExpansionChanged, List<Widget> children = const <Widget>[], Widget? trailing, bool initiallyExpanded = false, bool maintainState = false, EdgeInsetsGeometry? tilePadding, CrossAxisAlignment? expandedCrossAxisAlignment, Alignment? expandedAlignment, EdgeInsetsGeometry? childrenPadding, Color? backgroundColor, Color? collapsedBackgroundColor, Color? textColor, Color? collapsedTextColor, Color? iconColor, Color? collapsedIconColor, ShapeBorder? shape, ShapeBorder? collapsedShape, Clip? clipBehavior, ListTileControlAffinity? controlAffinity})
  ExpansionTile$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {Widget? leading}
    Widget? leading,

    /// param: {required Widget title}
    required Widget title,

    /// param: {Widget? subtitle}
    Widget? subtitle,

    /// param: {void Function(bool)? onExpansionChanged}
    ValueChanged<bool>? onExpansionChanged,

    /// param: {List<Widget> children = const <Widget>[]}
    required List<Widget> children,

    /// param: {Widget? trailing}
    Widget? trailing,

    /// param: {bool initiallyExpanded = false}
    required bool initiallyExpanded,

    /// param: {bool maintainState = false}
    required bool maintainState,

    /// param: {EdgeInsetsGeometry? tilePadding}
    EdgeInsetsGeometry? tilePadding,

    /// param: {CrossAxisAlignment? expandedCrossAxisAlignment}
    CrossAxisAlignment? expandedCrossAxisAlignment,

    /// param: {Alignment? expandedAlignment}
    Alignment? expandedAlignment,

    /// param: {EdgeInsetsGeometry? childrenPadding}
    EdgeInsetsGeometry? childrenPadding,

    /// param: {Color? backgroundColor}
    Color? backgroundColor,

    /// param: {Color? collapsedBackgroundColor}
    Color? collapsedBackgroundColor,

    /// param: {Color? textColor}
    Color? textColor,

    /// param: {Color? collapsedTextColor}
    Color? collapsedTextColor,

    /// param: {Color? iconColor}
    Color? iconColor,

    /// param: {Color? collapsedIconColor}
    Color? collapsedIconColor,

    /// param: {ShapeBorder? shape}
    ShapeBorder? shape,

    /// param: {ShapeBorder? collapsedShape}
    ShapeBorder? collapsedShape,

    /// param: {Clip? clipBehavior}
    Clip? clipBehavior,

    /// param: {ListTileControlAffinity? controlAffinity}
    ListTileControlAffinity? controlAffinity,
  }) : super(
          key: key,
          leading: leading,
          title: title,
          subtitle: subtitle,
          onExpansionChanged: onExpansionChanged,
          children: children,
          trailing: trailing,
          initiallyExpanded: initiallyExpanded,
          maintainState: maintainState,
          tilePadding: tilePadding,
          expandedCrossAxisAlignment: expandedCrossAxisAlignment,
          expandedAlignment: expandedAlignment,
          childrenPadding: childrenPadding,
          backgroundColor: backgroundColor,
          collapsedBackgroundColor: collapsedBackgroundColor,
          textColor: textColor,
          collapsedTextColor: collapsedTextColor,
          iconColor: iconColor,
          collapsedIconColor: collapsedIconColor,
          shape: shape,
          collapsedShape: collapsedShape,
          clipBehavior: clipBehavior,
          controlAffinity: controlAffinity,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => ExpansionTile$Mate(
        key: p.getValue('key'),
        leading: p.getValue('leading'),
        title: p.getValue('title'),
        subtitle: p.getValue('subtitle'),
        onExpansionChanged: p.getValue('onExpansionChanged'),
        children: p.getValue('children'),
        trailing: p.getValue('trailing'),
        initiallyExpanded: p.getValue('initiallyExpanded'),
        maintainState: p.getValue('maintainState'),
        tilePadding: p.getValue('tilePadding'),
        expandedCrossAxisAlignment: p.getValue('expandedCrossAxisAlignment'),
        expandedAlignment: p.getValue('expandedAlignment'),
        childrenPadding: p.getValue('childrenPadding'),
        backgroundColor: p.getValue('backgroundColor'),
        collapsedBackgroundColor: p.getValue('collapsedBackgroundColor'),
        textColor: p.getValue('textColor'),
        collapsedTextColor: p.getValue('collapsedTextColor'),
        iconColor: p.getValue('iconColor'),
        collapsedIconColor: p.getValue('collapsedIconColor'),
        shape: p.getValue('shape'),
        collapsedShape: p.getValue('collapsedShape'),
        clipBehavior: p.getValue('clipBehavior'),
        controlAffinity: p.getValue('controlAffinity'),
      ),
    );
    mateParams.set(name: 'key', init: key);
    mateParams.set(name: 'leading', init: leading);
    mateParams.set(name: 'title', init: title);
    mateParams.set(name: 'subtitle', init: subtitle);
    mateParams.set(name: 'onExpansionChanged', init: onExpansionChanged);
    mateParams.set(name: 'children', init: children);
    mateParams.set(name: 'trailing', init: trailing);
    mateParams.set(name: 'initiallyExpanded', init: initiallyExpanded);
    mateParams.set(name: 'maintainState', init: maintainState);
    mateParams.set(name: 'tilePadding', init: tilePadding);
    mateParams.set(name: 'expandedCrossAxisAlignment', init: expandedCrossAxisAlignment);
    mateParams.set(name: 'expandedAlignment', init: expandedAlignment);
    mateParams.set(name: 'childrenPadding', init: childrenPadding);
    mateParams.set(name: 'backgroundColor', init: backgroundColor);
    mateParams.set(name: 'collapsedBackgroundColor', init: collapsedBackgroundColor);
    mateParams.set(name: 'textColor', init: textColor);
    mateParams.set(name: 'collapsedTextColor', init: collapsedTextColor);
    mateParams.set(name: 'iconColor', init: iconColor);
    mateParams.set(name: 'collapsedIconColor', init: collapsedIconColor);
    mateParams.set(name: 'shape', init: shape);
    mateParams.set(name: 'collapsedShape', init: collapsedShape);
    mateParams.set(name: 'clipBehavior', init: clipBehavior);
    mateParams.set(name: 'controlAffinity', init: controlAffinity);
  }
}
