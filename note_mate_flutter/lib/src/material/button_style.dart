// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/material/button_style.dart';
import 'package:flutter/src/material/material_state.dart';
import 'package:flutter/src/painting/text_style.dart';
import 'dart:ui';
import 'dart:core';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/services/mouse_cursor.dart';
import 'package:flutter/src/material/theme_data.dart';
import 'package:flutter/src/painting/alignment.dart';
import 'package:flutter/src/material/ink_well.dart';
import 'package:note/mate.dart';

/// class ButtonStyle with Diagnosticable
class ButtonStyle$Mate extends ButtonStyle with Mate<ButtonStyle$Mate> {
  /// ButtonStyle ButtonStyle({MaterialStateProperty<TextStyle?>? textStyle, MaterialStateProperty<Color?>? backgroundColor, MaterialStateProperty<Color?>? foregroundColor, MaterialStateProperty<Color?>? overlayColor, MaterialStateProperty<Color?>? shadowColor, MaterialStateProperty<Color?>? surfaceTintColor, MaterialStateProperty<double?>? elevation, MaterialStateProperty<EdgeInsetsGeometry?>? padding, MaterialStateProperty<Size?>? minimumSize, MaterialStateProperty<Size?>? fixedSize, MaterialStateProperty<Size?>? maximumSize, MaterialStateProperty<Color?>? iconColor, MaterialStateProperty<double?>? iconSize, MaterialStateProperty<BorderSide?>? side, MaterialStateProperty<OutlinedBorder?>? shape, MaterialStateProperty<MouseCursor?>? mouseCursor, VisualDensity? visualDensity, MaterialTapTargetSize? tapTargetSize, Duration? animationDuration, bool? enableFeedback, AlignmentGeometry? alignment, InteractiveInkFeatureFactory? splashFactory})
  ButtonStyle$Mate({
    /// param: {MaterialStateProperty<TextStyle?>? textStyle}
    MaterialStateProperty<TextStyle?>? textStyle,

    /// param: {MaterialStateProperty<Color?>? backgroundColor}
    MaterialStateProperty<Color?>? backgroundColor,

    /// param: {MaterialStateProperty<Color?>? foregroundColor}
    MaterialStateProperty<Color?>? foregroundColor,

    /// param: {MaterialStateProperty<Color?>? overlayColor}
    MaterialStateProperty<Color?>? overlayColor,

    /// param: {MaterialStateProperty<Color?>? shadowColor}
    MaterialStateProperty<Color?>? shadowColor,

    /// param: {MaterialStateProperty<Color?>? surfaceTintColor}
    MaterialStateProperty<Color?>? surfaceTintColor,

    /// param: {MaterialStateProperty<double?>? elevation}
    MaterialStateProperty<double?>? elevation,

    /// param: {MaterialStateProperty<EdgeInsetsGeometry?>? padding}
    MaterialStateProperty<EdgeInsetsGeometry?>? padding,

    /// param: {MaterialStateProperty<Size?>? minimumSize}
    MaterialStateProperty<Size?>? minimumSize,

    /// param: {MaterialStateProperty<Size?>? fixedSize}
    MaterialStateProperty<Size?>? fixedSize,

    /// param: {MaterialStateProperty<Size?>? maximumSize}
    MaterialStateProperty<Size?>? maximumSize,

    /// param: {MaterialStateProperty<Color?>? iconColor}
    MaterialStateProperty<Color?>? iconColor,

    /// param: {MaterialStateProperty<double?>? iconSize}
    MaterialStateProperty<double?>? iconSize,

    /// param: {MaterialStateProperty<BorderSide?>? side}
    MaterialStateProperty<BorderSide?>? side,

    /// param: {MaterialStateProperty<OutlinedBorder?>? shape}
    MaterialStateProperty<OutlinedBorder?>? shape,

    /// param: {MaterialStateProperty<MouseCursor?>? mouseCursor}
    MaterialStateProperty<MouseCursor?>? mouseCursor,

    /// param: {VisualDensity? visualDensity}
    VisualDensity? visualDensity,

    /// param: {MaterialTapTargetSize? tapTargetSize}
    MaterialTapTargetSize? tapTargetSize,

    /// param: {Duration? animationDuration}
    Duration? animationDuration,

    /// param: {bool? enableFeedback}
    bool? enableFeedback,

    /// param: {AlignmentGeometry? alignment}
    AlignmentGeometry? alignment,

    /// param: {InteractiveInkFeatureFactory? splashFactory}
    InteractiveInkFeatureFactory? splashFactory,
  }) : super(
          textStyle: textStyle,
          backgroundColor: backgroundColor,
          foregroundColor: foregroundColor,
          overlayColor: overlayColor,
          shadowColor: shadowColor,
          surfaceTintColor: surfaceTintColor,
          elevation: elevation,
          padding: padding,
          minimumSize: minimumSize,
          fixedSize: fixedSize,
          maximumSize: maximumSize,
          iconColor: iconColor,
          iconSize: iconSize,
          side: side,
          shape: shape,
          mouseCursor: mouseCursor,
          visualDensity: visualDensity,
          tapTargetSize: tapTargetSize,
          animationDuration: animationDuration,
          enableFeedback: enableFeedback,
          alignment: alignment,
          splashFactory: splashFactory,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => ButtonStyle$Mate(
        textStyle: p.getValue('textStyle'),
        backgroundColor: p.getValue('backgroundColor'),
        foregroundColor: p.getValue('foregroundColor'),
        overlayColor: p.getValue('overlayColor'),
        shadowColor: p.getValue('shadowColor'),
        surfaceTintColor: p.getValue('surfaceTintColor'),
        elevation: p.getValue('elevation'),
        padding: p.getValue('padding'),
        minimumSize: p.getValue('minimumSize'),
        fixedSize: p.getValue('fixedSize'),
        maximumSize: p.getValue('maximumSize'),
        iconColor: p.getValue('iconColor'),
        iconSize: p.getValue('iconSize'),
        side: p.getValue('side'),
        shape: p.getValue('shape'),
        mouseCursor: p.getValue('mouseCursor'),
        visualDensity: p.getValue('visualDensity'),
        tapTargetSize: p.getValue('tapTargetSize'),
        animationDuration: p.getValue('animationDuration'),
        enableFeedback: p.getValue('enableFeedback'),
        alignment: p.getValue('alignment'),
        splashFactory: p.getValue('splashFactory'),
      ),
    );
    mateParams.set(name: 'textStyle', init: textStyle);
    mateParams.set(name: 'backgroundColor', init: backgroundColor);
    mateParams.set(name: 'foregroundColor', init: foregroundColor);
    mateParams.set(name: 'overlayColor', init: overlayColor);
    mateParams.set(name: 'shadowColor', init: shadowColor);
    mateParams.set(name: 'surfaceTintColor', init: surfaceTintColor);
    mateParams.set(name: 'elevation', init: elevation);
    mateParams.set(name: 'padding', init: padding);
    mateParams.set(name: 'minimumSize', init: minimumSize);
    mateParams.set(name: 'fixedSize', init: fixedSize);
    mateParams.set(name: 'maximumSize', init: maximumSize);
    mateParams.set(name: 'iconColor', init: iconColor);
    mateParams.set(name: 'iconSize', init: iconSize);
    mateParams.set(name: 'side', init: side);
    mateParams.set(name: 'shape', init: shape);
    mateParams.set(name: 'mouseCursor', init: mouseCursor);
    mateParams.set(name: 'visualDensity', init: visualDensity);
    mateParams.set(name: 'tapTargetSize', init: tapTargetSize);
    mateParams.set(name: 'animationDuration', init: animationDuration);
    mateParams.set(name: 'enableFeedback', init: enableFeedback);
    mateParams.set(name: 'alignment', init: alignment);
    mateParams.set(name: 'splashFactory', init: splashFactory);
  }
}
