// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/material/badge_theme.dart';
import 'dart:ui';
import 'dart:core';
import 'package:flutter/src/painting/text_style.dart';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/painting/alignment.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';

/// class BadgeThemeData with Diagnosticable
class BadgeThemeData$Mate extends BadgeThemeData with Mate<BadgeThemeData$Mate> {
  /// BadgeThemeData BadgeThemeData({Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsetsGeometry? padding, AlignmentGeometry? alignment, Offset? offset})
  BadgeThemeData$Mate({
    /// param: {Color? backgroundColor}
    Color? backgroundColor,

    /// param: {Color? textColor}
    Color? textColor,

    /// param: {double? smallSize}
    double? smallSize,

    /// param: {double? largeSize}
    double? largeSize,

    /// param: {TextStyle? textStyle}
    TextStyle? textStyle,

    /// param: {EdgeInsetsGeometry? padding}
    EdgeInsetsGeometry? padding,

    /// param: {AlignmentGeometry? alignment}
    AlignmentGeometry? alignment,

    /// param: {Offset? offset}
    Offset? offset,
  }) : super(
          backgroundColor: backgroundColor,
          textColor: textColor,
          smallSize: smallSize,
          largeSize: largeSize,
          textStyle: textStyle,
          padding: padding,
          alignment: alignment,
          offset: offset,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => BadgeThemeData$Mate(
        backgroundColor: p.getValue('backgroundColor'),
        textColor: p.getValue('textColor'),
        smallSize: p.getValue('smallSize'),
        largeSize: p.getValue('largeSize'),
        textStyle: p.getValue('textStyle'),
        padding: p.getValue('padding'),
        alignment: p.getValue('alignment'),
        offset: p.getValue('offset'),
      ),
    );
    mateParams.set(name: 'backgroundColor', init: backgroundColor);
    mateParams.set(name: 'textColor', init: textColor);
    mateParams.set(name: 'smallSize', init: smallSize);
    mateParams.set(name: 'largeSize', init: largeSize);
    mateParams.set(name: 'textStyle', init: textStyle);
    mateParams.set(name: 'padding', init: padding);
    mateParams.set(name: 'alignment', init: alignment);
    mateParams.set(name: 'offset', init: offset);
  }
}

/// class BadgeTheme extends InheritedTheme
class BadgeTheme$Mate extends BadgeTheme with WidgetMate<BadgeTheme$Mate> {
  /// BadgeTheme BadgeTheme({Key? key, required BadgeThemeData data, required Widget child})
  BadgeTheme$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {required BadgeThemeData data}
    required BadgeThemeData data,

    /// param: {required Widget child}
    required Widget child,
  }) : super(
          key: key,
          data: data,
          child: child,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => BadgeTheme$Mate(
        key: p.getValue('key'),
        data: p.getValue('data'),
        child: p.getValue('child'),
      ),
    );
    mateParams.set(name: 'key', init: key);
    mateParams.set(name: 'data', init: data);
    mateParams.set(name: 'child', init: child);
  }
}
