// /// Generated by mate_flutter, please don't edit!

import 'package:flutter/src/material/banner_theme.dart';
import 'dart:ui';
import 'package:flutter/src/painting/text_style.dart';
import 'dart:core';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';

/// class MaterialBannerThemeData with Diagnosticable
class MaterialBannerThemeData$Mate extends MaterialBannerThemeData with Mate<MaterialBannerThemeData$Mate> {
  /// MaterialBannerThemeData MaterialBannerThemeData({Color? backgroundColor, Color? surfaceTintColor, Color? shadowColor, Color? dividerColor, TextStyle? contentTextStyle, double? elevation, EdgeInsetsGeometry? padding, EdgeInsetsGeometry? leadingPadding})
  MaterialBannerThemeData$Mate({
    /// param: {Color? backgroundColor}
    Color? backgroundColor,

    /// param: {Color? surfaceTintColor}
    Color? surfaceTintColor,

    /// param: {Color? shadowColor}
    Color? shadowColor,

    /// param: {Color? dividerColor}
    Color? dividerColor,

    /// param: {TextStyle? contentTextStyle}
    TextStyle? contentTextStyle,

    /// param: {double? elevation}
    double? elevation,

    /// param: {EdgeInsetsGeometry? padding}
    EdgeInsetsGeometry? padding,

    /// param: {EdgeInsetsGeometry? leadingPadding}
    EdgeInsetsGeometry? leadingPadding,
  }) : super(
          backgroundColor: backgroundColor,
          surfaceTintColor: surfaceTintColor,
          shadowColor: shadowColor,
          dividerColor: dividerColor,
          contentTextStyle: contentTextStyle,
          elevation: elevation,
          padding: padding,
          leadingPadding: leadingPadding,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => MaterialBannerThemeData$Mate(
        backgroundColor: p.getValue('backgroundColor'),
        surfaceTintColor: p.getValue('surfaceTintColor'),
        shadowColor: p.getValue('shadowColor'),
        dividerColor: p.getValue('dividerColor'),
        contentTextStyle: p.getValue('contentTextStyle'),
        elevation: p.getValue('elevation'),
        padding: p.getValue('padding'),
        leadingPadding: p.getValue('leadingPadding'),
      ),
    );
    mateParams.set(name: 'backgroundColor', init: backgroundColor);
    mateParams.set(name: 'surfaceTintColor', init: surfaceTintColor);
    mateParams.set(name: 'shadowColor', init: shadowColor);
    mateParams.set(name: 'dividerColor', init: dividerColor);
    mateParams.set(name: 'contentTextStyle', init: contentTextStyle);
    mateParams.set(name: 'elevation', init: elevation);
    mateParams.set(name: 'padding', init: padding);
    mateParams.set(name: 'leadingPadding', init: leadingPadding);
  }
}

/// class MaterialBannerTheme extends InheritedTheme
class MaterialBannerTheme$Mate extends MaterialBannerTheme with WidgetMate<MaterialBannerTheme$Mate> {
  /// MaterialBannerTheme MaterialBannerTheme({Key? key, MaterialBannerThemeData? data, required Widget child})
  MaterialBannerTheme$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {MaterialBannerThemeData? data}
    MaterialBannerThemeData? data,

    /// param: {required Widget child}
    required Widget child,
  }) : super(
          key: key,
          data: data,
          child: child,
        ) {
    mateParams = Params(
      init: this,
      builder: (p) => MaterialBannerTheme$Mate(
        key: p.getValue('key'),
        data: p.getValue('data'),
        child: p.getValue('child'),
      ),
    );
    mateParams.set(name: 'key', init: key);
    mateParams.set(name: 'data', init: data);
    mateParams.set(name: 'child', init: child);
  }
}
