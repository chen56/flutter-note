// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-11 13:17:26.947724

import 'package:flutter/src/material/icon_button.dart';
import 'package:flutter/src/foundation/key.dart';
import 'dart:core';
import 'package:flutter/src/material/theme_data.dart';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/painting/alignment.dart';
import 'dart:ui';
import 'package:flutter/src/services/mouse_cursor.dart';
import 'package:flutter/src/widgets/focus_manager.dart';
import 'package:flutter/src/rendering/box.dart';
import 'package:flutter/src/material/button_style.dart';
import 'package:flutter/src/widgets/framework.dart';

/// class IconButton extends StatelessWidget
class IconButton$Mate extends IconButton {
  /// IconButton IconButton({Key? key, double? iconSize, VisualDensity? visualDensity, EdgeInsetsGeometry? padding, AlignmentGeometry? alignment, double? splashRadius, Color? color, Color? focusColor, Color? hoverColor, Color? highlightColor, Color? splashColor, Color? disabledColor, required void Function()? onPressed, MouseCursor? mouseCursor, FocusNode? focusNode, bool autofocus = false, String? tooltip, bool? enableFeedback, BoxConstraints? constraints, ButtonStyle? style, bool? isSelected, Widget? selectedIcon, required Widget icon})
  IconButton$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {double? iconSize}
    double? iconSize,

    /// param: {VisualDensity? visualDensity}
    VisualDensity? visualDensity,

    /// param: {EdgeInsetsGeometry? padding}
    EdgeInsetsGeometry? padding,

    /// param: {AlignmentGeometry? alignment}
    AlignmentGeometry? alignment,

    /// param: {double? splashRadius}
    double? splashRadius,

    /// param: {Color? color}
    Color? color,

    /// param: {Color? focusColor}
    Color? focusColor,

    /// param: {Color? hoverColor}
    Color? hoverColor,

    /// param: {Color? highlightColor}
    Color? highlightColor,

    /// param: {Color? splashColor}
    Color? splashColor,

    /// param: {Color? disabledColor}
    Color? disabledColor,

    /// param: {required void Function()? onPressed}
    required VoidCallback? onPressed,

    /// param: {MouseCursor? mouseCursor}
    MouseCursor? mouseCursor,

    /// param: {FocusNode? focusNode}
    FocusNode? focusNode,

    /// param: {bool autofocus = false}
    required bool autofocus,

    /// param: {String? tooltip}
    String? tooltip,

    /// param: {bool? enableFeedback}
    bool? enableFeedback,

    /// param: {BoxConstraints? constraints}
    BoxConstraints? constraints,

    /// param: {ButtonStyle? style}
    ButtonStyle? style,

    /// param: {bool? isSelected}
    bool? isSelected,

    /// param: {Widget? selectedIcon}
    Widget? selectedIcon,

    /// param: {required Widget icon}
    required Widget icon,
  }) : super(
          key: key,
          iconSize: iconSize,
          visualDensity: visualDensity,
          padding: padding,
          alignment: alignment,
          splashRadius: splashRadius,
          color: color,
          focusColor: focusColor,
          hoverColor: hoverColor,
          highlightColor: highlightColor,
          splashColor: splashColor,
          disabledColor: disabledColor,
          onPressed: onPressed,
          mouseCursor: mouseCursor,
          focusNode: focusNode,
          autofocus: autofocus,
          tooltip: tooltip,
          enableFeedback: enableFeedback,
          constraints: constraints,
          style: style,
          isSelected: isSelected,
          selectedIcon: selectedIcon,
          icon: icon,
        ) {}
}
