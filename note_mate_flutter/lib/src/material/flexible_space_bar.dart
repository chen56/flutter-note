// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-11 13:17:26.930765

import 'package:flutter/src/material/flexible_space_bar.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'dart:core';
import 'package:flutter/src/painting/edge_insets.dart';

/// class FlexibleSpaceBar extends StatefulWidget
class FlexibleSpaceBar$Mate extends FlexibleSpaceBar {
  /// FlexibleSpaceBar FlexibleSpaceBar({Key? key, Widget? title, Widget? background, bool? centerTitle, EdgeInsetsGeometry? titlePadding, CollapseMode collapseMode = CollapseMode.parallax, List<StretchMode> stretchModes = const <StretchMode>[StretchMode.zoomBackground], double expandedTitleScale = 1.5})
  FlexibleSpaceBar$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {Widget? title}
    Widget? title,

    /// param: {Widget? background}
    Widget? background,

    /// param: {bool? centerTitle}
    bool? centerTitle,

    /// param: {EdgeInsetsGeometry? titlePadding}
    EdgeInsetsGeometry? titlePadding,

    /// param: {CollapseMode collapseMode = CollapseMode.parallax}
    required CollapseMode collapseMode,

    /// param: {List<StretchMode> stretchModes = const <StretchMode>[StretchMode.zoomBackground]}
    required List<StretchMode> stretchModes,

    /// param: {double expandedTitleScale = 1.5}
    required double expandedTitleScale,
  }) : super(
          key: key,
          title: title,
          background: background,
          centerTitle: centerTitle,
          titlePadding: titlePadding,
          collapseMode: collapseMode,
          stretchModes: stretchModes,
          expandedTitleScale: expandedTitleScale,
        ) {}
}

/// class FlexibleSpaceBarSettings extends InheritedWidget
class FlexibleSpaceBarSettings$Mate extends FlexibleSpaceBarSettings {
  /// FlexibleSpaceBarSettings FlexibleSpaceBarSettings({Key? key, required double toolbarOpacity, required double minExtent, required double maxExtent, required double currentExtent, required Widget child, bool? isScrolledUnder})
  FlexibleSpaceBarSettings$Mate({
    /// param: {Key? key}
    Key? key,

    /// param: {required double toolbarOpacity}
    required double toolbarOpacity,

    /// param: {required double minExtent}
    required double minExtent,

    /// param: {required double maxExtent}
    required double maxExtent,

    /// param: {required double currentExtent}
    required double currentExtent,

    /// param: {required Widget child}
    required Widget child,

    /// param: {bool? isScrolledUnder}
    bool? isScrolledUnder,
  }) : super(
          key: key,
          toolbarOpacity: toolbarOpacity,
          minExtent: minExtent,
          maxExtent: maxExtent,
          currentExtent: currentExtent,
          child: child,
          isScrolledUnder: isScrolledUnder,
        ) {}
}
