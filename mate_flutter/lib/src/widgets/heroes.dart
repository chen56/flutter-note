// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:01.639029

library;

import 'package:flutter/src/foundation/key.dart';
import 'dart:core';
import 'package:flutter/src/animation/tween.dart';
import 'dart:ui';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/animation/animation.dart';
import 'package:flutter/src/widgets/heroes.dart';

/// class Hero extends StatefulWidget
class HeroMate {
  /// Hero Hero({Key? key, required Object tag, Tween<Rect?> Function(Rect?, Rect?)? createRectTween, Widget Function(BuildContext, Animation<double>, HeroFlightDirection, BuildContext, BuildContext)? flightShuttleBuilder, Widget Function(BuildContext, Size, Widget)? placeholderBuilder, bool transitionOnUserGestures = false, required Widget child})
  HeroMate({
// param: {Key? key}
    Key? key,
// param: {required Object tag}
    required Object tag,
// param: {Tween<Rect?> Function(Rect?, Rect?)? createRectTween}
    Tween<Rect?> Function(
      Rect?,
      Rect?, [
      Rect?,
      Rect?,
    ])?
        createRectTween,
// param: {Widget Function(BuildContext, Animation<double>, HeroFlightDirection, BuildContext, BuildContext)? flightShuttleBuilder}
    Widget Function(
      BuildContext,
      Animation<double>,
      HeroFlightDirection,
      BuildContext,
      BuildContext, [
      BuildContext,
      Animation<double>,
      HeroFlightDirection,
      BuildContext,
      BuildContext,
    ])?
        flightShuttleBuilder,
// param: {Widget Function(BuildContext, Size, Widget)? placeholderBuilder}
    Widget Function(
      BuildContext,
      Size,
      Widget, [
      BuildContext,
      Size,
      Widget,
    ])?
        placeholderBuilder,
// param: {bool transitionOnUserGestures = false}
    required bool transitionOnUserGestures,
// param: {required Widget child}
    required Widget child,
  }) {}
}

/// class HeroController extends NavigatorObserver
class HeroControllerMate {
  /// HeroController HeroController({Tween<Rect?> Function(Rect?, Rect?)? createRectTween})
  HeroControllerMate(
      {
// param: {Tween<Rect?> Function(Rect?, Rect?)? createRectTween}
      Tween<Rect?> Function(
        Rect?,
        Rect?, [
        Rect?,
        Rect?,
      ])?
          createRectTween}) {}
}

/// class HeroMode extends StatelessWidget
class HeroModeMate {
  /// HeroMode HeroMode({Key? key, required Widget child, bool enabled = true})
  HeroModeMate({
// param: {Key? key}
    Key? key,
// param: {required Widget child}
    required Widget child,
// param: {bool enabled = true}
    required bool enabled,
  }) {}
}
