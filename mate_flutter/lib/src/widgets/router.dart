// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-09 14:20:11.372929

library;

import 'package:flutter/src/widgets/router.dart';
import 'dart:core';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/foundation/basic_types.dart';
import 'dart:async';

/// class RouteInformation
class RouteInformationMate extends RouteInformation {
  /// RouteInformation RouteInformation({String? location, Object? state})
  RouteInformationMate({
    /// param: {String? location}
    String? location,

    /// param: {Object? state}
    Object? state,
  }) : super(
          location: location,
          state: state,
        ) {}
}

/// class RouterConfig<T>
class RouterConfigMate<T> extends RouterConfig<T> {
  /// RouterConfig<T> RouterConfig({RouteInformationProvider? routeInformationProvider, RouteInformationParser<T>? routeInformationParser, required RouterDelegate<T> routerDelegate, BackButtonDispatcher? backButtonDispatcher})
  RouterConfigMate({
    /// param: {RouteInformationProvider? routeInformationProvider}
    RouteInformationProvider? routeInformationProvider,

    /// param: {RouteInformationParser<T>? routeInformationParser}
    RouteInformationParser<T>? routeInformationParser,

    /// param: {required RouterDelegate<T> routerDelegate}
    required RouterDelegate<T> routerDelegate,

    /// param: {BackButtonDispatcher? backButtonDispatcher}
    BackButtonDispatcher? backButtonDispatcher,
  }) : super(
          routeInformationProvider: routeInformationProvider,
          routeInformationParser: routeInformationParser,
          routerDelegate: routerDelegate,
          backButtonDispatcher: backButtonDispatcher,
        ) {}
}

/// class Router<T> extends StatefulWidget
class RouterMate<T> extends Router<T> {
  /// Router<T> Router({Key? key, RouteInformationProvider? routeInformationProvider, RouteInformationParser<T>? routeInformationParser, required RouterDelegate<T> routerDelegate, BackButtonDispatcher? backButtonDispatcher, String? restorationScopeId})
  RouterMate({
    /// param: {Key? key}
    Key? key,

    /// param: {RouteInformationProvider? routeInformationProvider}
    RouteInformationProvider? routeInformationProvider,

    /// param: {RouteInformationParser<T>? routeInformationParser}
    RouteInformationParser<T>? routeInformationParser,

    /// param: {required RouterDelegate<T> routerDelegate}
    required RouterDelegate<T> routerDelegate,

    /// param: {BackButtonDispatcher? backButtonDispatcher}
    BackButtonDispatcher? backButtonDispatcher,

    /// param: {String? restorationScopeId}
    String? restorationScopeId,
  }) : super(
          key: key,
          routeInformationProvider: routeInformationProvider,
          routeInformationParser: routeInformationParser,
          routerDelegate: routerDelegate,
          backButtonDispatcher: backButtonDispatcher,
          restorationScopeId: restorationScopeId,
        ) {}
}

/// class ChildBackButtonDispatcher extends BackButtonDispatcher
class ChildBackButtonDispatcherMate extends ChildBackButtonDispatcher {
  /// ChildBackButtonDispatcher ChildBackButtonDispatcher(BackButtonDispatcher parent)
  ChildBackButtonDispatcherMate(

      /// param: BackButtonDispatcher parent
      BackButtonDispatcher parent)
      : super(parent) {}
}

/// class BackButtonListener extends StatefulWidget
class BackButtonListenerMate extends BackButtonListener {
  /// BackButtonListener BackButtonListener({Key? key, required Widget child, required Future<bool> Function() onBackButtonPressed})
  BackButtonListenerMate({
    /// param: {Key? key}
    Key? key,

    /// param: {required Widget child}
    required Widget child,

    /// param: {required Future<bool> Function() onBackButtonPressed}
    required ValueGetter<Future<bool>> onBackButtonPressed,
  }) : super(
          key: key,
          child: child,
          onBackButtonPressed: onBackButtonPressed,
        ) {}
}

/// class PlatformRouteInformationProvider extends RouteInformationProvider with WidgetsBindingObserver, ChangeNotifier
class PlatformRouteInformationProviderMate extends PlatformRouteInformationProvider {
  /// PlatformRouteInformationProvider PlatformRouteInformationProvider({required RouteInformation initialRouteInformation})
  PlatformRouteInformationProviderMate(
      {
      /// param: {required RouteInformation initialRouteInformation}
      required RouteInformation initialRouteInformation})
      : super(initialRouteInformation: initialRouteInformation) {}
}
