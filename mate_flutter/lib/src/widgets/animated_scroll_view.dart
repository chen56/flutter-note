// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:01.306760

library;

import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'dart:core';
import 'package:flutter/src/animation/animation.dart';
import 'package:flutter/src/painting/basic_types.dart';
import 'package:flutter/src/widgets/scroll_controller.dart';
import 'package:flutter/src/widgets/scroll_physics.dart';
import 'package:flutter/src/painting/edge_insets.dart';
import 'dart:ui';
import 'package:flutter/src/rendering/sliver_grid.dart';

/// class AnimatedList extends _AnimatedScrollView
class AnimatedListMate {
  /// AnimatedList AnimatedList({Key? key, required Widget Function(BuildContext, int, Animation<double>) itemBuilder, int initialItemCount = 0, Axis scrollDirection = Axis.vertical, bool reverse = false, ScrollController? controller, bool? primary, ScrollPhysics? physics, bool shrinkWrap = false, EdgeInsetsGeometry? padding, Clip clipBehavior = Clip.hardEdge})
  AnimatedListMate({
// param: {Key? key}
    Key? key,
// param: {required Widget Function(BuildContext, int, Animation<double>) itemBuilder}
    required Widget Function(
      BuildContext,
      int,
      Animation<double>, [
      BuildContext,
      int,
      Animation<double>,
    ])
        itemBuilder,
// param: {int initialItemCount = 0}
    required int initialItemCount,
// param: {Axis scrollDirection = Axis.vertical}
    required Axis scrollDirection,
// param: {bool reverse = false}
    required bool reverse,
// param: {ScrollController? controller}
    ScrollController? controller,
// param: {bool? primary}
    bool? primary,
// param: {ScrollPhysics? physics}
    ScrollPhysics? physics,
// param: {bool shrinkWrap = false}
    required bool shrinkWrap,
// param: {EdgeInsetsGeometry? padding}
    EdgeInsetsGeometry? padding,
// param: {Clip clipBehavior = Clip.hardEdge}
    required Clip clipBehavior,
  }) {}
}

/// class AnimatedListState extends _AnimatedScrollViewState<AnimatedList>
class AnimatedListStateMate {
  /// AnimatedListState AnimatedListState()
  AnimatedListStateMate() {}
}

/// class AnimatedGrid extends _AnimatedScrollView
class AnimatedGridMate {
  /// AnimatedGrid AnimatedGrid({Key? key, required Widget Function(BuildContext, int, Animation<double>) itemBuilder, required SliverGridDelegate gridDelegate, int initialItemCount = 0, Axis scrollDirection = Axis.vertical, bool reverse = false, ScrollController? controller, bool? primary, ScrollPhysics? physics, EdgeInsetsGeometry? padding, Clip clipBehavior = Clip.hardEdge})
  AnimatedGridMate({
// param: {Key? key}
    Key? key,
// param: {required Widget Function(BuildContext, int, Animation<double>) itemBuilder}
    required Widget Function(
      BuildContext,
      int,
      Animation<double>, [
      BuildContext,
      int,
      Animation<double>,
    ])
        itemBuilder,
// param: {required SliverGridDelegate gridDelegate}
    required SliverGridDelegate gridDelegate,
// param: {int initialItemCount = 0}
    required int initialItemCount,
// param: {Axis scrollDirection = Axis.vertical}
    required Axis scrollDirection,
// param: {bool reverse = false}
    required bool reverse,
// param: {ScrollController? controller}
    ScrollController? controller,
// param: {bool? primary}
    bool? primary,
// param: {ScrollPhysics? physics}
    ScrollPhysics? physics,
// param: {EdgeInsetsGeometry? padding}
    EdgeInsetsGeometry? padding,
// param: {Clip clipBehavior = Clip.hardEdge}
    required Clip clipBehavior,
  }) {}
}

/// class AnimatedGridState extends _AnimatedScrollViewState<AnimatedGrid>
class AnimatedGridStateMate {
  /// AnimatedGridState AnimatedGridState()
  AnimatedGridStateMate() {}
}

/// class SliverAnimatedList extends _SliverAnimatedMultiBoxAdaptor
class SliverAnimatedListMate {
  /// SliverAnimatedList SliverAnimatedList({Key? key, required Widget Function(BuildContext, int, Animation<double>) itemBuilder, int? Function(Key)? findChildIndexCallback, int initialItemCount = 0})
  SliverAnimatedListMate({
// param: {Key? key}
    Key? key,
// param: {required Widget Function(BuildContext, int, Animation<double>) itemBuilder}
    required Widget Function(
      BuildContext,
      int,
      Animation<double>, [
      BuildContext,
      int,
      Animation<double>,
    ])
        itemBuilder,
// param: {int? Function(Key)? findChildIndexCallback}
    int? Function(
      Key, [
      Key,
    ])?
        findChildIndexCallback,
// param: {int initialItemCount = 0}
    required int initialItemCount,
  }) {}
}

/// class SliverAnimatedListState extends _SliverAnimatedMultiBoxAdaptorState<SliverAnimatedList>
class SliverAnimatedListStateMate {
  /// SliverAnimatedListState SliverAnimatedListState()
  SliverAnimatedListStateMate() {}
}

/// class SliverAnimatedGrid extends _SliverAnimatedMultiBoxAdaptor
class SliverAnimatedGridMate {
  /// SliverAnimatedGrid SliverAnimatedGrid({Key? key, required Widget Function(BuildContext, int, Animation<double>) itemBuilder, required SliverGridDelegate gridDelegate, int? Function(Key)? findChildIndexCallback, int initialItemCount = 0})
  SliverAnimatedGridMate({
// param: {Key? key}
    Key? key,
// param: {required Widget Function(BuildContext, int, Animation<double>) itemBuilder}
    required Widget Function(
      BuildContext,
      int,
      Animation<double>, [
      BuildContext,
      int,
      Animation<double>,
    ])
        itemBuilder,
// param: {required SliverGridDelegate gridDelegate}
    required SliverGridDelegate gridDelegate,
// param: {int? Function(Key)? findChildIndexCallback}
    int? Function(
      Key, [
      Key,
    ])?
        findChildIndexCallback,
// param: {int initialItemCount = 0}
    required int initialItemCount,
  }) {}
}

/// class SliverAnimatedGridState extends _SliverAnimatedMultiBoxAdaptorState<SliverAnimatedGrid>
class SliverAnimatedGridStateMate {
  /// SliverAnimatedGridState SliverAnimatedGridState()
  SliverAnimatedGridStateMate() {}
}
