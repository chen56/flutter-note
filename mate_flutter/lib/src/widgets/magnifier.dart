// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-11 00:36:15.524237

import 'package:flutter/src/widgets/magnifier.dart';
import 'dart:ui';
import 'dart:core';
import 'package:flutter/src/animation/animation_controller.dart';
import 'package:flutter/src/painting/box_shadow.dart';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';

/// class MagnifierInfo
class MagnifierInfoMate extends MagnifierInfo {
  /// MagnifierInfo MagnifierInfo({required Offset globalGesturePosition, required Rect caretRect, required Rect fieldBounds, required Rect currentLineBoundaries})
  MagnifierInfoMate({
    /// param: {required Offset globalGesturePosition}
    required Offset globalGesturePosition,

    /// param: {required Rect caretRect}
    required Rect caretRect,

    /// param: {required Rect fieldBounds}
    required Rect fieldBounds,

    /// param: {required Rect currentLineBoundaries}
    required Rect currentLineBoundaries,
  }) : super(
          globalGesturePosition: globalGesturePosition,
          caretRect: caretRect,
          fieldBounds: fieldBounds,
          currentLineBoundaries: currentLineBoundaries,
        ) {}
}

/// class TextMagnifierConfiguration
class TextMagnifierConfigurationMate extends TextMagnifierConfiguration {
  /// TextMagnifierConfiguration TextMagnifierConfiguration({Widget? Function(BuildContext, MagnifierController, ValueNotifier<MagnifierInfo>)? magnifierBuilder, bool shouldDisplayHandlesInMagnifier = true})
  TextMagnifierConfigurationMate({
    /// param: {Widget? Function(BuildContext, MagnifierController, ValueNotifier<MagnifierInfo>)? magnifierBuilder}
    MagnifierBuilder? magnifierBuilder,

    /// param: {bool shouldDisplayHandlesInMagnifier = true}
    required bool shouldDisplayHandlesInMagnifier,
  }) : super(
          magnifierBuilder: magnifierBuilder,
          shouldDisplayHandlesInMagnifier: shouldDisplayHandlesInMagnifier,
        ) {}
}

/// class MagnifierController
class MagnifierControllerMate extends MagnifierController {
  /// MagnifierController MagnifierController({AnimationController? animationController})
  MagnifierControllerMate(
      {
      /// param: {AnimationController? animationController}
      AnimationController? animationController})
      : super(animationController: animationController) {}
}

/// class MagnifierDecoration extends ShapeDecoration
class MagnifierDecorationMate extends MagnifierDecoration {
  /// MagnifierDecoration MagnifierDecoration({double opacity = 1, List<BoxShadow>? shadows, ShapeBorder shape = const RoundedRectangleBorder()})
  MagnifierDecorationMate({
    /// param: {double opacity = 1}
    required double opacity,

    /// param: {List<BoxShadow>? shadows}
    List<BoxShadow>? shadows,

    /// param: {ShapeBorder shape = const RoundedRectangleBorder()}
    required ShapeBorder shape,
  }) : super(
          opacity: opacity,
          shadows: shadows,
          shape: shape,
        ) {}
}

/// class RawMagnifier extends StatelessWidget
class RawMagnifierMate extends RawMagnifier {
  /// RawMagnifier RawMagnifier({Key? key, Widget? child, MagnifierDecoration decoration = const MagnifierDecoration(), Offset focalPointOffset = Offset.zero, double magnificationScale = 1, required Size size})
  RawMagnifierMate({
    /// param: {Key? key}
    Key? key,

    /// param: {Widget? child}
    Widget? child,

    /// param: {MagnifierDecoration decoration = const MagnifierDecoration()}
    required MagnifierDecoration decoration,

    /// param: {Offset focalPointOffset = Offset.zero}
    required Offset focalPointOffset,

    /// param: {double magnificationScale = 1}
    required double magnificationScale,

    /// param: {required Size size}
    required Size size,
  }) : super(
          key: key,
          child: child,
          decoration: decoration,
          focalPointOffset: focalPointOffset,
          magnificationScale: magnificationScale,
          size: size,
        ) {}
}
