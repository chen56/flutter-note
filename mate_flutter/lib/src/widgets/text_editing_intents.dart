// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:01.982481

library;

import 'dart:core';
import 'package:flutter/src/services/text_input.dart';
import 'dart:ui';
import 'package:flutter/src/services/text_editing.dart';

/// class DoNothingAndStopPropagationTextIntent extends Intent
class DoNothingAndStopPropagationTextIntentMate {
  /// DoNothingAndStopPropagationTextIntent DoNothingAndStopPropagationTextIntent()
  DoNothingAndStopPropagationTextIntentMate() {}
}

/// abstract class DirectionalTextEditingIntent extends Intent
abstract class DirectionalTextEditingIntentMate {
  /// DirectionalTextEditingIntent DirectionalTextEditingIntent(bool forward)
  DirectionalTextEditingIntentMate(
// param: bool forward
      bool forward) {}
}

/// class DeleteCharacterIntent extends DirectionalTextEditingIntent
class DeleteCharacterIntentMate {
  /// DeleteCharacterIntent DeleteCharacterIntent({required bool forward})
  DeleteCharacterIntentMate(
      {
// param: {required bool forward}
      required bool forward}) {}
}

/// class DeleteToNextWordBoundaryIntent extends DirectionalTextEditingIntent
class DeleteToNextWordBoundaryIntentMate {
  /// DeleteToNextWordBoundaryIntent DeleteToNextWordBoundaryIntent({required bool forward})
  DeleteToNextWordBoundaryIntentMate(
      {
// param: {required bool forward}
      required bool forward}) {}
}

/// class DeleteToLineBreakIntent extends DirectionalTextEditingIntent
class DeleteToLineBreakIntentMate {
  /// DeleteToLineBreakIntent DeleteToLineBreakIntent({required bool forward})
  DeleteToLineBreakIntentMate(
      {
// param: {required bool forward}
      required bool forward}) {}
}

/// abstract class DirectionalCaretMovementIntent extends DirectionalTextEditingIntent
abstract class DirectionalCaretMovementIntentMate {
  /// DirectionalCaretMovementIntent DirectionalCaretMovementIntent(bool forward, bool collapseSelection, [bool collapseAtReversal = false, bool continuesAtWrap = false])
  DirectionalCaretMovementIntentMate(
// param: bool forward
    bool forward,
// param: bool collapseSelection
    bool collapseSelection,
// param: [bool collapseAtReversal = false]
    bool collapseAtReversal,
// param: [bool continuesAtWrap = false]
    bool continuesAtWrap,
  ) {}
}

/// class ExtendSelectionByCharacterIntent extends DirectionalCaretMovementIntent
class ExtendSelectionByCharacterIntentMate {
  /// ExtendSelectionByCharacterIntent ExtendSelectionByCharacterIntent({required bool forward, required bool collapseSelection})
  ExtendSelectionByCharacterIntentMate({
// param: {required bool forward}
    required bool forward,
// param: {required bool collapseSelection}
    required bool collapseSelection,
  }) {}
}

/// class ExtendSelectionToNextWordBoundaryIntent extends DirectionalCaretMovementIntent
class ExtendSelectionToNextWordBoundaryIntentMate {
  /// ExtendSelectionToNextWordBoundaryIntent ExtendSelectionToNextWordBoundaryIntent({required bool forward, required bool collapseSelection})
  ExtendSelectionToNextWordBoundaryIntentMate({
// param: {required bool forward}
    required bool forward,
// param: {required bool collapseSelection}
    required bool collapseSelection,
  }) {}
}

/// class ExtendSelectionToNextWordBoundaryOrCaretLocationIntent extends DirectionalCaretMovementIntent
class ExtendSelectionToNextWordBoundaryOrCaretLocationIntentMate {
  /// ExtendSelectionToNextWordBoundaryOrCaretLocationIntent ExtendSelectionToNextWordBoundaryOrCaretLocationIntent({required bool forward})
  ExtendSelectionToNextWordBoundaryOrCaretLocationIntentMate(
      {
// param: {required bool forward}
      required bool forward}) {}
}

/// class ExpandSelectionToDocumentBoundaryIntent extends DirectionalCaretMovementIntent
class ExpandSelectionToDocumentBoundaryIntentMate {
  /// ExpandSelectionToDocumentBoundaryIntent ExpandSelectionToDocumentBoundaryIntent({required bool forward})
  ExpandSelectionToDocumentBoundaryIntentMate(
      {
// param: {required bool forward}
      required bool forward}) {}
}

/// class ExpandSelectionToLineBreakIntent extends DirectionalCaretMovementIntent
class ExpandSelectionToLineBreakIntentMate {
  /// ExpandSelectionToLineBreakIntent ExpandSelectionToLineBreakIntent({required bool forward})
  ExpandSelectionToLineBreakIntentMate(
      {
// param: {required bool forward}
      required bool forward}) {}
}

/// class ExtendSelectionToLineBreakIntent extends DirectionalCaretMovementIntent
class ExtendSelectionToLineBreakIntentMate {
  /// ExtendSelectionToLineBreakIntent ExtendSelectionToLineBreakIntent({required bool forward, required bool collapseSelection, bool collapseAtReversal = false, bool continuesAtWrap = false})
  ExtendSelectionToLineBreakIntentMate({
// param: {required bool forward}
    required bool forward,
// param: {required bool collapseSelection}
    required bool collapseSelection,
// param: {bool collapseAtReversal = false}
    required bool collapseAtReversal,
// param: {bool continuesAtWrap = false}
    required bool continuesAtWrap,
  }) {}
}

/// class ExtendSelectionVerticallyToAdjacentLineIntent extends DirectionalCaretMovementIntent
class ExtendSelectionVerticallyToAdjacentLineIntentMate {
  /// ExtendSelectionVerticallyToAdjacentLineIntent ExtendSelectionVerticallyToAdjacentLineIntent({required bool forward, required bool collapseSelection})
  ExtendSelectionVerticallyToAdjacentLineIntentMate({
// param: {required bool forward}
    required bool forward,
// param: {required bool collapseSelection}
    required bool collapseSelection,
  }) {}
}

/// class ExtendSelectionVerticallyToAdjacentPageIntent extends DirectionalCaretMovementIntent
class ExtendSelectionVerticallyToAdjacentPageIntentMate {
  /// ExtendSelectionVerticallyToAdjacentPageIntent ExtendSelectionVerticallyToAdjacentPageIntent({required bool forward, required bool collapseSelection})
  ExtendSelectionVerticallyToAdjacentPageIntentMate({
// param: {required bool forward}
    required bool forward,
// param: {required bool collapseSelection}
    required bool collapseSelection,
  }) {}
}

/// class ExtendSelectionToNextParagraphBoundaryIntent extends DirectionalCaretMovementIntent
class ExtendSelectionToNextParagraphBoundaryIntentMate {
  /// ExtendSelectionToNextParagraphBoundaryIntent ExtendSelectionToNextParagraphBoundaryIntent({required bool forward, required bool collapseSelection})
  ExtendSelectionToNextParagraphBoundaryIntentMate({
// param: {required bool forward}
    required bool forward,
// param: {required bool collapseSelection}
    required bool collapseSelection,
  }) {}
}

/// class ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent extends DirectionalCaretMovementIntent
class ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntentMate {
  /// ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent({required bool forward})
  ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntentMate(
      {
// param: {required bool forward}
      required bool forward}) {}
}

/// class ExtendSelectionToDocumentBoundaryIntent extends DirectionalCaretMovementIntent
class ExtendSelectionToDocumentBoundaryIntentMate {
  /// ExtendSelectionToDocumentBoundaryIntent ExtendSelectionToDocumentBoundaryIntent({required bool forward, required bool collapseSelection})
  ExtendSelectionToDocumentBoundaryIntentMate({
// param: {required bool forward}
    required bool forward,
// param: {required bool collapseSelection}
    required bool collapseSelection,
  }) {}
}

/// class ScrollToDocumentBoundaryIntent extends DirectionalTextEditingIntent
class ScrollToDocumentBoundaryIntentMate {
  /// ScrollToDocumentBoundaryIntent ScrollToDocumentBoundaryIntent({required bool forward})
  ScrollToDocumentBoundaryIntentMate(
      {
// param: {required bool forward}
      required bool forward}) {}
}

/// class ExtendSelectionByPageIntent extends DirectionalTextEditingIntent
class ExtendSelectionByPageIntentMate {
  /// ExtendSelectionByPageIntent ExtendSelectionByPageIntent({required bool forward})
  ExtendSelectionByPageIntentMate(
      {
// param: {required bool forward}
      required bool forward}) {}
}

/// class SelectAllTextIntent extends Intent
class SelectAllTextIntentMate {
  /// SelectAllTextIntent SelectAllTextIntent(SelectionChangedCause cause)
  SelectAllTextIntentMate(
// param: SelectionChangedCause cause
      SelectionChangedCause cause) {}
}

/// class CopySelectionTextIntent extends Intent
class CopySelectionTextIntentMate {
  /// CopySelectionTextIntent CopySelectionTextIntent.cut(SelectionChangedCause cause)
  CopySelectionTextIntentMate.cut(
// param: SelectionChangedCause cause
      SelectionChangedCause cause) {}
}

/// class PasteTextIntent extends Intent
class PasteTextIntentMate {
  /// PasteTextIntent PasteTextIntent(SelectionChangedCause cause)
  PasteTextIntentMate(
// param: SelectionChangedCause cause
      SelectionChangedCause cause) {}
}

/// class RedoTextIntent extends Intent
class RedoTextIntentMate {
  /// RedoTextIntent RedoTextIntent(SelectionChangedCause cause)
  RedoTextIntentMate(
// param: SelectionChangedCause cause
      SelectionChangedCause cause) {}
}

/// class ReplaceTextIntent extends Intent
class ReplaceTextIntentMate {
  /// ReplaceTextIntent ReplaceTextIntent(TextEditingValue currentTextEditingValue, String replacementText, TextRange replacementRange, SelectionChangedCause cause)
  ReplaceTextIntentMate(
// param: TextEditingValue currentTextEditingValue
    TextEditingValue currentTextEditingValue,
// param: String replacementText
    String replacementText,
// param: TextRange replacementRange
    TextRange replacementRange,
// param: SelectionChangedCause cause
    SelectionChangedCause cause,
  ) {}
}

/// class UndoTextIntent extends Intent
class UndoTextIntentMate {
  /// UndoTextIntent UndoTextIntent(SelectionChangedCause cause)
  UndoTextIntentMate(
// param: SelectionChangedCause cause
      SelectionChangedCause cause) {}
}

/// class UpdateSelectionIntent extends Intent
class UpdateSelectionIntentMate {
  /// UpdateSelectionIntent UpdateSelectionIntent(TextEditingValue currentTextEditingValue, TextSelection newSelection, SelectionChangedCause cause)
  UpdateSelectionIntentMate(
// param: TextEditingValue currentTextEditingValue
    TextEditingValue currentTextEditingValue,
// param: TextSelection newSelection
    TextSelection newSelection,
// param: SelectionChangedCause cause
    SelectionChangedCause cause,
  ) {}
}

/// class TransposeCharactersIntent extends Intent
class TransposeCharactersIntentMate {
  /// TransposeCharactersIntent TransposeCharactersIntent()
  TransposeCharactersIntentMate() {}
}
