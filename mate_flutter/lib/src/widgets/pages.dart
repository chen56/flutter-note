// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:01.770463

library;

import 'package:flutter/src/widgets/navigator.dart';
import 'dart:core';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/animation/animation.dart';
import 'dart:ui';

/// abstract class PageRoute<T> extends ModalRoute<T>
abstract class PageRouteMate<T> {
  /// PageRoute<T> PageRoute({RouteSettings? settings, bool fullscreenDialog = false, bool allowSnapshotting = true})
  PageRouteMate({
// param: {RouteSettings? settings}
    RouteSettings? settings,
// param: {bool fullscreenDialog = false}
    required bool fullscreenDialog,
// param: {bool allowSnapshotting = true}
    required bool allowSnapshotting,
  }) {}
}

/// class PageRouteBuilder<T> extends PageRoute<T>
class PageRouteBuilderMate<T> {
  /// PageRouteBuilder<T> PageRouteBuilder({RouteSettings? settings, required Widget Function(BuildContext, Animation<double>, Animation<double>) pageBuilder, Widget Function(BuildContext, Animation<double>, Animation<double>, Widget) transitionsBuilder = _defaultTransitionsBuilder, Duration transitionDuration = const Duration(milliseconds: 300), Duration reverseTransitionDuration = const Duration(milliseconds: 300), bool opaque = true, bool barrierDismissible = false, Color? barrierColor, String? barrierLabel, bool maintainState = true, bool fullscreenDialog = false, bool allowSnapshotting = true})
  PageRouteBuilderMate({
// param: {RouteSettings? settings}
    RouteSettings? settings,
// param: {required Widget Function(BuildContext, Animation<double>, Animation<double>) pageBuilder}
    required Widget Function(
      BuildContext,
      Animation<double>,
      Animation<double>, [
      BuildContext,
      Animation<double>,
      Animation<double>,
    ])
        pageBuilder,
// param: {Widget Function(BuildContext, Animation<double>, Animation<double>, Widget) transitionsBuilder = _defaultTransitionsBuilder}
    required Widget Function(
      BuildContext,
      Animation<double>,
      Animation<double>,
      Widget, [
      BuildContext,
      Animation<double>,
      Animation<double>,
      Widget,
    ])
        transitionsBuilder,
// param: {Duration transitionDuration = const Duration(milliseconds: 300)}
    required Duration transitionDuration,
// param: {Duration reverseTransitionDuration = const Duration(milliseconds: 300)}
    required Duration reverseTransitionDuration,
// param: {bool opaque = true}
    required bool opaque,
// param: {bool barrierDismissible = false}
    required bool barrierDismissible,
// param: {Color? barrierColor}
    Color? barrierColor,
// param: {String? barrierLabel}
    String? barrierLabel,
// param: {bool maintainState = true}
    required bool maintainState,
// param: {bool fullscreenDialog = false}
    required bool fullscreenDialog,
// param: {bool allowSnapshotting = true}
    required bool allowSnapshotting,
  }) {}
}
