// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:01.608654

library;

import 'dart:core';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/rendering/object.dart';
import 'package:flutter/src/widgets/focus_manager.dart';
import 'package:flutter/src/foundation/assertions.dart';
export 'package:flutter/foundation.dart'
    show factory, immutable, mustCallSuper, optionalTypeArgs, protected, required, visibleForTesting;
export 'package:flutter/foundation.dart'
    show ErrorDescription, ErrorHint, ErrorSummary, FlutterError, debugPrint, debugPrintStack;
export 'package:flutter/foundation.dart' show ValueChanged, ValueGetter, ValueSetter, VoidCallback;
export 'package:flutter/foundation.dart' show DiagnosticLevel, DiagnosticsNode;
export 'package:flutter/foundation.dart' show Key, LocalKey, ValueKey;
export 'package:flutter/rendering.dart' show RenderBox, RenderObject, debugDumpLayerTree, debugDumpRenderTree;

/// class ObjectKey extends LocalKey
class ObjectKeyMate {
  /// ObjectKey ObjectKey(Object? value)
  ObjectKeyMate(
// param: Object? value
      Object? value) {}
}

/// abstract class GlobalKey<T extends State<StatefulWidget>> extends Key
abstract class GlobalKeyMate<T extends State<StatefulWidget>> {
  /// GlobalKey<T> GlobalKey.constructor()
  GlobalKeyMate.constructor() {}
}

/// class LabeledGlobalKey<T extends State<StatefulWidget>> extends GlobalKey<T>
class LabeledGlobalKeyMate<T extends State<StatefulWidget>> {
  /// LabeledGlobalKey<T> LabeledGlobalKey(String? _debugLabel)
  LabeledGlobalKeyMate(
// param: String? _debugLabel
      String? _debugLabel) {}
}

/// class GlobalObjectKey<T extends State<StatefulWidget>> extends GlobalKey<T>
class GlobalObjectKeyMate<T extends State<StatefulWidget>> {
  /// GlobalObjectKey<T> GlobalObjectKey(Object value)
  GlobalObjectKeyMate(
// param: Object value
      Object value) {}
}

/// abstract class Widget extends DiagnosticableTree
abstract class WidgetMate {
  /// Widget Widget({Key? key})
  WidgetMate(
      {
// param: {Key? key}
      Key? key}) {}
}

/// abstract class StatelessWidget extends Widget
abstract class StatelessWidgetMate {
  /// StatelessWidget StatelessWidget({Key? key})
  StatelessWidgetMate(
      {
// param: {Key? key}
      Key? key}) {}
}

/// abstract class StatefulWidget extends Widget
abstract class StatefulWidgetMate {
  /// StatefulWidget StatefulWidget({Key? key})
  StatefulWidgetMate(
      {
// param: {Key? key}
      Key? key}) {}
}

/// abstract class State<T extends StatefulWidget> with Diagnosticable
abstract class StateMate<T extends StatefulWidget> {
  /// State<T> State()
  StateMate() {}
}

/// abstract class ProxyWidget extends Widget
abstract class ProxyWidgetMate {
  /// ProxyWidget ProxyWidget({Key? key, required Widget child})
  ProxyWidgetMate({
// param: {Key? key}
    Key? key,
// param: {required Widget child}
    required Widget child,
  }) {}
}

/// abstract class ParentDataWidget<T extends ParentData> extends ProxyWidget
abstract class ParentDataWidgetMate<T extends ParentData> {
  /// ParentDataWidget<T> ParentDataWidget({Key? key, required Widget child})
  ParentDataWidgetMate({
// param: {Key? key}
    Key? key,
// param: {required Widget child}
    required Widget child,
  }) {}
}

/// abstract class InheritedWidget extends ProxyWidget
abstract class InheritedWidgetMate {
  /// InheritedWidget InheritedWidget({Key? key, required Widget child})
  InheritedWidgetMate({
// param: {Key? key}
    Key? key,
// param: {required Widget child}
    required Widget child,
  }) {}
}

/// abstract class RenderObjectWidget extends Widget
abstract class RenderObjectWidgetMate {
  /// RenderObjectWidget RenderObjectWidget({Key? key})
  RenderObjectWidgetMate(
      {
// param: {Key? key}
      Key? key}) {}
}

/// abstract class LeafRenderObjectWidget extends RenderObjectWidget
abstract class LeafRenderObjectWidgetMate {
  /// LeafRenderObjectWidget LeafRenderObjectWidget({Key? key})
  LeafRenderObjectWidgetMate(
      {
// param: {Key? key}
      Key? key}) {}
}

/// abstract class SingleChildRenderObjectWidget extends RenderObjectWidget
abstract class SingleChildRenderObjectWidgetMate {
  /// SingleChildRenderObjectWidget SingleChildRenderObjectWidget({Key? key, Widget? child})
  SingleChildRenderObjectWidgetMate({
// param: {Key? key}
    Key? key,
// param: {Widget? child}
    Widget? child,
  }) {}
}

/// abstract class MultiChildRenderObjectWidget extends RenderObjectWidget
abstract class MultiChildRenderObjectWidgetMate {
  /// MultiChildRenderObjectWidget MultiChildRenderObjectWidget({Key? key, List<Widget> children = const <Widget>[]})
  MultiChildRenderObjectWidgetMate({
// param: {Key? key}
    Key? key,
// param: {List<Widget> children = const <Widget>[]}
    required List<Widget> children,
  }) {}
}

/// abstract class BuildContext
abstract class BuildContextMate {
  /// BuildContext BuildContext()
  BuildContextMate() {}
}

/// class BuildOwner
class BuildOwnerMate {
  /// BuildOwner BuildOwner({void Function()? onBuildScheduled, FocusManager? focusManager})
  BuildOwnerMate({
// param: {void Function()? onBuildScheduled}
    void Function()? onBuildScheduled,
// param: {FocusManager? focusManager}
    FocusManager? focusManager,
  }) {}
}

/// abstract class Element extends DiagnosticableTree implements BuildContext
abstract class ElementMate {
  /// Element Element(Widget widget)
  ElementMate(
// param: Widget widget
      Widget widget) {}
}

/// class ErrorWidget extends LeafRenderObjectWidget
class ErrorWidgetMate {
  /// ErrorWidget ErrorWidget(Object exception)
  ErrorWidgetMate(
// param: Object exception
      Object exception) {}

  /// ErrorWidget ErrorWidget.withDetails({String message = '', FlutterError? error})
  ErrorWidgetMate.withDetails({
// param: {String message = ''}
    required String message,
// param: {FlutterError? error}
    FlutterError? error,
  }) {}
}

/// abstract class ComponentElement extends Element
abstract class ComponentElementMate {
  /// ComponentElement ComponentElement(Widget widget)
  ComponentElementMate(
// param: Widget widget
      Widget widget) {}
}

/// class StatelessElement extends ComponentElement
class StatelessElementMate {
  /// StatelessElement StatelessElement(StatelessWidget widget)
  StatelessElementMate(
// param: StatelessWidget widget
      StatelessWidget widget) {}
}

/// class StatefulElement extends ComponentElement
class StatefulElementMate {
  /// StatefulElement StatefulElement(StatefulWidget widget)
  StatefulElementMate(
// param: StatefulWidget widget
      StatefulWidget widget) {}
}

/// abstract class ProxyElement extends ComponentElement
abstract class ProxyElementMate {
  /// ProxyElement ProxyElement(ProxyWidget widget)
  ProxyElementMate(
// param: ProxyWidget widget
      ProxyWidget widget) {}
}

/// class ParentDataElement<T extends ParentData> extends ProxyElement
class ParentDataElementMate<T extends ParentData> {
  /// ParentDataElement<T> ParentDataElement(ParentDataWidget<T> widget)
  ParentDataElementMate(
// param: ParentDataWidget<T> widget
      ParentDataWidget<T> widget) {}
}

/// class InheritedElement extends ProxyElement
class InheritedElementMate {
  /// InheritedElement InheritedElement(InheritedWidget widget)
  InheritedElementMate(
// param: InheritedWidget widget
      InheritedWidget widget) {}
}

/// abstract class RenderObjectElement extends Element
abstract class RenderObjectElementMate {
  /// RenderObjectElement RenderObjectElement(RenderObjectWidget widget)
  RenderObjectElementMate(
// param: RenderObjectWidget widget
      RenderObjectWidget widget) {}
}

/// abstract class RootRenderObjectElement extends RenderObjectElement
abstract class RootRenderObjectElementMate {
  /// RootRenderObjectElement RootRenderObjectElement(RenderObjectWidget widget)
  RootRenderObjectElementMate(
// param: RenderObjectWidget widget
      RenderObjectWidget widget) {}
}

/// class LeafRenderObjectElement extends RenderObjectElement
class LeafRenderObjectElementMate {
  /// LeafRenderObjectElement LeafRenderObjectElement(LeafRenderObjectWidget widget)
  LeafRenderObjectElementMate(
// param: LeafRenderObjectWidget widget
      LeafRenderObjectWidget widget) {}
}

/// class SingleChildRenderObjectElement extends RenderObjectElement
class SingleChildRenderObjectElementMate {
  /// SingleChildRenderObjectElement SingleChildRenderObjectElement(SingleChildRenderObjectWidget widget)
  SingleChildRenderObjectElementMate(
// param: SingleChildRenderObjectWidget widget
      SingleChildRenderObjectWidget widget) {}
}

/// class MultiChildRenderObjectElement extends RenderObjectElement
class MultiChildRenderObjectElementMate {
  /// MultiChildRenderObjectElement MultiChildRenderObjectElement(MultiChildRenderObjectWidget widget)
  MultiChildRenderObjectElementMate(
// param: MultiChildRenderObjectWidget widget
      MultiChildRenderObjectWidget widget) {}
}

/// class DebugCreator
class DebugCreatorMate {
  /// DebugCreator DebugCreator(Element element)
  DebugCreatorMate(
// param: Element element
      Element element) {}
}

/// class IndexedSlot<T extends Element?>
class IndexedSlotMate<T extends Element?> {
  /// IndexedSlot<T> IndexedSlot(int index, T value)
  IndexedSlotMate(
// param: int index
    int index,
// param: T value
    T value,
  ) {}
}
