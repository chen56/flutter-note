// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-11 00:36:15.681833

import 'package:flutter/src/widgets/scroll_position.dart';
import 'package:flutter/src/widgets/scroll_physics.dart';
import 'package:flutter/src/widgets/scroll_context.dart';
import 'dart:core';
import 'package:flutter/src/widgets/scroll_metrics.dart';
import 'package:flutter/src/widgets/framework.dart';
export 'scroll_activity.dart' show ScrollHoldController;

/// abstract class ScrollPosition extends ViewportOffset with ScrollMetrics
abstract class ScrollPositionMate extends ScrollPosition {
  /// ScrollPosition ScrollPosition({required ScrollPhysics physics, required ScrollContext context, bool keepScrollOffset = true, ScrollPosition? oldPosition, String? debugLabel})
  ScrollPositionMate({
    /// param: {required ScrollPhysics physics}
    required ScrollPhysics physics,

    /// param: {required ScrollContext context}
    required ScrollContext context,

    /// param: {bool keepScrollOffset = true}
    required bool keepScrollOffset,

    /// param: {ScrollPosition? oldPosition}
    ScrollPosition? oldPosition,

    /// param: {String? debugLabel}
    String? debugLabel,
  }) : super(
          physics: physics,
          context: context,
          keepScrollOffset: keepScrollOffset,
          oldPosition: oldPosition,
          debugLabel: debugLabel,
        ) {}
}

/// class ScrollMetricsNotification extends Notification with ViewportNotificationMixin
class ScrollMetricsNotificationMate extends ScrollMetricsNotification {
  /// ScrollMetricsNotification ScrollMetricsNotification({required ScrollMetrics metrics, required BuildContext context})
  ScrollMetricsNotificationMate({
    /// param: {required ScrollMetrics metrics}
    required ScrollMetrics metrics,

    /// param: {required BuildContext context}
    required BuildContext context,
  }) : super(
          metrics: metrics,
          context: context,
        ) {}
}
