// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-11 00:36:15.597352

import 'package:flutter/src/widgets/platform_view.dart';
import 'package:flutter/src/foundation/key.dart';
import 'dart:core';
import 'package:flutter/src/services/platform_views.dart';
import 'package:flutter/src/rendering/platform_view.dart';
import 'dart:ui';
import 'package:flutter/src/foundation/basic_types.dart';
import 'package:flutter/src/gestures/recognizer.dart';
import 'package:flutter/src/services/message_codec.dart';

/// class AndroidView extends StatefulWidget
class AndroidViewMate extends AndroidView {
  /// AndroidView AndroidView({Key? key, required String viewType, void Function(int)? onPlatformViewCreated, PlatformViewHitTestBehavior hitTestBehavior = PlatformViewHitTestBehavior.opaque, TextDirection? layoutDirection, Set<Factory<OneSequenceGestureRecognizer>>? gestureRecognizers, dynamic creationParams, MessageCodec<dynamic>? creationParamsCodec, Clip clipBehavior = Clip.hardEdge})
  AndroidViewMate({
    /// param: {Key? key}
    Key? key,

    /// param: {required String viewType}
    required String viewType,

    /// param: {void Function(int)? onPlatformViewCreated}
    PlatformViewCreatedCallback? onPlatformViewCreated,

    /// param: {PlatformViewHitTestBehavior hitTestBehavior = PlatformViewHitTestBehavior.opaque}
    required PlatformViewHitTestBehavior hitTestBehavior,

    /// param: {TextDirection? layoutDirection}
    TextDirection? layoutDirection,

    /// param: {Set<Factory<OneSequenceGestureRecognizer>>? gestureRecognizers}
    Set<Factory<OneSequenceGestureRecognizer>>? gestureRecognizers,

    /// param: {dynamic creationParams}
    required dynamic creationParams,

    /// param: {MessageCodec<dynamic>? creationParamsCodec}
    MessageCodec<dynamic>? creationParamsCodec,

    /// param: {Clip clipBehavior = Clip.hardEdge}
    required Clip clipBehavior,
  }) : super(
          key: key,
          viewType: viewType,
          onPlatformViewCreated: onPlatformViewCreated,
          hitTestBehavior: hitTestBehavior,
          layoutDirection: layoutDirection,
          gestureRecognizers: gestureRecognizers,
          creationParams: creationParams,
          creationParamsCodec: creationParamsCodec,
          clipBehavior: clipBehavior,
        ) {}
}

/// class UiKitView extends StatefulWidget
class UiKitViewMate extends UiKitView {
  /// UiKitView UiKitView({Key? key, required String viewType, void Function(int)? onPlatformViewCreated, PlatformViewHitTestBehavior hitTestBehavior = PlatformViewHitTestBehavior.opaque, TextDirection? layoutDirection, dynamic creationParams, MessageCodec<dynamic>? creationParamsCodec, Set<Factory<OneSequenceGestureRecognizer>>? gestureRecognizers})
  UiKitViewMate({
    /// param: {Key? key}
    Key? key,

    /// param: {required String viewType}
    required String viewType,

    /// param: {void Function(int)? onPlatformViewCreated}
    PlatformViewCreatedCallback? onPlatformViewCreated,

    /// param: {PlatformViewHitTestBehavior hitTestBehavior = PlatformViewHitTestBehavior.opaque}
    required PlatformViewHitTestBehavior hitTestBehavior,

    /// param: {TextDirection? layoutDirection}
    TextDirection? layoutDirection,

    /// param: {dynamic creationParams}
    required dynamic creationParams,

    /// param: {MessageCodec<dynamic>? creationParamsCodec}
    MessageCodec<dynamic>? creationParamsCodec,

    /// param: {Set<Factory<OneSequenceGestureRecognizer>>? gestureRecognizers}
    Set<Factory<OneSequenceGestureRecognizer>>? gestureRecognizers,
  }) : super(
          key: key,
          viewType: viewType,
          onPlatformViewCreated: onPlatformViewCreated,
          hitTestBehavior: hitTestBehavior,
          layoutDirection: layoutDirection,
          creationParams: creationParams,
          creationParamsCodec: creationParamsCodec,
          gestureRecognizers: gestureRecognizers,
        ) {}
}

/// class HtmlElementView extends StatelessWidget
class HtmlElementViewMate extends HtmlElementView {
  /// HtmlElementView HtmlElementView({Key? key, required String viewType, void Function(int)? onPlatformViewCreated})
  HtmlElementViewMate({
    /// param: {Key? key}
    Key? key,

    /// param: {required String viewType}
    required String viewType,

    /// param: {void Function(int)? onPlatformViewCreated}
    PlatformViewCreatedCallback? onPlatformViewCreated,
  }) : super(
          key: key,
          viewType: viewType,
          onPlatformViewCreated: onPlatformViewCreated,
        ) {}
}

/// class PlatformViewLink extends StatefulWidget
class PlatformViewLinkMate extends PlatformViewLink {
  /// PlatformViewLink PlatformViewLink({Key? key, required Widget Function(BuildContext, PlatformViewController) surfaceFactory, required PlatformViewController Function(PlatformViewCreationParams) onCreatePlatformView, required String viewType})
  PlatformViewLinkMate({
    /// param: {Key? key}
    Key? key,

    /// param: {required Widget Function(BuildContext, PlatformViewController) surfaceFactory}
    required PlatformViewSurfaceFactory surfaceFactory,

    /// param: {required PlatformViewController Function(PlatformViewCreationParams) onCreatePlatformView}
    required CreatePlatformViewCallback onCreatePlatformView,

    /// param: {required String viewType}
    required String viewType,
  }) : super(
          key: key,
          surfaceFactory: surfaceFactory,
          onCreatePlatformView: onCreatePlatformView,
          viewType: viewType,
        ) {}
}

/// class PlatformViewSurface extends LeafRenderObjectWidget
class PlatformViewSurfaceMate extends PlatformViewSurface {
  /// PlatformViewSurface PlatformViewSurface({Key? key, required PlatformViewController controller, required PlatformViewHitTestBehavior hitTestBehavior, required Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizers})
  PlatformViewSurfaceMate({
    /// param: {Key? key}
    Key? key,

    /// param: {required PlatformViewController controller}
    required PlatformViewController controller,

    /// param: {required PlatformViewHitTestBehavior hitTestBehavior}
    required PlatformViewHitTestBehavior hitTestBehavior,

    /// param: {required Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizers}
    required Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizers,
  }) : super(
          key: key,
          controller: controller,
          hitTestBehavior: hitTestBehavior,
          gestureRecognizers: gestureRecognizers,
        ) {}
}

/// class AndroidViewSurface extends StatefulWidget
class AndroidViewSurfaceMate extends AndroidViewSurface {
  /// AndroidViewSurface AndroidViewSurface({Key? key, required AndroidViewController controller, required PlatformViewHitTestBehavior hitTestBehavior, required Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizers})
  AndroidViewSurfaceMate({
    /// param: {Key? key}
    Key? key,

    /// param: {required AndroidViewController controller}
    required AndroidViewController controller,

    /// param: {required PlatformViewHitTestBehavior hitTestBehavior}
    required PlatformViewHitTestBehavior hitTestBehavior,

    /// param: {required Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizers}
    required Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizers,
  }) : super(
          key: key,
          controller: controller,
          hitTestBehavior: hitTestBehavior,
          gestureRecognizers: gestureRecognizers,
        ) {}
}
