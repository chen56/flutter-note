// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-11 00:36:15.795931

import 'package:flutter/src/widgets/tap_region.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'dart:core';
import 'package:flutter/src/rendering/proxy_box.dart';

/// class TapRegionSurface extends SingleChildRenderObjectWidget
class TapRegionSurfaceMate extends TapRegionSurface {
  /// TapRegionSurface TapRegionSurface({Key? key, required Widget child})
  TapRegionSurfaceMate({
    /// param: {Key? key}
    Key? key,

    /// param: {required Widget child}
    required Widget child,
  }) : super(
          key: key,
          child: child,
        ) {}
}

/// class TapRegion extends SingleChildRenderObjectWidget
class TapRegionMate extends TapRegion {
  /// TapRegion TapRegion({Key? key, required Widget? child, bool enabled = true, HitTestBehavior behavior = HitTestBehavior.deferToChild, void Function(PointerDownEvent)? onTapOutside, void Function(PointerDownEvent)? onTapInside, Object? groupId, String? debugLabel})
  TapRegionMate({
    /// param: {Key? key}
    Key? key,

    /// param: {required Widget? child}
    required Widget? child,

    /// param: {bool enabled = true}
    required bool enabled,

    /// param: {HitTestBehavior behavior = HitTestBehavior.deferToChild}
    required HitTestBehavior behavior,

    /// param: {void Function(PointerDownEvent)? onTapOutside}
    TapRegionCallback? onTapOutside,

    /// param: {void Function(PointerDownEvent)? onTapInside}
    TapRegionCallback? onTapInside,

    /// param: {Object? groupId}
    Object? groupId,

    /// param: {String? debugLabel}
    String? debugLabel,
  }) : super(
          key: key,
          child: child,
          enabled: enabled,
          behavior: behavior,
          onTapOutside: onTapOutside,
          onTapInside: onTapInside,
          groupId: groupId,
          debugLabel: debugLabel,
        ) {}
}

/// class RenderTapRegion extends RenderProxyBoxWithHitTestBehavior
class RenderTapRegionMate extends RenderTapRegion {
  /// RenderTapRegion RenderTapRegion({TapRegionRegistry? registry, bool enabled = true, void Function(PointerDownEvent)? onTapOutside, void Function(PointerDownEvent)? onTapInside, HitTestBehavior behavior = HitTestBehavior.deferToChild, Object? groupId, String? debugLabel})
  RenderTapRegionMate({
    /// param: {TapRegionRegistry? registry}
    TapRegionRegistry? registry,

    /// param: {bool enabled = true}
    required bool enabled,

    /// param: {void Function(PointerDownEvent)? onTapOutside}
    TapRegionCallback? onTapOutside,

    /// param: {void Function(PointerDownEvent)? onTapInside}
    TapRegionCallback? onTapInside,

    /// param: {HitTestBehavior behavior = HitTestBehavior.deferToChild}
    required HitTestBehavior behavior,

    /// param: {Object? groupId}
    Object? groupId,

    /// param: {String? debugLabel}
    String? debugLabel,
  }) : super(
          registry: registry,
          enabled: enabled,
          onTapOutside: onTapOutside,
          onTapInside: onTapInside,
          behavior: behavior,
          groupId: groupId,
          debugLabel: debugLabel,
        ) {}
}

/// class TextFieldTapRegion extends TapRegion
class TextFieldTapRegionMate extends TextFieldTapRegion {
  /// TextFieldTapRegion TextFieldTapRegion({Key? key, required Widget? child, bool enabled = true, void Function(PointerDownEvent)? onTapOutside, void Function(PointerDownEvent)? onTapInside, String? debugLabel})
  TextFieldTapRegionMate({
    /// param: {Key? key}
    Key? key,

    /// param: {required Widget? child}
    required Widget? child,

    /// param: {bool enabled = true}
    required bool enabled,

    /// param: {void Function(PointerDownEvent)? onTapOutside}
    TapRegionCallback? onTapOutside,

    /// param: {void Function(PointerDownEvent)? onTapInside}
    TapRegionCallback? onTapInside,

    /// param: {String? debugLabel}
    String? debugLabel,
  }) : super(
          key: key,
          child: child,
          enabled: enabled,
          onTapOutside: onTapOutside,
          onTapInside: onTapInside,
          debugLabel: debugLabel,
        ) {}
}
