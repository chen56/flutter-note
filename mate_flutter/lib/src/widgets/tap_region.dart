// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:01.971191

library;

import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'dart:core';
import 'package:flutter/src/rendering/proxy_box.dart';
import 'package:flutter/src/gestures/events.dart';
import 'package:flutter/src/widgets/tap_region.dart';

/// abstract class TapRegionRegistry
abstract class TapRegionRegistryMate {
  /// TapRegionRegistry TapRegionRegistry()
  TapRegionRegistryMate() {}
}

/// class TapRegionSurface extends SingleChildRenderObjectWidget
class TapRegionSurfaceMate {
  /// TapRegionSurface TapRegionSurface({Key? key, required Widget child})
  TapRegionSurfaceMate({
// param: {Key? key}
    Key? key,
// param: {required Widget child}
    required Widget child,
  }) {}
}

/// class RenderTapRegionSurface extends RenderProxyBoxWithHitTestBehavior with TapRegionRegistry
class RenderTapRegionSurfaceMate {
  /// RenderTapRegionSurface RenderTapRegionSurface()
  RenderTapRegionSurfaceMate() {}
}

/// class TapRegion extends SingleChildRenderObjectWidget
class TapRegionMate {
  /// TapRegion TapRegion({Key? key, required Widget? child, bool enabled = true, HitTestBehavior behavior = HitTestBehavior.deferToChild, void Function(PointerDownEvent)? onTapOutside, void Function(PointerDownEvent)? onTapInside, Object? groupId, String? debugLabel})
  TapRegionMate({
// param: {Key? key}
    Key? key,
// param: {required Widget? child}
    required Widget? child,
// param: {bool enabled = true}
    required bool enabled,
// param: {HitTestBehavior behavior = HitTestBehavior.deferToChild}
    required HitTestBehavior behavior,
// param: {void Function(PointerDownEvent)? onTapOutside}
    void Function(
      PointerDownEvent, [
      PointerDownEvent,
    ])?
        onTapOutside,
// param: {void Function(PointerDownEvent)? onTapInside}
    void Function(
      PointerDownEvent, [
      PointerDownEvent,
    ])?
        onTapInside,
// param: {Object? groupId}
    Object? groupId,
// param: {String? debugLabel}
    String? debugLabel,
  }) {}
}

/// class RenderTapRegion extends RenderProxyBoxWithHitTestBehavior
class RenderTapRegionMate {
  /// RenderTapRegion RenderTapRegion({TapRegionRegistry? registry, bool enabled = true, void Function(PointerDownEvent)? onTapOutside, void Function(PointerDownEvent)? onTapInside, HitTestBehavior behavior = HitTestBehavior.deferToChild, Object? groupId, String? debugLabel})
  RenderTapRegionMate({
// param: {TapRegionRegistry? registry}
    TapRegionRegistry? registry,
// param: {bool enabled = true}
    required bool enabled,
// param: {void Function(PointerDownEvent)? onTapOutside}
    void Function(
      PointerDownEvent, [
      PointerDownEvent,
    ])?
        onTapOutside,
// param: {void Function(PointerDownEvent)? onTapInside}
    void Function(
      PointerDownEvent, [
      PointerDownEvent,
    ])?
        onTapInside,
// param: {HitTestBehavior behavior = HitTestBehavior.deferToChild}
    required HitTestBehavior behavior,
// param: {Object? groupId}
    Object? groupId,
// param: {String? debugLabel}
    String? debugLabel,
  }) {}
}

/// class TextFieldTapRegion extends TapRegion
class TextFieldTapRegionMate {
  /// TextFieldTapRegion TextFieldTapRegion({Key? key, required Widget? child, bool enabled = true, void Function(PointerDownEvent)? onTapOutside, void Function(PointerDownEvent)? onTapInside, String? debugLabel})
  TextFieldTapRegionMate({
// param: {Key? key}
    Key? key,
// param: {required Widget? child}
    required Widget? child,
// param: {bool enabled = true}
    required bool enabled,
// param: {void Function(PointerDownEvent)? onTapOutside}
    void Function(
      PointerDownEvent, [
      PointerDownEvent,
    ])?
        onTapOutside,
// param: {void Function(PointerDownEvent)? onTapInside}
    void Function(
      PointerDownEvent, [
      PointerDownEvent,
    ])?
        onTapInside,
// param: {String? debugLabel}
    String? debugLabel,
  }) {}
}
