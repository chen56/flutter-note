// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:01.920845

library;

import 'package:flutter/src/widgets/framework.dart';
import 'dart:core';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/sliver.dart';
import 'package:flutter/src/rendering/sliver_grid.dart';
export 'package:flutter/rendering.dart'
    show SliverGridDelegate, SliverGridDelegateWithFixedCrossAxisCount, SliverGridDelegateWithMaxCrossAxisExtent;

/// abstract class SliverChildDelegate
abstract class SliverChildDelegateMate {
  /// SliverChildDelegate SliverChildDelegate()
  SliverChildDelegateMate() {}
}

/// class SliverChildBuilderDelegate extends SliverChildDelegate
class SliverChildBuilderDelegateMate {
  /// SliverChildBuilderDelegate SliverChildBuilderDelegate(Widget? Function(BuildContext, int) builder, {int? Function(Key)? findChildIndexCallback, int? childCount, bool addAutomaticKeepAlives = true, bool addRepaintBoundaries = true, bool addSemanticIndexes = true, int? Function(Widget, int) semanticIndexCallback = _kDefaultSemanticIndexCallback, int semanticIndexOffset = 0})
  SliverChildBuilderDelegateMate(
// param: Widget? Function(BuildContext, int) builder
    Widget? Function(
      BuildContext,
      int, [
      BuildContext,
      int,
    ])
        builder, {
// param: {int? Function(Key)? findChildIndexCallback}
    int? Function(
      Key, [
      Key,
    ])?
        findChildIndexCallback,
// param: {int? childCount}
    int? childCount,
// param: {bool addAutomaticKeepAlives = true}
    required bool addAutomaticKeepAlives,
// param: {bool addRepaintBoundaries = true}
    required bool addRepaintBoundaries,
// param: {bool addSemanticIndexes = true}
    required bool addSemanticIndexes,
// param: {int? Function(Widget, int) semanticIndexCallback = _kDefaultSemanticIndexCallback}
    required int? Function(
      Widget,
      int, [
      Widget,
      int,
    ])
        semanticIndexCallback,
// param: {int semanticIndexOffset = 0}
    required int semanticIndexOffset,
  }) {}
}

/// class SliverChildListDelegate extends SliverChildDelegate
class SliverChildListDelegateMate {
  /// SliverChildListDelegate SliverChildListDelegate(List<Widget> children, {bool addAutomaticKeepAlives = true, bool addRepaintBoundaries = true, bool addSemanticIndexes = true, int? Function(Widget, int) semanticIndexCallback = _kDefaultSemanticIndexCallback, int semanticIndexOffset = 0})
  SliverChildListDelegateMate(
// param: List<Widget> children
    List<Widget> children, {
// param: {bool addAutomaticKeepAlives = true}
    required bool addAutomaticKeepAlives,
// param: {bool addRepaintBoundaries = true}
    required bool addRepaintBoundaries,
// param: {bool addSemanticIndexes = true}
    required bool addSemanticIndexes,
// param: {int? Function(Widget, int) semanticIndexCallback = _kDefaultSemanticIndexCallback}
    required int? Function(
      Widget,
      int, [
      Widget,
      int,
    ])
        semanticIndexCallback,
// param: {int semanticIndexOffset = 0}
    required int semanticIndexOffset,
  }) {}

  /// SliverChildListDelegate SliverChildListDelegate.fixed(List<Widget> children, {bool addAutomaticKeepAlives = true, bool addRepaintBoundaries = true, bool addSemanticIndexes = true, int? Function(Widget, int) semanticIndexCallback = _kDefaultSemanticIndexCallback, int semanticIndexOffset = 0})
  SliverChildListDelegateMate.fixed(
// param: List<Widget> children
    List<Widget> children, {
// param: {bool addAutomaticKeepAlives = true}
    required bool addAutomaticKeepAlives,
// param: {bool addRepaintBoundaries = true}
    required bool addRepaintBoundaries,
// param: {bool addSemanticIndexes = true}
    required bool addSemanticIndexes,
// param: {int? Function(Widget, int) semanticIndexCallback = _kDefaultSemanticIndexCallback}
    required int? Function(
      Widget,
      int, [
      Widget,
      int,
    ])
        semanticIndexCallback,
// param: {int semanticIndexOffset = 0}
    required int semanticIndexOffset,
  }) {}
}

/// abstract class SliverWithKeepAliveWidget extends RenderObjectWidget
abstract class SliverWithKeepAliveWidgetMate {
  /// SliverWithKeepAliveWidget SliverWithKeepAliveWidget({Key? key})
  SliverWithKeepAliveWidgetMate(
      {
// param: {Key? key}
      Key? key}) {}
}

/// abstract class SliverMultiBoxAdaptorWidget extends SliverWithKeepAliveWidget
abstract class SliverMultiBoxAdaptorWidgetMate {
  /// SliverMultiBoxAdaptorWidget SliverMultiBoxAdaptorWidget({Key? key, required SliverChildDelegate delegate})
  SliverMultiBoxAdaptorWidgetMate({
// param: {Key? key}
    Key? key,
// param: {required SliverChildDelegate delegate}
    required SliverChildDelegate delegate,
  }) {}
}

/// class SliverList extends SliverMultiBoxAdaptorWidget
class SliverListMate {
  /// SliverList SliverList({Key? key, required SliverChildDelegate delegate})
  SliverListMate({
// param: {Key? key}
    Key? key,
// param: {required SliverChildDelegate delegate}
    required SliverChildDelegate delegate,
  }) {}

  /// SliverList SliverList.builder({Key? key, required Widget? Function(BuildContext, int) itemBuilder, int? Function(Key)? findChildIndexCallback, int? itemCount, bool addAutomaticKeepAlives = true, bool addRepaintBoundaries = true, bool addSemanticIndexes = true})
  SliverListMate.builder({
// param: {Key? key}
    Key? key,
// param: {required Widget? Function(BuildContext, int) itemBuilder}
    required Widget? Function(
      BuildContext,
      int, [
      BuildContext,
      int,
    ])
        itemBuilder,
// param: {int? Function(Key)? findChildIndexCallback}
    int? Function(
      Key, [
      Key,
    ])?
        findChildIndexCallback,
// param: {int? itemCount}
    int? itemCount,
// param: {bool addAutomaticKeepAlives = true}
    required bool addAutomaticKeepAlives,
// param: {bool addRepaintBoundaries = true}
    required bool addRepaintBoundaries,
// param: {bool addSemanticIndexes = true}
    required bool addSemanticIndexes,
  }) {}

  /// SliverList SliverList.separated({Key? key, required Widget? Function(BuildContext, int) itemBuilder, int? Function(Key)? findChildIndexCallback, required Widget? Function(BuildContext, int) separatorBuilder, int? itemCount, bool addAutomaticKeepAlives = true, bool addRepaintBoundaries = true, bool addSemanticIndexes = true})
  SliverListMate.separated({
// param: {Key? key}
    Key? key,
// param: {required Widget? Function(BuildContext, int) itemBuilder}
    required Widget? Function(
      BuildContext,
      int, [
      BuildContext,
      int,
    ])
        itemBuilder,
// param: {int? Function(Key)? findChildIndexCallback}
    int? Function(
      Key, [
      Key,
    ])?
        findChildIndexCallback,
// param: {required Widget? Function(BuildContext, int) separatorBuilder}
    required Widget? Function(
      BuildContext,
      int, [
      BuildContext,
      int,
    ])
        separatorBuilder,
// param: {int? itemCount}
    int? itemCount,
// param: {bool addAutomaticKeepAlives = true}
    required bool addAutomaticKeepAlives,
// param: {bool addRepaintBoundaries = true}
    required bool addRepaintBoundaries,
// param: {bool addSemanticIndexes = true}
    required bool addSemanticIndexes,
  }) {}

  /// SliverList SliverList.list({Key? key, required List<Widget> children, bool addAutomaticKeepAlives = true, bool addRepaintBoundaries = true, bool addSemanticIndexes = true})
  SliverListMate.list({
// param: {Key? key}
    Key? key,
// param: {required List<Widget> children}
    required List<Widget> children,
// param: {bool addAutomaticKeepAlives = true}
    required bool addAutomaticKeepAlives,
// param: {bool addRepaintBoundaries = true}
    required bool addRepaintBoundaries,
// param: {bool addSemanticIndexes = true}
    required bool addSemanticIndexes,
  }) {}
}

/// class SliverFixedExtentList extends SliverMultiBoxAdaptorWidget
class SliverFixedExtentListMate {
  /// SliverFixedExtentList SliverFixedExtentList({Key? key, required SliverChildDelegate delegate, required double itemExtent})
  SliverFixedExtentListMate({
// param: {Key? key}
    Key? key,
// param: {required SliverChildDelegate delegate}
    required SliverChildDelegate delegate,
// param: {required double itemExtent}
    required double itemExtent,
  }) {}

  /// SliverFixedExtentList SliverFixedExtentList.builder({Key? key, required Widget? Function(BuildContext, int) itemBuilder, required double itemExtent, int? Function(Key)? findChildIndexCallback, int? itemCount, bool addAutomaticKeepAlives = true, bool addRepaintBoundaries = true, bool addSemanticIndexes = true})
  SliverFixedExtentListMate.builder({
// param: {Key? key}
    Key? key,
// param: {required Widget? Function(BuildContext, int) itemBuilder}
    required Widget? Function(
      BuildContext,
      int, [
      BuildContext,
      int,
    ])
        itemBuilder,
// param: {required double itemExtent}
    required double itemExtent,
// param: {int? Function(Key)? findChildIndexCallback}
    int? Function(
      Key, [
      Key,
    ])?
        findChildIndexCallback,
// param: {int? itemCount}
    int? itemCount,
// param: {bool addAutomaticKeepAlives = true}
    required bool addAutomaticKeepAlives,
// param: {bool addRepaintBoundaries = true}
    required bool addRepaintBoundaries,
// param: {bool addSemanticIndexes = true}
    required bool addSemanticIndexes,
  }) {}

  /// SliverFixedExtentList SliverFixedExtentList.list({Key? key, required List<Widget> children, required double itemExtent, bool addAutomaticKeepAlives = true, bool addRepaintBoundaries = true, bool addSemanticIndexes = true})
  SliverFixedExtentListMate.list({
// param: {Key? key}
    Key? key,
// param: {required List<Widget> children}
    required List<Widget> children,
// param: {required double itemExtent}
    required double itemExtent,
// param: {bool addAutomaticKeepAlives = true}
    required bool addAutomaticKeepAlives,
// param: {bool addRepaintBoundaries = true}
    required bool addRepaintBoundaries,
// param: {bool addSemanticIndexes = true}
    required bool addSemanticIndexes,
  }) {}
}

/// class SliverGrid extends SliverMultiBoxAdaptorWidget
class SliverGridMate {
  /// SliverGrid SliverGrid({Key? key, required SliverChildDelegate delegate, required SliverGridDelegate gridDelegate})
  SliverGridMate({
// param: {Key? key}
    Key? key,
// param: {required SliverChildDelegate delegate}
    required SliverChildDelegate delegate,
// param: {required SliverGridDelegate gridDelegate}
    required SliverGridDelegate gridDelegate,
  }) {}

  /// SliverGrid SliverGrid.builder({Key? key, required SliverGridDelegate gridDelegate, required Widget? Function(BuildContext, int) itemBuilder, int? Function(Key)? findChildIndexCallback, int? itemCount, bool addAutomaticKeepAlives = true, bool addRepaintBoundaries = true, bool addSemanticIndexes = true})
  SliverGridMate.builder({
// param: {Key? key}
    Key? key,
// param: {required SliverGridDelegate gridDelegate}
    required SliverGridDelegate gridDelegate,
// param: {required Widget? Function(BuildContext, int) itemBuilder}
    required Widget? Function(
      BuildContext,
      int, [
      BuildContext,
      int,
    ])
        itemBuilder,
// param: {int? Function(Key)? findChildIndexCallback}
    int? Function(
      Key, [
      Key,
    ])?
        findChildIndexCallback,
// param: {int? itemCount}
    int? itemCount,
// param: {bool addAutomaticKeepAlives = true}
    required bool addAutomaticKeepAlives,
// param: {bool addRepaintBoundaries = true}
    required bool addRepaintBoundaries,
// param: {bool addSemanticIndexes = true}
    required bool addSemanticIndexes,
  }) {}

  /// SliverGrid SliverGrid.count({Key? key, required int crossAxisCount, double mainAxisSpacing = 0.0, double crossAxisSpacing = 0.0, double childAspectRatio = 1.0, List<Widget> children = const <Widget>[]})
  SliverGridMate.count({
// param: {Key? key}
    Key? key,
// param: {required int crossAxisCount}
    required int crossAxisCount,
// param: {double mainAxisSpacing = 0.0}
    required double mainAxisSpacing,
// param: {double crossAxisSpacing = 0.0}
    required double crossAxisSpacing,
// param: {double childAspectRatio = 1.0}
    required double childAspectRatio,
// param: {List<Widget> children = const <Widget>[]}
    required List<Widget> children,
  }) {}

  /// SliverGrid SliverGrid.extent({Key? key, required double maxCrossAxisExtent, double mainAxisSpacing = 0.0, double crossAxisSpacing = 0.0, double childAspectRatio = 1.0, List<Widget> children = const <Widget>[]})
  SliverGridMate.extent({
// param: {Key? key}
    Key? key,
// param: {required double maxCrossAxisExtent}
    required double maxCrossAxisExtent,
// param: {double mainAxisSpacing = 0.0}
    required double mainAxisSpacing,
// param: {double crossAxisSpacing = 0.0}
    required double crossAxisSpacing,
// param: {double childAspectRatio = 1.0}
    required double childAspectRatio,
// param: {List<Widget> children = const <Widget>[]}
    required List<Widget> children,
  }) {}
}

/// class SliverMultiBoxAdaptorElement extends RenderObjectElement implements RenderSliverBoxChildManager
class SliverMultiBoxAdaptorElementMate {
  /// SliverMultiBoxAdaptorElement SliverMultiBoxAdaptorElement(SliverMultiBoxAdaptorWidget widget, {bool replaceMovedChildren = false})
  SliverMultiBoxAdaptorElementMate(
// param: SliverMultiBoxAdaptorWidget widget
    SliverMultiBoxAdaptorWidget widget, {
// param: {bool replaceMovedChildren = false}
    required bool replaceMovedChildren,
  }) {}
}

/// class SliverOpacity extends SingleChildRenderObjectWidget
class SliverOpacityMate {
  /// SliverOpacity SliverOpacity({Key? key, required double opacity, bool alwaysIncludeSemantics = false, Widget? sliver})
  SliverOpacityMate({
// param: {Key? key}
    Key? key,
// param: {required double opacity}
    required double opacity,
// param: {bool alwaysIncludeSemantics = false}
    required bool alwaysIncludeSemantics,
// param: {Widget? sliver}
    Widget? sliver,
  }) {}
}

/// class SliverIgnorePointer extends SingleChildRenderObjectWidget
class SliverIgnorePointerMate {
  /// SliverIgnorePointer SliverIgnorePointer({Key? key, bool ignoring = true, bool? ignoringSemantics, Widget? sliver})
  SliverIgnorePointerMate({
// param: {Key? key}
    Key? key,
// param: {bool ignoring = true}
    required bool ignoring,
// param: {bool? ignoringSemantics}
    bool? ignoringSemantics,
// param: {Widget? sliver}
    Widget? sliver,
  }) {}
}

/// class SliverOffstage extends SingleChildRenderObjectWidget
class SliverOffstageMate {
  /// SliverOffstage SliverOffstage({Key? key, bool offstage = true, Widget? sliver})
  SliverOffstageMate({
// param: {Key? key}
    Key? key,
// param: {bool offstage = true}
    required bool offstage,
// param: {Widget? sliver}
    Widget? sliver,
  }) {}
}

/// class KeepAlive extends ParentDataWidget<KeepAliveParentDataMixin>
class KeepAliveMate {
  /// KeepAlive KeepAlive({Key? key, required bool keepAlive, required Widget child})
  KeepAliveMate({
// param: {Key? key}
    Key? key,
// param: {required bool keepAlive}
    required bool keepAlive,
// param: {required Widget child}
    required Widget child,
  }) {}
}
