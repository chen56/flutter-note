// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:01.877914

library;

import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/painting/basic_types.dart';
import 'package:flutter/src/widgets/scroll_controller.dart';
import 'package:flutter/src/widgets/scroll_physics.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/rendering/viewport_offset.dart';
import 'dart:core';
import 'package:flutter/src/widgets/scrollable.dart';
import 'package:flutter/src/gestures/recognizer.dart';
import 'package:flutter/src/widgets/scroll_configuration.dart';
import 'dart:ui';
import 'package:flutter/src/widgets/scroll_metrics.dart';
export 'package:flutter/physics.dart' show Tolerance;

/// class Scrollable extends StatefulWidget
class ScrollableMate {
  /// Scrollable Scrollable({Key? key, AxisDirection axisDirection = AxisDirection.down, ScrollController? controller, ScrollPhysics? physics, required Widget Function(BuildContext, ViewportOffset) viewportBuilder, double Function(ScrollIncrementDetails)? incrementCalculator, bool excludeFromSemantics = false, int? semanticChildCount, DragStartBehavior dragStartBehavior = DragStartBehavior.start, String? restorationId, ScrollBehavior? scrollBehavior, Clip clipBehavior = Clip.hardEdge})
  ScrollableMate({
// param: {Key? key}
    Key? key,
// param: {AxisDirection axisDirection = AxisDirection.down}
    required AxisDirection axisDirection,
// param: {ScrollController? controller}
    ScrollController? controller,
// param: {ScrollPhysics? physics}
    ScrollPhysics? physics,
// param: {required Widget Function(BuildContext, ViewportOffset) viewportBuilder}
    required Widget Function(
      BuildContext,
      ViewportOffset, [
      BuildContext,
      ViewportOffset,
    ])
        viewportBuilder,
// param: {double Function(ScrollIncrementDetails)? incrementCalculator}
    double Function(
      ScrollIncrementDetails, [
      ScrollIncrementDetails,
    ])?
        incrementCalculator,
// param: {bool excludeFromSemantics = false}
    required bool excludeFromSemantics,
// param: {int? semanticChildCount}
    int? semanticChildCount,
// param: {DragStartBehavior dragStartBehavior = DragStartBehavior.start}
    required DragStartBehavior dragStartBehavior,
// param: {String? restorationId}
    String? restorationId,
// param: {ScrollBehavior? scrollBehavior}
    ScrollBehavior? scrollBehavior,
// param: {Clip clipBehavior = Clip.hardEdge}
    required Clip clipBehavior,
  }) {}
}

/// class ScrollableState extends State<Scrollable> with TickerProviderStateMixin<Scrollable>, RestorationMixin<Scrollable> implements ScrollContext
class ScrollableStateMate {
  /// ScrollableState ScrollableState()
  ScrollableStateMate() {}
}

/// class EdgeDraggingAutoScroller
class EdgeDraggingAutoScrollerMate {
  /// EdgeDraggingAutoScroller EdgeDraggingAutoScroller(ScrollableState scrollable, {void Function()? onScrollViewScrolled, double velocityScalar = _kDefaultAutoScrollVelocityScalar})
  EdgeDraggingAutoScrollerMate(
// param: ScrollableState scrollable
    ScrollableState scrollable, {
// param: {void Function()? onScrollViewScrolled}
    void Function()? onScrollViewScrolled,
// param: {double velocityScalar = _kDefaultAutoScrollVelocityScalar}
    required double velocityScalar,
  }) {}
}

/// class ScrollableDetails
class ScrollableDetailsMate {
  /// ScrollableDetails ScrollableDetails({required AxisDirection direction, required ScrollController controller, Clip? clipBehavior})
  ScrollableDetailsMate({
// param: {required AxisDirection direction}
    required AxisDirection direction,
// param: {required ScrollController controller}
    required ScrollController controller,
// param: {Clip? clipBehavior}
    Clip? clipBehavior,
  }) {}
}

/// class ScrollIncrementDetails
class ScrollIncrementDetailsMate {
  /// ScrollIncrementDetails ScrollIncrementDetails({required ScrollIncrementType type, required ScrollMetrics metrics})
  ScrollIncrementDetailsMate({
// param: {required ScrollIncrementType type}
    required ScrollIncrementType type,
// param: {required ScrollMetrics metrics}
    required ScrollMetrics metrics,
  }) {}
}

/// class ScrollIntent extends Intent
class ScrollIntentMate {
  /// ScrollIntent ScrollIntent({required AxisDirection direction, ScrollIncrementType type = ScrollIncrementType.line})
  ScrollIntentMate({
// param: {required AxisDirection direction}
    required AxisDirection direction,
// param: {ScrollIncrementType type = ScrollIncrementType.line}
    required ScrollIncrementType type,
  }) {}
}

/// class ScrollAction extends Action<ScrollIntent>
class ScrollActionMate {
  /// ScrollAction ScrollAction()
  ScrollActionMate() {}
}
