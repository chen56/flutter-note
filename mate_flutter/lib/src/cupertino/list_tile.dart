// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-09 14:20:09.790513

library;

import 'package:flutter/src/cupertino/list_tile.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'dart:async';
import 'dart:ui';
import 'package:flutter/src/painting/edge_insets.dart';
import 'dart:core';

/// class CupertinoListTile extends StatefulWidget
class CupertinoListTileMate extends CupertinoListTile {
  /// CupertinoListTile CupertinoListTile({Key? key, required Widget title, Widget? subtitle, Widget? additionalInfo, Widget? leading, Widget? trailing, FutureOr<void> Function()? onTap, Color? backgroundColor, Color? backgroundColorActivated, EdgeInsetsGeometry? padding, double leadingSize = _kLeadingSize, double leadingToTitle = _kLeadingToTitle})
  CupertinoListTileMate({
    /// param: {Key? key}
    Key? key,

    /// param: {required Widget title}
    required Widget title,

    /// param: {Widget? subtitle}
    Widget? subtitle,

    /// param: {Widget? additionalInfo}
    Widget? additionalInfo,

    /// param: {Widget? leading}
    Widget? leading,

    /// param: {Widget? trailing}
    Widget? trailing,

    /// param: {FutureOr<void> Function()? onTap}
    FutureOr<void> Function()? onTap,

    /// param: {Color? backgroundColor}
    Color? backgroundColor,

    /// param: {Color? backgroundColorActivated}
    Color? backgroundColorActivated,

    /// param: {EdgeInsetsGeometry? padding}
    EdgeInsetsGeometry? padding,

    /// param: {double leadingSize = _kLeadingSize}
    required double leadingSize,

    /// param: {double leadingToTitle = _kLeadingToTitle}
    required double leadingToTitle,
  }) : super(
          key: key,
          title: title,
          subtitle: subtitle,
          additionalInfo: additionalInfo,
          leading: leading,
          trailing: trailing,
          onTap: onTap,
          backgroundColor: backgroundColor,
          backgroundColorActivated: backgroundColorActivated,
          padding: padding,
          leadingSize: leadingSize,
          leadingToTitle: leadingToTitle,
        ) {}

  /// CupertinoListTile CupertinoListTile.notched({Key? key, required Widget title, Widget? subtitle, Widget? additionalInfo, Widget? leading, Widget? trailing, FutureOr<void> Function()? onTap, Color? backgroundColor, Color? backgroundColorActivated, EdgeInsetsGeometry? padding, double leadingSize = _kNotchedLeadingSize, double leadingToTitle = _kNotchedLeadingToTitle})
  CupertinoListTileMate.notched({
    /// param: {Key? key}
    Key? key,

    /// param: {required Widget title}
    required Widget title,

    /// param: {Widget? subtitle}
    Widget? subtitle,

    /// param: {Widget? additionalInfo}
    Widget? additionalInfo,

    /// param: {Widget? leading}
    Widget? leading,

    /// param: {Widget? trailing}
    Widget? trailing,

    /// param: {FutureOr<void> Function()? onTap}
    FutureOr<void> Function()? onTap,

    /// param: {Color? backgroundColor}
    Color? backgroundColor,

    /// param: {Color? backgroundColorActivated}
    Color? backgroundColorActivated,

    /// param: {EdgeInsetsGeometry? padding}
    EdgeInsetsGeometry? padding,

    /// param: {double leadingSize = _kNotchedLeadingSize}
    required double leadingSize,

    /// param: {double leadingToTitle = _kNotchedLeadingToTitle}
    required double leadingToTitle,
  }) : super.notched(
          key: key,
          title: title,
          subtitle: subtitle,
          additionalInfo: additionalInfo,
          leading: leading,
          trailing: trailing,
          onTap: onTap,
          backgroundColor: backgroundColor,
          backgroundColorActivated: backgroundColorActivated,
          padding: padding,
          leadingSize: leadingSize,
          leadingToTitle: leadingToTitle,
        ) {}
}

/// class CupertinoListTileChevron extends StatelessWidget
class CupertinoListTileChevronMate extends CupertinoListTileChevron {
  /// CupertinoListTileChevron CupertinoListTileChevron({Key? key})
  CupertinoListTileChevronMate(
      {
      /// param: {Key? key}
      Key? key})
      : super(key: key) {}
}
