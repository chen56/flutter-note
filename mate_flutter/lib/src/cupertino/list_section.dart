// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-11 00:36:14.310926

import 'package:flutter/src/cupertino/list_section.dart';
import 'package:flutter/src/foundation/key.dart';
import 'dart:core';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/painting/edge_insets.dart';
import 'dart:ui';
import 'package:flutter/src/painting/box_decoration.dart';

/// class CupertinoListSection extends StatelessWidget
class CupertinoListSectionMate extends CupertinoListSection {
  /// CupertinoListSection CupertinoListSection({Key? key, List<Widget>? children, Widget? header, Widget? footer, EdgeInsetsGeometry margin = _kDefaultRowsMargin, Color backgroundColor = CupertinoColors.systemGroupedBackground, BoxDecoration? decoration, Clip clipBehavior = Clip.none, double dividerMargin = _kBaseDividerMargin, double? additionalDividerMargin, double? topMargin = _kMarginTop, bool hasLeading = true})
  CupertinoListSectionMate({
    /// param: {Key? key}
    Key? key,

    /// param: {List<Widget>? children}
    List<Widget>? children,

    /// param: {Widget? header}
    Widget? header,

    /// param: {Widget? footer}
    Widget? footer,

    /// param: {EdgeInsetsGeometry margin = _kDefaultRowsMargin}
    required EdgeInsetsGeometry margin,

    /// param: {Color backgroundColor = CupertinoColors.systemGroupedBackground}
    required Color backgroundColor,

    /// param: {BoxDecoration? decoration}
    BoxDecoration? decoration,

    /// param: {Clip clipBehavior = Clip.none}
    required Clip clipBehavior,

    /// param: {double dividerMargin = _kBaseDividerMargin}
    required double dividerMargin,

    /// param: {double? additionalDividerMargin}
    double? additionalDividerMargin,

    /// param: {double? topMargin = _kMarginTop}
    double? topMargin,

    /// param: {bool hasLeading = true}
    required bool hasLeading,
  }) : super(
          key: key,
          children: children,
          header: header,
          footer: footer,
          margin: margin,
          backgroundColor: backgroundColor,
          decoration: decoration,
          clipBehavior: clipBehavior,
          dividerMargin: dividerMargin,
          additionalDividerMargin: additionalDividerMargin,
          topMargin: topMargin,
          hasLeading: hasLeading,
        ) {}

  /// CupertinoListSection CupertinoListSection.insetGrouped({Key? key, List<Widget>? children, Widget? header, Widget? footer, EdgeInsetsGeometry? margin, Color backgroundColor = CupertinoColors.systemGroupedBackground, BoxDecoration? decoration, Clip clipBehavior = Clip.hardEdge, double dividerMargin = _kInsetDividerMargin, double? additionalDividerMargin, double? topMargin, bool hasLeading = true})
  CupertinoListSectionMate.insetGrouped({
    /// param: {Key? key}
    Key? key,

    /// param: {List<Widget>? children}
    List<Widget>? children,

    /// param: {Widget? header}
    Widget? header,

    /// param: {Widget? footer}
    Widget? footer,

    /// param: {EdgeInsetsGeometry? margin}
    EdgeInsetsGeometry? margin,

    /// param: {Color backgroundColor = CupertinoColors.systemGroupedBackground}
    required Color backgroundColor,

    /// param: {BoxDecoration? decoration}
    BoxDecoration? decoration,

    /// param: {Clip clipBehavior = Clip.hardEdge}
    required Clip clipBehavior,

    /// param: {double dividerMargin = _kInsetDividerMargin}
    required double dividerMargin,

    /// param: {double? additionalDividerMargin}
    double? additionalDividerMargin,

    /// param: {double? topMargin}
    double? topMargin,

    /// param: {bool hasLeading = true}
    required bool hasLeading,
  }) : super.insetGrouped(
          key: key,
          children: children,
          header: header,
          footer: footer,
          margin: margin,
          backgroundColor: backgroundColor,
          decoration: decoration,
          clipBehavior: clipBehavior,
          dividerMargin: dividerMargin,
          additionalDividerMargin: additionalDividerMargin,
          topMargin: topMargin,
          hasLeading: hasLeading,
        ) {}
}
