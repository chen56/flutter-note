// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:01.483331

library;

import 'dart:core';
import 'package:flutter/src/animation/curves.dart';
import 'dart:ui';
export 'dart:ui' show Offset;

/// abstract class ParametricCurve<T>
abstract class ParametricCurveMate<T> {
  /// ParametricCurve<T> ParametricCurve()
  ParametricCurveMate() {}
}

/// abstract class Curve extends ParametricCurve<double>
abstract class CurveMate {
  /// Curve Curve()
  CurveMate() {}
}

/// class SawTooth extends Curve
class SawToothMate {
  /// SawTooth SawTooth(int count)
  SawToothMate(
// param: int count
      int count) {}
}

/// class Interval extends Curve
class IntervalMate {
  /// Interval Interval(double begin, double end, {Curve curve = Curves.linear})
  IntervalMate(
// param: double begin
    double begin,
// param: double end
    double end, {
// param: {Curve curve = Curves.linear}
    required Curve curve,
  }) {}
}

/// class Threshold extends Curve
class ThresholdMate {
  /// Threshold Threshold(double threshold)
  ThresholdMate(
// param: double threshold
      double threshold) {}
}

/// class Cubic extends Curve
class CubicMate {
  /// Cubic Cubic(double a, double b, double c, double d)
  CubicMate(
// param: double a
    double a,
// param: double b
    double b,
// param: double c
    double c,
// param: double d
    double d,
  ) {}
}

/// class ThreePointCubic extends Curve
class ThreePointCubicMate {
  /// ThreePointCubic ThreePointCubic(Offset a1, Offset b1, Offset midpoint, Offset a2, Offset b2)
  ThreePointCubicMate(
// param: Offset a1
    Offset a1,
// param: Offset b1
    Offset b1,
// param: Offset midpoint
    Offset midpoint,
// param: Offset a2
    Offset a2,
// param: Offset b2
    Offset b2,
  ) {}
}

/// abstract class Curve2D extends ParametricCurve<Offset>
abstract class Curve2DMate {
  /// Curve2D Curve2D()
  Curve2DMate() {}
}

/// class Curve2DSample
class Curve2DSampleMate {
  /// Curve2DSample Curve2DSample(double t, Offset value)
  Curve2DSampleMate(
// param: double t
    double t,
// param: Offset value
    Offset value,
  ) {}
}

/// class CatmullRomSpline extends Curve2D
class CatmullRomSplineMate {
  /// CatmullRomSpline CatmullRomSpline(List<Offset> controlPoints, {double tension = 0.0, Offset? startHandle, Offset? endHandle})
  CatmullRomSplineMate(
// param: List<Offset> controlPoints
    List<Offset> controlPoints, {
// param: {double tension = 0.0}
    required double tension,
// param: {Offset? startHandle}
    Offset? startHandle,
// param: {Offset? endHandle}
    Offset? endHandle,
  }) {}

  /// CatmullRomSpline CatmullRomSpline.precompute(List<Offset> controlPoints, {double tension = 0.0, Offset? startHandle, Offset? endHandle})
  CatmullRomSplineMate.precompute(
// param: List<Offset> controlPoints
    List<Offset> controlPoints, {
// param: {double tension = 0.0}
    required double tension,
// param: {Offset? startHandle}
    Offset? startHandle,
// param: {Offset? endHandle}
    Offset? endHandle,
  }) {}
}

/// class CatmullRomCurve extends Curve
class CatmullRomCurveMate {
  /// CatmullRomCurve CatmullRomCurve(List<Offset> controlPoints, {double tension = 0.0})
  CatmullRomCurveMate(
// param: List<Offset> controlPoints
    List<Offset> controlPoints, {
// param: {double tension = 0.0}
    required double tension,
  }) {}

  /// CatmullRomCurve CatmullRomCurve.precompute(List<Offset> controlPoints, {double tension = 0.0})
  CatmullRomCurveMate.precompute(
// param: List<Offset> controlPoints
    List<Offset> controlPoints, {
// param: {double tension = 0.0}
    required double tension,
  }) {}
}

/// class FlippedCurve extends Curve
class FlippedCurveMate {
  /// FlippedCurve FlippedCurve(Curve curve)
  FlippedCurveMate(
// param: Curve curve
      Curve curve) {}
}

/// class ElasticInCurve extends Curve
class ElasticInCurveMate {
  /// ElasticInCurve ElasticInCurve([double period = 0.4])
  ElasticInCurveMate(
// param: [double period = 0.4]
      double period) {}
}

/// class ElasticOutCurve extends Curve
class ElasticOutCurveMate {
  /// ElasticOutCurve ElasticOutCurve([double period = 0.4])
  ElasticOutCurveMate(
// param: [double period = 0.4]
      double period) {}
}

/// class ElasticInOutCurve extends Curve
class ElasticInOutCurveMate {
  /// ElasticInOutCurve ElasticInOutCurve([double period = 0.4])
  ElasticInOutCurveMate(
// param: [double period = 0.4]
      double period) {}
}

/// class Curves
class CurvesMate {}
