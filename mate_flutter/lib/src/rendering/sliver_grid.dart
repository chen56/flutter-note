// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:01.242801

library;

import 'dart:core';
import 'package:flutter/src/rendering/sliver_multi_box_adaptor.dart';
import 'package:flutter/src/rendering/sliver_grid.dart';

/// class SliverGridGeometry
class SliverGridGeometryMate {
  /// SliverGridGeometry SliverGridGeometry({required double scrollOffset, required double crossAxisOffset, required double mainAxisExtent, required double crossAxisExtent})
  SliverGridGeometryMate({
// param: {required double scrollOffset}
    required double scrollOffset,
// param: {required double crossAxisOffset}
    required double crossAxisOffset,
// param: {required double mainAxisExtent}
    required double mainAxisExtent,
// param: {required double crossAxisExtent}
    required double crossAxisExtent,
  }) {}
}

/// abstract class SliverGridLayout
abstract class SliverGridLayoutMate {
  /// SliverGridLayout SliverGridLayout()
  SliverGridLayoutMate() {}
}

/// class SliverGridRegularTileLayout extends SliverGridLayout
class SliverGridRegularTileLayoutMate {
  /// SliverGridRegularTileLayout SliverGridRegularTileLayout({required int crossAxisCount, required double mainAxisStride, required double crossAxisStride, required double childMainAxisExtent, required double childCrossAxisExtent, required bool reverseCrossAxis})
  SliverGridRegularTileLayoutMate({
// param: {required int crossAxisCount}
    required int crossAxisCount,
// param: {required double mainAxisStride}
    required double mainAxisStride,
// param: {required double crossAxisStride}
    required double crossAxisStride,
// param: {required double childMainAxisExtent}
    required double childMainAxisExtent,
// param: {required double childCrossAxisExtent}
    required double childCrossAxisExtent,
// param: {required bool reverseCrossAxis}
    required bool reverseCrossAxis,
  }) {}
}

/// abstract class SliverGridDelegate
abstract class SliverGridDelegateMate {
  /// SliverGridDelegate SliverGridDelegate()
  SliverGridDelegateMate() {}
}

/// class SliverGridDelegateWithFixedCrossAxisCount extends SliverGridDelegate
class SliverGridDelegateWithFixedCrossAxisCountMate {
  /// SliverGridDelegateWithFixedCrossAxisCount SliverGridDelegateWithFixedCrossAxisCount({required int crossAxisCount, double mainAxisSpacing = 0.0, double crossAxisSpacing = 0.0, double childAspectRatio = 1.0, double? mainAxisExtent})
  SliverGridDelegateWithFixedCrossAxisCountMate({
// param: {required int crossAxisCount}
    required int crossAxisCount,
// param: {double mainAxisSpacing = 0.0}
    required double mainAxisSpacing,
// param: {double crossAxisSpacing = 0.0}
    required double crossAxisSpacing,
// param: {double childAspectRatio = 1.0}
    required double childAspectRatio,
// param: {double? mainAxisExtent}
    double? mainAxisExtent,
  }) {}
}

/// class SliverGridDelegateWithMaxCrossAxisExtent extends SliverGridDelegate
class SliverGridDelegateWithMaxCrossAxisExtentMate {
  /// SliverGridDelegateWithMaxCrossAxisExtent SliverGridDelegateWithMaxCrossAxisExtent({required double maxCrossAxisExtent, double mainAxisSpacing = 0.0, double crossAxisSpacing = 0.0, double childAspectRatio = 1.0, double? mainAxisExtent})
  SliverGridDelegateWithMaxCrossAxisExtentMate({
// param: {required double maxCrossAxisExtent}
    required double maxCrossAxisExtent,
// param: {double mainAxisSpacing = 0.0}
    required double mainAxisSpacing,
// param: {double crossAxisSpacing = 0.0}
    required double crossAxisSpacing,
// param: {double childAspectRatio = 1.0}
    required double childAspectRatio,
// param: {double? mainAxisExtent}
    double? mainAxisExtent,
  }) {}
}

/// class SliverGridParentData extends SliverMultiBoxAdaptorParentData
class SliverGridParentDataMate {
  /// SliverGridParentData SliverGridParentData()
  SliverGridParentDataMate() {}
}

/// class RenderSliverGrid extends RenderSliverMultiBoxAdaptor
class RenderSliverGridMate {
  /// RenderSliverGrid RenderSliverGrid({required RenderSliverBoxChildManager childManager, required SliverGridDelegate gridDelegate})
  RenderSliverGridMate({
// param: {required RenderSliverBoxChildManager childManager}
    required RenderSliverBoxChildManager childManager,
// param: {required SliverGridDelegate gridDelegate}
    required SliverGridDelegate gridDelegate,
  }) {}
}
