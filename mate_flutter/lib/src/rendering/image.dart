// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-09 14:20:10.464839

library;

import 'package:flutter/src/rendering/image.dart';
import 'dart:ui';
import 'dart:core';
import 'package:flutter/src/animation/animation.dart';
import 'package:flutter/src/painting/box_fit.dart';
import 'package:flutter/src/painting/alignment.dart';
import 'package:flutter/src/painting/decoration_image.dart';
export 'package:flutter/painting.dart' show BoxFit, ImageRepeat;

/// class RenderImage extends RenderBox
class RenderImageMate extends RenderImage {
  /// RenderImage RenderImage({Image? image, String? debugImageLabel, double? width, double? height, double scale = 1.0, Color? color, Animation<double>? opacity, BlendMode? colorBlendMode, BoxFit? fit, AlignmentGeometry alignment = Alignment.center, ImageRepeat repeat = ImageRepeat.noRepeat, Rect? centerSlice, bool matchTextDirection = false, TextDirection? textDirection, bool invertColors = false, bool isAntiAlias = false, FilterQuality filterQuality = FilterQuality.low})
  RenderImageMate({
    /// param: {Image? image}
    Image? image,

    /// param: {String? debugImageLabel}
    String? debugImageLabel,

    /// param: {double? width}
    double? width,

    /// param: {double? height}
    double? height,

    /// param: {double scale = 1.0}
    required double scale,

    /// param: {Color? color}
    Color? color,

    /// param: {Animation<double>? opacity}
    Animation<double>? opacity,

    /// param: {BlendMode? colorBlendMode}
    BlendMode? colorBlendMode,

    /// param: {BoxFit? fit}
    BoxFit? fit,

    /// param: {AlignmentGeometry alignment = Alignment.center}
    required AlignmentGeometry alignment,

    /// param: {ImageRepeat repeat = ImageRepeat.noRepeat}
    required ImageRepeat repeat,

    /// param: {Rect? centerSlice}
    Rect? centerSlice,

    /// param: {bool matchTextDirection = false}
    required bool matchTextDirection,

    /// param: {TextDirection? textDirection}
    TextDirection? textDirection,

    /// param: {bool invertColors = false}
    required bool invertColors,

    /// param: {bool isAntiAlias = false}
    required bool isAntiAlias,

    /// param: {FilterQuality filterQuality = FilterQuality.low}
    required FilterQuality filterQuality,
  }) : super(
          image: image,
          debugImageLabel: debugImageLabel,
          width: width,
          height: height,
          scale: scale,
          color: color,
          opacity: opacity,
          colorBlendMode: colorBlendMode,
          fit: fit,
          alignment: alignment,
          repeat: repeat,
          centerSlice: centerSlice,
          matchTextDirection: matchTextDirection,
          textDirection: textDirection,
          invertColors: invertColors,
          isAntiAlias: isAntiAlias,
          filterQuality: filterQuality,
        ) {}
}
