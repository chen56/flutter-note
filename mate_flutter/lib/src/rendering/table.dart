// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:01.267663

library;

import 'dart:core';
import 'package:flutter/src/rendering/table.dart';
import 'dart:ui';
import 'package:flutter/src/rendering/table_border.dart';
import 'package:flutter/src/painting/decoration.dart';
import 'package:flutter/src/painting/image_provider.dart';
import 'package:flutter/src/rendering/box.dart';

/// class TableCellParentData extends BoxParentData
class TableCellParentDataMate {
  /// TableCellParentData TableCellParentData()
  TableCellParentDataMate() {}
}

/// abstract class TableColumnWidth
abstract class TableColumnWidthMate {
  /// TableColumnWidth TableColumnWidth()
  TableColumnWidthMate() {}
}

/// class IntrinsicColumnWidth extends TableColumnWidth
class IntrinsicColumnWidthMate {
  /// IntrinsicColumnWidth IntrinsicColumnWidth({double? flex})
  IntrinsicColumnWidthMate(
      {
// param: {double? flex}
      double? flex}) {}
}

/// class FixedColumnWidth extends TableColumnWidth
class FixedColumnWidthMate {
  /// FixedColumnWidth FixedColumnWidth(double value)
  FixedColumnWidthMate(
// param: double value
      double value) {}
}

/// class FractionColumnWidth extends TableColumnWidth
class FractionColumnWidthMate {
  /// FractionColumnWidth FractionColumnWidth(double value)
  FractionColumnWidthMate(
// param: double value
      double value) {}
}

/// class FlexColumnWidth extends TableColumnWidth
class FlexColumnWidthMate {
  /// FlexColumnWidth FlexColumnWidth([double value = 1.0])
  FlexColumnWidthMate(
// param: [double value = 1.0]
      double value) {}
}

/// class MaxColumnWidth extends TableColumnWidth
class MaxColumnWidthMate {
  /// MaxColumnWidth MaxColumnWidth(TableColumnWidth a, TableColumnWidth b)
  MaxColumnWidthMate(
// param: TableColumnWidth a
    TableColumnWidth a,
// param: TableColumnWidth b
    TableColumnWidth b,
  ) {}
}

/// class MinColumnWidth extends TableColumnWidth
class MinColumnWidthMate {
  /// MinColumnWidth MinColumnWidth(TableColumnWidth a, TableColumnWidth b)
  MinColumnWidthMate(
// param: TableColumnWidth a
    TableColumnWidth a,
// param: TableColumnWidth b
    TableColumnWidth b,
  ) {}
}

/// class RenderTable extends RenderBox
class RenderTableMate {
  /// RenderTable RenderTable({int? columns, int? rows, Map<int, TableColumnWidth>? columnWidths, TableColumnWidth defaultColumnWidth = const FlexColumnWidth(), required TextDirection textDirection, TableBorder? border, List<Decoration?>? rowDecorations, ImageConfiguration configuration = ImageConfiguration.empty, TableCellVerticalAlignment defaultVerticalAlignment = TableCellVerticalAlignment.top, TextBaseline? textBaseline, List<List<RenderBox>>? children})
  RenderTableMate({
// param: {int? columns}
    int? columns,
// param: {int? rows}
    int? rows,
// param: {Map<int, TableColumnWidth>? columnWidths}
    Map<int, TableColumnWidth>? columnWidths,
// param: {TableColumnWidth defaultColumnWidth = const FlexColumnWidth()}
    required TableColumnWidth defaultColumnWidth,
// param: {required TextDirection textDirection}
    required TextDirection textDirection,
// param: {TableBorder? border}
    TableBorder? border,
// param: {List<Decoration?>? rowDecorations}
    List<Decoration?>? rowDecorations,
// param: {ImageConfiguration configuration = ImageConfiguration.empty}
    required ImageConfiguration configuration,
// param: {TableCellVerticalAlignment defaultVerticalAlignment = TableCellVerticalAlignment.top}
    required TableCellVerticalAlignment defaultVerticalAlignment,
// param: {TextBaseline? textBaseline}
    TextBaseline? textBaseline,
// param: {List<List<RenderBox>>? children}
    List<List<RenderBox>>? children,
  }) {}
}
