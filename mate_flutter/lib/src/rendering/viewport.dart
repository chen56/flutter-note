// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:01.285983

library;

import 'dart:core';
import 'dart:ui';
import 'package:flutter/src/rendering/object.dart';
import 'package:flutter/src/rendering/sliver.dart';
import 'package:flutter/src/painting/basic_types.dart';
import 'package:flutter/src/rendering/viewport_offset.dart';
import 'package:flutter/src/rendering/viewport.dart';

/// abstract class RenderAbstractViewport extends RenderObject
abstract class RenderAbstractViewportMate {}

/// class RevealedOffset
class RevealedOffsetMate {
  /// RevealedOffset RevealedOffset({required double offset, required Rect rect})
  RevealedOffsetMate({
// param: {required double offset}
    required double offset,
// param: {required Rect rect}
    required Rect rect,
  }) {}
}

/// abstract class RenderViewportBase<ParentDataClass extends ContainerParentDataMixin<RenderSliver>> extends RenderBox with ContainerRenderObjectMixin<RenderSliver, ParentDataClass> implements RenderAbstractViewport
abstract class RenderViewportBaseMate<ParentDataClass extends ContainerParentDataMixin<RenderSliver>> {
  /// RenderViewportBase<ParentDataClass> RenderViewportBase({AxisDirection axisDirection = AxisDirection.down, required AxisDirection crossAxisDirection, required ViewportOffset offset, double? cacheExtent, CacheExtentStyle cacheExtentStyle = CacheExtentStyle.pixel, Clip clipBehavior = Clip.hardEdge})
  RenderViewportBaseMate({
// param: {AxisDirection axisDirection = AxisDirection.down}
    required AxisDirection axisDirection,
// param: {required AxisDirection crossAxisDirection}
    required AxisDirection crossAxisDirection,
// param: {required ViewportOffset offset}
    required ViewportOffset offset,
// param: {double? cacheExtent}
    double? cacheExtent,
// param: {CacheExtentStyle cacheExtentStyle = CacheExtentStyle.pixel}
    required CacheExtentStyle cacheExtentStyle,
// param: {Clip clipBehavior = Clip.hardEdge}
    required Clip clipBehavior,
  }) {}
}

/// class RenderViewport extends RenderViewportBase<SliverPhysicalContainerParentData>
class RenderViewportMate {
  /// RenderViewport RenderViewport({AxisDirection axisDirection = AxisDirection.down, required AxisDirection crossAxisDirection, required ViewportOffset offset, double anchor = 0.0, List<RenderSliver>? children, RenderSliver? center, double? cacheExtent, CacheExtentStyle cacheExtentStyle = CacheExtentStyle.pixel, Clip clipBehavior = Clip.hardEdge})
  RenderViewportMate({
// param: {AxisDirection axisDirection = AxisDirection.down}
    required AxisDirection axisDirection,
// param: {required AxisDirection crossAxisDirection}
    required AxisDirection crossAxisDirection,
// param: {required ViewportOffset offset}
    required ViewportOffset offset,
// param: {double anchor = 0.0}
    required double anchor,
// param: {List<RenderSliver>? children}
    List<RenderSliver>? children,
// param: {RenderSliver? center}
    RenderSliver? center,
// param: {double? cacheExtent}
    double? cacheExtent,
// param: {CacheExtentStyle cacheExtentStyle = CacheExtentStyle.pixel}
    required CacheExtentStyle cacheExtentStyle,
// param: {Clip clipBehavior = Clip.hardEdge}
    required Clip clipBehavior,
  }) {}
}

/// class RenderShrinkWrappingViewport extends RenderViewportBase<SliverLogicalContainerParentData>
class RenderShrinkWrappingViewportMate {
  /// RenderShrinkWrappingViewport RenderShrinkWrappingViewport({AxisDirection axisDirection = AxisDirection.down, required AxisDirection crossAxisDirection, required ViewportOffset offset, Clip clipBehavior = Clip.hardEdge, List<RenderSliver>? children})
  RenderShrinkWrappingViewportMate({
// param: {AxisDirection axisDirection = AxisDirection.down}
    required AxisDirection axisDirection,
// param: {required AxisDirection crossAxisDirection}
    required AxisDirection crossAxisDirection,
// param: {required ViewportOffset offset}
    required ViewportOffset offset,
// param: {Clip clipBehavior = Clip.hardEdge}
    required Clip clipBehavior,
// param: {List<RenderSliver>? children}
    List<RenderSliver>? children,
  }) {}
}
