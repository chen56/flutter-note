// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-09 14:20:10.842199

library;

import 'package:flutter/src/rendering/stack.dart';
import 'dart:core';
import 'package:flutter/src/rendering/box.dart';
import 'package:flutter/src/painting/alignment.dart';
import 'dart:ui';

/// class RelativeRect
class RelativeRectMate extends RelativeRect {
  /// RelativeRect RelativeRect.fromLTRB(double left, double top, double right, double bottom)
  RelativeRectMate.fromLTRB(
    /// param: double left
    double left,

    /// param: double top
    double top,

    /// param: double right
    double right,

    /// param: double bottom
    double bottom,
  ) : super.fromLTRB(
          left,
          top,
          right,
          bottom,
        ) {}
}

/// class RenderStack extends RenderBox with ContainerRenderObjectMixin<RenderBox, StackParentData>, RenderBoxContainerDefaultsMixin<RenderBox, StackParentData>
class RenderStackMate extends RenderStack {
  /// RenderStack RenderStack({List<RenderBox>? children, AlignmentGeometry alignment = AlignmentDirectional.topStart, TextDirection? textDirection, StackFit fit = StackFit.loose, Clip clipBehavior = Clip.hardEdge})
  RenderStackMate({
    /// param: {List<RenderBox>? children}
    List<RenderBox>? children,

    /// param: {AlignmentGeometry alignment = AlignmentDirectional.topStart}
    required AlignmentGeometry alignment,

    /// param: {TextDirection? textDirection}
    TextDirection? textDirection,

    /// param: {StackFit fit = StackFit.loose}
    required StackFit fit,

    /// param: {Clip clipBehavior = Clip.hardEdge}
    required Clip clipBehavior,
  }) : super(
          children: children,
          alignment: alignment,
          textDirection: textDirection,
          fit: fit,
          clipBehavior: clipBehavior,
        ) {}
}

/// class RenderIndexedStack extends RenderStack
class RenderIndexedStackMate extends RenderIndexedStack {
  /// RenderIndexedStack RenderIndexedStack({List<RenderBox>? children, AlignmentGeometry alignment = AlignmentDirectional.topStart, TextDirection? textDirection, StackFit fit = StackFit.loose, Clip clipBehavior = Clip.hardEdge, int? index = 0})
  RenderIndexedStackMate({
    /// param: {List<RenderBox>? children}
    List<RenderBox>? children,

    /// param: {AlignmentGeometry alignment = AlignmentDirectional.topStart}
    required AlignmentGeometry alignment,

    /// param: {TextDirection? textDirection}
    TextDirection? textDirection,

    /// param: {StackFit fit = StackFit.loose}
    required StackFit fit,

    /// param: {Clip clipBehavior = Clip.hardEdge}
    required Clip clipBehavior,

    /// param: {int? index = 0}
    int? index,
  }) : super(
          children: children,
          alignment: alignment,
          textDirection: textDirection,
          fit: fit,
          clipBehavior: clipBehavior,
          index: index,
        ) {}
}
