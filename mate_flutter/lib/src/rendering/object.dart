// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-09 14:20:10.732679

library;

import 'package:flutter/src/rendering/object.dart';
import 'package:flutter/src/rendering/layer.dart';
import 'dart:ui';
import 'package:flutter/src/semantics/semantics.dart';
import 'dart:core';
export 'package:flutter/foundation.dart'
    show
        DiagnosticPropertiesBuilder,
        DiagnosticsNode,
        DiagnosticsProperty,
        DoubleProperty,
        EnumProperty,
        ErrorDescription,
        ErrorHint,
        ErrorSummary,
        FlagProperty,
        FlutterError,
        InformationCollector,
        IntProperty,
        StringProperty;
export 'package:flutter/gestures.dart' show HitTestEntry, HitTestResult;
export 'package:flutter/painting.dart';

/// class PaintingContext extends ClipContext
class PaintingContextMate extends PaintingContext {
  /// PaintingContext PaintingContext(ContainerLayer _containerLayer, Rect estimatedBounds)
  PaintingContextMate(
    /// param: ContainerLayer _containerLayer
    ContainerLayer _containerLayer,

    /// param: Rect estimatedBounds
    Rect estimatedBounds,
  ) : super(
          _containerLayer,
          estimatedBounds,
        ) {}
}

/// class PipelineOwner
class PipelineOwnerMate extends PipelineOwner {
  /// PipelineOwner PipelineOwner({void Function()? onNeedVisualUpdate, void Function()? onSemanticsOwnerCreated, void Function(SemanticsUpdate)? onSemanticsUpdate, void Function()? onSemanticsOwnerDisposed})
  PipelineOwnerMate({
    /// param: {void Function()? onNeedVisualUpdate}
    VoidCallback? onNeedVisualUpdate,

    /// param: {void Function()? onSemanticsOwnerCreated}
    VoidCallback? onSemanticsOwnerCreated,

    /// param: {void Function(SemanticsUpdate)? onSemanticsUpdate}
    SemanticsUpdateCallback? onSemanticsUpdate,

    /// param: {void Function()? onSemanticsOwnerDisposed}
    VoidCallback? onSemanticsOwnerDisposed,
  }) : super(
          onNeedVisualUpdate: onNeedVisualUpdate,
          onSemanticsOwnerCreated: onSemanticsOwnerCreated,
          onSemanticsUpdate: onSemanticsUpdate,
          onSemanticsOwnerDisposed: onSemanticsOwnerDisposed,
        ) {}
}

/// class DiagnosticsDebugCreator extends DiagnosticsProperty<Object>
class DiagnosticsDebugCreatorMate extends DiagnosticsDebugCreator {
  /// DiagnosticsDebugCreator DiagnosticsDebugCreator(Object value)
  DiagnosticsDebugCreatorMate(

      /// param: Object value
      Object value)
      : super(value) {}
}
