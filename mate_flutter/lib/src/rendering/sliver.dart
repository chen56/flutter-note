// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:01.232323

library;

import 'package:flutter/src/painting/basic_types.dart';
import 'package:flutter/src/rendering/sliver.dart';
import 'package:flutter/src/rendering/viewport_offset.dart';
import 'dart:core';
import 'package:flutter/src/gestures/hit_test.dart';
import 'package:flutter/src/rendering/box.dart';

/// class SliverConstraints extends Constraints
class SliverConstraintsMate {
  /// SliverConstraints SliverConstraints({required AxisDirection axisDirection, required GrowthDirection growthDirection, required ScrollDirection userScrollDirection, required double scrollOffset, required double precedingScrollExtent, required double overlap, required double remainingPaintExtent, required double crossAxisExtent, required AxisDirection crossAxisDirection, required double viewportMainAxisExtent, required double remainingCacheExtent, required double cacheOrigin})
  SliverConstraintsMate({
// param: {required AxisDirection axisDirection}
    required AxisDirection axisDirection,
// param: {required GrowthDirection growthDirection}
    required GrowthDirection growthDirection,
// param: {required ScrollDirection userScrollDirection}
    required ScrollDirection userScrollDirection,
// param: {required double scrollOffset}
    required double scrollOffset,
// param: {required double precedingScrollExtent}
    required double precedingScrollExtent,
// param: {required double overlap}
    required double overlap,
// param: {required double remainingPaintExtent}
    required double remainingPaintExtent,
// param: {required double crossAxisExtent}
    required double crossAxisExtent,
// param: {required AxisDirection crossAxisDirection}
    required AxisDirection crossAxisDirection,
// param: {required double viewportMainAxisExtent}
    required double viewportMainAxisExtent,
// param: {required double remainingCacheExtent}
    required double remainingCacheExtent,
// param: {required double cacheOrigin}
    required double cacheOrigin,
  }) {}
}

/// class SliverGeometry with Diagnosticable
class SliverGeometryMate {
  /// SliverGeometry SliverGeometry({double scrollExtent = 0.0, double paintExtent = 0.0, double paintOrigin = 0.0, double? layoutExtent, double maxPaintExtent = 0.0, double maxScrollObstructionExtent = 0.0, double? hitTestExtent, bool? visible, bool hasVisualOverflow = false, double? scrollOffsetCorrection, double? cacheExtent})
  SliverGeometryMate({
// param: {double scrollExtent = 0.0}
    required double scrollExtent,
// param: {double paintExtent = 0.0}
    required double paintExtent,
// param: {double paintOrigin = 0.0}
    required double paintOrigin,
// param: {double? layoutExtent}
    double? layoutExtent,
// param: {double maxPaintExtent = 0.0}
    required double maxPaintExtent,
// param: {double maxScrollObstructionExtent = 0.0}
    required double maxScrollObstructionExtent,
// param: {double? hitTestExtent}
    double? hitTestExtent,
// param: {bool? visible}
    bool? visible,
// param: {bool hasVisualOverflow = false}
    required bool hasVisualOverflow,
// param: {double? scrollOffsetCorrection}
    double? scrollOffsetCorrection,
// param: {double? cacheExtent}
    double? cacheExtent,
  }) {}
}

/// class SliverHitTestResult extends HitTestResult
class SliverHitTestResultMate {
  /// SliverHitTestResult SliverHitTestResult()
  SliverHitTestResultMate() {}

  /// SliverHitTestResult SliverHitTestResult.wrap(HitTestResult result)
  SliverHitTestResultMate.wrap(
// param: HitTestResult result
      HitTestResult result) {}
}

/// class SliverHitTestEntry extends HitTestEntry<RenderSliver>
class SliverHitTestEntryMate {
  /// SliverHitTestEntry SliverHitTestEntry(RenderSliver target, {required double mainAxisPosition, required double crossAxisPosition})
  SliverHitTestEntryMate(
// param: RenderSliver target
    RenderSliver target, {
// param: {required double mainAxisPosition}
    required double mainAxisPosition,
// param: {required double crossAxisPosition}
    required double crossAxisPosition,
  }) {}
}

/// class SliverLogicalParentData extends ParentData
class SliverLogicalParentDataMate {
  /// SliverLogicalParentData SliverLogicalParentData()
  SliverLogicalParentDataMate() {}
}

/// class SliverLogicalContainerParentData extends SliverLogicalParentData with ContainerParentDataMixin<RenderSliver>
class SliverLogicalContainerParentDataMate {
  /// SliverLogicalContainerParentData SliverLogicalContainerParentData()
  SliverLogicalContainerParentDataMate() {}
}

/// class SliverPhysicalParentData extends ParentData
class SliverPhysicalParentDataMate {
  /// SliverPhysicalParentData SliverPhysicalParentData()
  SliverPhysicalParentDataMate() {}
}

/// class SliverPhysicalContainerParentData extends SliverPhysicalParentData with ContainerParentDataMixin<RenderSliver>
class SliverPhysicalContainerParentDataMate {
  /// SliverPhysicalContainerParentData SliverPhysicalContainerParentData()
  SliverPhysicalContainerParentDataMate() {}
}

/// abstract class RenderSliver extends RenderObject
abstract class RenderSliverMate {
  /// RenderSliver RenderSliver()
  RenderSliverMate() {}
}

/// abstract class RenderSliverSingleBoxAdapter extends RenderSliver with RenderObjectWithChildMixin<RenderBox>, RenderSliverHelpers
abstract class RenderSliverSingleBoxAdapterMate {
  /// RenderSliverSingleBoxAdapter RenderSliverSingleBoxAdapter({RenderBox? child})
  RenderSliverSingleBoxAdapterMate(
      {
// param: {RenderBox? child}
      RenderBox? child}) {}
}

/// class RenderSliverToBoxAdapter extends RenderSliverSingleBoxAdapter
class RenderSliverToBoxAdapterMate {
  /// RenderSliverToBoxAdapter RenderSliverToBoxAdapter({RenderBox? child})
  RenderSliverToBoxAdapterMate(
      {
// param: {RenderBox? child}
      RenderBox? child}) {}
}
