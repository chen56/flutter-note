// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:01.196804

library;

import 'package:flutter/src/services/platform_views.dart';
import 'package:flutter/src/rendering/platform_view.dart';
import 'dart:core';
import 'package:flutter/src/foundation/basic_types.dart';
import 'package:flutter/src/gestures/recognizer.dart';
import 'dart:ui';

/// class RenderAndroidView extends PlatformViewRenderBox
class RenderAndroidViewMate {
  /// RenderAndroidView RenderAndroidView({required AndroidViewController viewController, required PlatformViewHitTestBehavior hitTestBehavior, required Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizers, Clip clipBehavior = Clip.hardEdge})
  RenderAndroidViewMate({
// param: {required AndroidViewController viewController}
    required AndroidViewController viewController,
// param: {required PlatformViewHitTestBehavior hitTestBehavior}
    required PlatformViewHitTestBehavior hitTestBehavior,
// param: {required Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizers}
    required Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizers,
// param: {Clip clipBehavior = Clip.hardEdge}
    required Clip clipBehavior,
  }) {}
}

/// class RenderUiKitView extends RenderBox
class RenderUiKitViewMate {
  /// RenderUiKitView RenderUiKitView({required UiKitViewController viewController, required PlatformViewHitTestBehavior hitTestBehavior, required Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizers})
  RenderUiKitViewMate({
// param: {required UiKitViewController viewController}
    required UiKitViewController viewController,
// param: {required PlatformViewHitTestBehavior hitTestBehavior}
    required PlatformViewHitTestBehavior hitTestBehavior,
// param: {required Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizers}
    required Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizers,
  }) {}
}

/// class PlatformViewRenderBox extends RenderBox with _PlatformViewGestureMixin
class PlatformViewRenderBoxMate {
  /// PlatformViewRenderBox PlatformViewRenderBox({required PlatformViewController controller, required PlatformViewHitTestBehavior hitTestBehavior, required Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizers})
  PlatformViewRenderBoxMate({
// param: {required PlatformViewController controller}
    required PlatformViewController controller,
// param: {required PlatformViewHitTestBehavior hitTestBehavior}
    required PlatformViewHitTestBehavior hitTestBehavior,
// param: {required Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizers}
    required Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizers,
  }) {}
}
