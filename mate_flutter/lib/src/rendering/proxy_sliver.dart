// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:01.217605

library;

import 'package:flutter/src/rendering/sliver.dart';
import 'dart:core';
import 'package:flutter/src/animation/animation.dart';

/// abstract class RenderProxySliver extends RenderSliver with RenderObjectWithChildMixin<RenderSliver>
abstract class RenderProxySliverMate {
  /// RenderProxySliver RenderProxySliver([RenderSliver? child])
  RenderProxySliverMate(
// param: [RenderSliver? child]
      RenderSliver? child) {}
}

/// class RenderSliverOpacity extends RenderProxySliver
class RenderSliverOpacityMate {
  /// RenderSliverOpacity RenderSliverOpacity({double opacity = 1.0, bool alwaysIncludeSemantics = false, RenderSliver? sliver})
  RenderSliverOpacityMate({
// param: {double opacity = 1.0}
    required double opacity,
// param: {bool alwaysIncludeSemantics = false}
    required bool alwaysIncludeSemantics,
// param: {RenderSliver? sliver}
    RenderSliver? sliver,
  }) {}
}

/// class RenderSliverIgnorePointer extends RenderProxySliver
class RenderSliverIgnorePointerMate {
  /// RenderSliverIgnorePointer RenderSliverIgnorePointer({RenderSliver? sliver, bool ignoring = true, bool? ignoringSemantics})
  RenderSliverIgnorePointerMate({
// param: {RenderSliver? sliver}
    RenderSliver? sliver,
// param: {bool ignoring = true}
    required bool ignoring,
// param: {bool? ignoringSemantics}
    bool? ignoringSemantics,
  }) {}
}

/// class RenderSliverOffstage extends RenderProxySliver
class RenderSliverOffstageMate {
  /// RenderSliverOffstage RenderSliverOffstage({bool offstage = true, RenderSliver? sliver})
  RenderSliverOffstageMate({
// param: {bool offstage = true}
    required bool offstage,
// param: {RenderSliver? sliver}
    RenderSliver? sliver,
  }) {}
}

/// class RenderSliverAnimatedOpacity extends RenderProxySliver with RenderAnimatedOpacityMixin<RenderSliver>
class RenderSliverAnimatedOpacityMate {
  /// RenderSliverAnimatedOpacity RenderSliverAnimatedOpacity({required Animation<double> opacity, bool alwaysIncludeSemantics = false, RenderSliver? sliver})
  RenderSliverAnimatedOpacityMate({
// param: {required Animation<double> opacity}
    required Animation<double> opacity,
// param: {bool alwaysIncludeSemantics = false}
    required bool alwaysIncludeSemantics,
// param: {RenderSliver? sliver}
    RenderSliver? sliver,
  }) {}
}
