// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-11 00:36:16.351709

import 'package:flutter/src/material/scrollbar.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/scroll_controller.dart';
import 'dart:core';
import 'dart:ui';
import 'package:flutter/src/widgets/scroll_notification.dart';
import 'package:flutter/src/widgets/scrollbar.dart';

/// class Scrollbar extends StatelessWidget
class ScrollbarMate extends Scrollbar {
  /// Scrollbar Scrollbar({Key? key, required Widget child, ScrollController? controller, bool? thumbVisibility, bool? trackVisibility, double? thickness, Radius? radius, bool Function(ScrollNotification)? notificationPredicate, bool? interactive, ScrollbarOrientation? scrollbarOrientation, bool? isAlwaysShown, bool? showTrackOnHover, double? hoverThickness})
  ScrollbarMate({
    /// param: {Key? key}
    Key? key,

    /// param: {required Widget child}
    required Widget child,

    /// param: {ScrollController? controller}
    ScrollController? controller,

    /// param: {bool? thumbVisibility}
    bool? thumbVisibility,

    /// param: {bool? trackVisibility}
    bool? trackVisibility,

    /// param: {double? thickness}
    double? thickness,

    /// param: {Radius? radius}
    Radius? radius,

    /// param: {bool Function(ScrollNotification)? notificationPredicate}
    ScrollNotificationPredicate? notificationPredicate,

    /// param: {bool? interactive}
    bool? interactive,

    /// param: {ScrollbarOrientation? scrollbarOrientation}
    ScrollbarOrientation? scrollbarOrientation,

    /// param: {bool? isAlwaysShown}
    bool? isAlwaysShown,

    /// param: {bool? showTrackOnHover}
    bool? showTrackOnHover,

    /// param: {double? hoverThickness}
    double? hoverThickness,
  }) : super(
          key: key,
          child: child,
          controller: controller,
          thumbVisibility: thumbVisibility,
          trackVisibility: trackVisibility,
          thickness: thickness,
          radius: radius,
          notificationPredicate: notificationPredicate,
          interactive: interactive,
          scrollbarOrientation: scrollbarOrientation,
          isAlwaysShown: isAlwaysShown,
          showTrackOnHover: showTrackOnHover,
          hoverThickness: hoverThickness,
        ) {}
}
