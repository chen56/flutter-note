// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:15:59.851641

library;

import 'package:flutter/src/foundation/key.dart';
import 'dart:ui';
import 'dart:core';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/material/drawer.dart';
import 'package:flutter/src/gestures/recognizer.dart';

/// class Drawer extends StatelessWidget
class DrawerMate {
  /// Drawer Drawer({Key? key, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, ShapeBorder? shape, double? width, Widget? child, String? semanticLabel})
  DrawerMate({
// param: {Key? key}
    Key? key,
// param: {Color? backgroundColor}
    Color? backgroundColor,
// param: {double? elevation}
    double? elevation,
// param: {Color? shadowColor}
    Color? shadowColor,
// param: {Color? surfaceTintColor}
    Color? surfaceTintColor,
// param: {ShapeBorder? shape}
    ShapeBorder? shape,
// param: {double? width}
    double? width,
// param: {Widget? child}
    Widget? child,
// param: {String? semanticLabel}
    String? semanticLabel,
  }) {}
}

/// class DrawerController extends StatefulWidget
class DrawerControllerMate {
  /// DrawerController DrawerController({GlobalKey<State<StatefulWidget>>? key, required Widget child, required DrawerAlignment alignment, bool isDrawerOpen = false, void Function(bool)? drawerCallback, DragStartBehavior dragStartBehavior = DragStartBehavior.start, Color? scrimColor, double? edgeDragWidth, bool enableOpenDragGesture = true})
  DrawerControllerMate({
// param: {GlobalKey<State<StatefulWidget>>? key}
    GlobalKey<State<StatefulWidget>>? key,
// param: {required Widget child}
    required Widget child,
// param: {required DrawerAlignment alignment}
    required DrawerAlignment alignment,
// param: {bool isDrawerOpen = false}
    required bool isDrawerOpen,
// param: {void Function(bool)? drawerCallback}
    void Function(
      bool, [
      bool,
    ])?
        drawerCallback,
// param: {DragStartBehavior dragStartBehavior = DragStartBehavior.start}
    required DragStartBehavior dragStartBehavior,
// param: {Color? scrimColor}
    Color? scrimColor,
// param: {double? edgeDragWidth}
    double? edgeDragWidth,
// param: {bool enableOpenDragGesture = true}
    required bool enableOpenDragGesture,
  }) {}
}

/// class DrawerControllerState extends State<DrawerController> with SingleTickerProviderStateMixin<DrawerController>
class DrawerControllerStateMate {
  /// DrawerControllerState DrawerControllerState()
  DrawerControllerStateMate() {}
}
