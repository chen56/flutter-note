// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-11 00:36:16.126318

import 'package:flutter/src/material/expansion_tile.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/foundation/basic_types.dart';
import 'dart:core';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/rendering/flex.dart';
import 'package:flutter/src/painting/alignment.dart';
import 'dart:ui';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/material/list_tile.dart';

/// class ExpansionTile extends StatefulWidget
class ExpansionTileMate extends ExpansionTile {
  /// ExpansionTile ExpansionTile({Key? key, Widget? leading, required Widget title, Widget? subtitle, void Function(bool)? onExpansionChanged, List<Widget> children = const <Widget>[], Widget? trailing, bool initiallyExpanded = false, bool maintainState = false, EdgeInsetsGeometry? tilePadding, CrossAxisAlignment? expandedCrossAxisAlignment, Alignment? expandedAlignment, EdgeInsetsGeometry? childrenPadding, Color? backgroundColor, Color? collapsedBackgroundColor, Color? textColor, Color? collapsedTextColor, Color? iconColor, Color? collapsedIconColor, ShapeBorder? shape, ShapeBorder? collapsedShape, Clip? clipBehavior, ListTileControlAffinity? controlAffinity})
  ExpansionTileMate({
    /// param: {Key? key}
    Key? key,

    /// param: {Widget? leading}
    Widget? leading,

    /// param: {required Widget title}
    required Widget title,

    /// param: {Widget? subtitle}
    Widget? subtitle,

    /// param: {void Function(bool)? onExpansionChanged}
    ValueChanged<bool>? onExpansionChanged,

    /// param: {List<Widget> children = const <Widget>[]}
    required List<Widget> children,

    /// param: {Widget? trailing}
    Widget? trailing,

    /// param: {bool initiallyExpanded = false}
    required bool initiallyExpanded,

    /// param: {bool maintainState = false}
    required bool maintainState,

    /// param: {EdgeInsetsGeometry? tilePadding}
    EdgeInsetsGeometry? tilePadding,

    /// param: {CrossAxisAlignment? expandedCrossAxisAlignment}
    CrossAxisAlignment? expandedCrossAxisAlignment,

    /// param: {Alignment? expandedAlignment}
    Alignment? expandedAlignment,

    /// param: {EdgeInsetsGeometry? childrenPadding}
    EdgeInsetsGeometry? childrenPadding,

    /// param: {Color? backgroundColor}
    Color? backgroundColor,

    /// param: {Color? collapsedBackgroundColor}
    Color? collapsedBackgroundColor,

    /// param: {Color? textColor}
    Color? textColor,

    /// param: {Color? collapsedTextColor}
    Color? collapsedTextColor,

    /// param: {Color? iconColor}
    Color? iconColor,

    /// param: {Color? collapsedIconColor}
    Color? collapsedIconColor,

    /// param: {ShapeBorder? shape}
    ShapeBorder? shape,

    /// param: {ShapeBorder? collapsedShape}
    ShapeBorder? collapsedShape,

    /// param: {Clip? clipBehavior}
    Clip? clipBehavior,

    /// param: {ListTileControlAffinity? controlAffinity}
    ListTileControlAffinity? controlAffinity,
  }) : super(
          key: key,
          leading: leading,
          title: title,
          subtitle: subtitle,
          onExpansionChanged: onExpansionChanged,
          children: children,
          trailing: trailing,
          initiallyExpanded: initiallyExpanded,
          maintainState: maintainState,
          tilePadding: tilePadding,
          expandedCrossAxisAlignment: expandedCrossAxisAlignment,
          expandedAlignment: expandedAlignment,
          childrenPadding: childrenPadding,
          backgroundColor: backgroundColor,
          collapsedBackgroundColor: collapsedBackgroundColor,
          textColor: textColor,
          collapsedTextColor: collapsedTextColor,
          iconColor: iconColor,
          collapsedIconColor: collapsedIconColor,
          shape: shape,
          collapsedShape: collapsedShape,
          clipBehavior: clipBehavior,
          controlAffinity: controlAffinity,
        ) {}
}
