// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:15:59.568608

library;

import 'package:flutter/src/foundation/key.dart';
import 'dart:core';
import 'package:flutter/src/services/mouse_cursor.dart';
import 'dart:ui';
import 'package:flutter/src/material/material_state.dart';
import 'package:flutter/src/material/theme_data.dart';
import 'package:flutter/src/widgets/focus_manager.dart';
import 'package:flutter/src/painting/borders.dart';

/// class Checkbox extends StatefulWidget
class CheckboxMate {
  /// Checkbox Checkbox({Key? key, required bool? value, bool tristate = false, required void Function(bool?)? onChanged, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty<Color?>? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty<Color?>? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, FocusNode? focusNode, bool autofocus = false, OutlinedBorder? shape, BorderSide? side, bool isError = false})
  CheckboxMate({
// param: {Key? key}
    Key? key,
// param: {required bool? value}
    required bool? value,
// param: {bool tristate = false}
    required bool tristate,
// param: {required void Function(bool?)? onChanged}
    required void Function(
      bool?, [
      bool?,
    ])?
        onChanged,
// param: {MouseCursor? mouseCursor}
    MouseCursor? mouseCursor,
// param: {Color? activeColor}
    Color? activeColor,
// param: {MaterialStateProperty<Color?>? fillColor}
    MaterialStateProperty<Color?>? fillColor,
// param: {Color? checkColor}
    Color? checkColor,
// param: {Color? focusColor}
    Color? focusColor,
// param: {Color? hoverColor}
    Color? hoverColor,
// param: {MaterialStateProperty<Color?>? overlayColor}
    MaterialStateProperty<Color?>? overlayColor,
// param: {double? splashRadius}
    double? splashRadius,
// param: {MaterialTapTargetSize? materialTapTargetSize}
    MaterialTapTargetSize? materialTapTargetSize,
// param: {VisualDensity? visualDensity}
    VisualDensity? visualDensity,
// param: {FocusNode? focusNode}
    FocusNode? focusNode,
// param: {bool autofocus = false}
    required bool autofocus,
// param: {OutlinedBorder? shape}
    OutlinedBorder? shape,
// param: {BorderSide? side}
    BorderSide? side,
// param: {bool isError = false}
    required bool isError,
  }) {}
}
