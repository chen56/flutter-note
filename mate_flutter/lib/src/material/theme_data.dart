// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:00.906903

library;

import 'package:flutter/src/material/theme_data.dart';
import 'dart:core';
import 'package:flutter/src/cupertino/theme.dart';
import 'package:flutter/src/material/input_decorator.dart';
import 'package:flutter/src/material/page_transitions_theme.dart';
import 'package:flutter/src/foundation/platform.dart';
import 'package:flutter/src/material/scrollbar_theme.dart';
import 'package:flutter/src/material/ink_well.dart';
import 'dart:ui';
import 'package:flutter/src/material/color_scheme.dart';
import 'package:flutter/src/widgets/icon_theme_data.dart';
import 'package:flutter/src/material/text_theme.dart';
import 'package:flutter/src/material/typography.dart';
import 'package:flutter/src/material/app_bar_theme.dart';
import 'package:flutter/src/material/badge_theme.dart';
import 'package:flutter/src/material/banner_theme.dart';
import 'package:flutter/src/material/bottom_app_bar_theme.dart';
import 'package:flutter/src/material/bottom_navigation_bar_theme.dart';
import 'package:flutter/src/material/bottom_sheet_theme.dart';
import 'package:flutter/src/material/button_bar_theme.dart';
import 'package:flutter/src/material/button_theme.dart';
import 'package:flutter/src/material/card_theme.dart';
import 'package:flutter/src/material/checkbox_theme.dart';
import 'package:flutter/src/material/chip_theme.dart';
import 'package:flutter/src/material/data_table_theme.dart';
import 'package:flutter/src/material/date_picker_theme.dart';
import 'package:flutter/src/material/dialog_theme.dart';
import 'package:flutter/src/material/divider_theme.dart';
import 'package:flutter/src/material/drawer_theme.dart';
import 'package:flutter/src/material/dropdown_menu_theme.dart';
import 'package:flutter/src/material/elevated_button_theme.dart';
import 'package:flutter/src/material/expansion_tile_theme.dart';
import 'package:flutter/src/material/filled_button_theme.dart';
import 'package:flutter/src/material/floating_action_button_theme.dart';
import 'package:flutter/src/material/icon_button_theme.dart';
import 'package:flutter/src/material/list_tile_theme.dart';
import 'package:flutter/src/material/menu_bar_theme.dart';
import 'package:flutter/src/material/menu_button_theme.dart';
import 'package:flutter/src/material/menu_theme.dart';
import 'package:flutter/src/material/navigation_bar_theme.dart';
import 'package:flutter/src/material/navigation_drawer_theme.dart';
import 'package:flutter/src/material/navigation_rail_theme.dart';
import 'package:flutter/src/material/outlined_button_theme.dart';
import 'package:flutter/src/material/popup_menu_theme.dart';
import 'package:flutter/src/material/progress_indicator_theme.dart';
import 'package:flutter/src/material/radio_theme.dart';
import 'package:flutter/src/material/segmented_button_theme.dart';
import 'package:flutter/src/material/slider_theme.dart';
import 'package:flutter/src/material/snack_bar_theme.dart';
import 'package:flutter/src/material/switch_theme.dart';
import 'package:flutter/src/material/tab_bar_theme.dart';
import 'package:flutter/src/material/text_button_theme.dart';
import 'package:flutter/src/material/text_selection_theme.dart';
import 'package:flutter/src/material/time_picker_theme.dart';
import 'package:flutter/src/material/toggle_buttons_theme.dart';
import 'package:flutter/src/material/tooltip_theme.dart';
import 'package:flutter/src/widgets/scroll_configuration.dart';
export 'package:flutter/services.dart' show Brightness;

/// abstract class ThemeExtension<T extends ThemeExtension<T>>
abstract class ThemeExtensionMate<T extends ThemeExtension<T>> {
  /// ThemeExtension<T> ThemeExtension()
  ThemeExtensionMate() {}
}

/// class ThemeData with Diagnosticable
class ThemeDataMate {
  /// ThemeData ThemeData.raw({required bool applyElevationOverlayColor, required NoDefaultCupertinoThemeData? cupertinoOverrideTheme, required Map<Object, ThemeExtension<dynamic>> extensions, required InputDecorationTheme inputDecorationTheme, required MaterialTapTargetSize materialTapTargetSize, required PageTransitionsTheme pageTransitionsTheme, required TargetPlatform platform, required ScrollbarThemeData scrollbarTheme, required InteractiveInkFeatureFactory splashFactory, required bool useMaterial3, required VisualDensity visualDensity, required Color canvasColor, required Color cardColor, required ColorScheme colorScheme, required Color dialogBackgroundColor, required Color disabledColor, required Color dividerColor, required Color focusColor, required Color highlightColor, required Color hintColor, required Color hoverColor, required Color indicatorColor, required Color primaryColor, required Color primaryColorDark, required Color primaryColorLight, required Color scaffoldBackgroundColor, required Color secondaryHeaderColor, required Color shadowColor, required Color splashColor, required Color unselectedWidgetColor, required IconThemeData iconTheme, required IconThemeData primaryIconTheme, required TextTheme primaryTextTheme, required TextTheme textTheme, required Typography typography, required AppBarTheme appBarTheme, required BadgeThemeData badgeTheme, required MaterialBannerThemeData bannerTheme, required BottomAppBarTheme bottomAppBarTheme, required BottomNavigationBarThemeData bottomNavigationBarTheme, required BottomSheetThemeData bottomSheetTheme, required ButtonBarThemeData buttonBarTheme, required ButtonThemeData buttonTheme, required CardTheme cardTheme, required CheckboxThemeData checkboxTheme, required ChipThemeData chipTheme, required DataTableThemeData dataTableTheme, required DatePickerThemeData datePickerTheme, required DialogTheme dialogTheme, required DividerThemeData dividerTheme, required DrawerThemeData drawerTheme, required DropdownMenuThemeData dropdownMenuTheme, required ElevatedButtonThemeData elevatedButtonTheme, required ExpansionTileThemeData expansionTileTheme, required FilledButtonThemeData filledButtonTheme, required FloatingActionButtonThemeData floatingActionButtonTheme, required IconButtonThemeData iconButtonTheme, required ListTileThemeData listTileTheme, required MenuBarThemeData menuBarTheme, required MenuButtonThemeData menuButtonTheme, required MenuThemeData menuTheme, required NavigationBarThemeData navigationBarTheme, required NavigationDrawerThemeData navigationDrawerTheme, required NavigationRailThemeData navigationRailTheme, required OutlinedButtonThemeData outlinedButtonTheme, required PopupMenuThemeData popupMenuTheme, required ProgressIndicatorThemeData progressIndicatorTheme, required RadioThemeData radioTheme, required SegmentedButtonThemeData segmentedButtonTheme, required SliderThemeData sliderTheme, required SnackBarThemeData snackBarTheme, required SwitchThemeData switchTheme, required TabBarTheme tabBarTheme, required TextButtonThemeData textButtonTheme, required TextSelectionThemeData textSelectionTheme, required TimePickerThemeData timePickerTheme, required ToggleButtonsThemeData toggleButtonsTheme, required TooltipThemeData tooltipTheme, Color? accentColor, Brightness? accentColorBrightness, bool? fixTextFieldOutlineLabel, Brightness? primaryColorBrightness, AndroidOverscrollIndicator? androidOverscrollIndicator, Color? toggleableActiveColor, Color? selectedRowColor, Color? errorColor, Color? backgroundColor, Color? bottomAppBarColor})
  ThemeDataMate.raw({
// param: {required bool applyElevationOverlayColor}
    required bool applyElevationOverlayColor,
// param: {required NoDefaultCupertinoThemeData? cupertinoOverrideTheme}
    required NoDefaultCupertinoThemeData? cupertinoOverrideTheme,
// param: {required Map<Object, ThemeExtension<dynamic>> extensions}
    required Map<Object, ThemeExtension<dynamic>> extensions,
// param: {required InputDecorationTheme inputDecorationTheme}
    required InputDecorationTheme inputDecorationTheme,
// param: {required MaterialTapTargetSize materialTapTargetSize}
    required MaterialTapTargetSize materialTapTargetSize,
// param: {required PageTransitionsTheme pageTransitionsTheme}
    required PageTransitionsTheme pageTransitionsTheme,
// param: {required TargetPlatform platform}
    required TargetPlatform platform,
// param: {required ScrollbarThemeData scrollbarTheme}
    required ScrollbarThemeData scrollbarTheme,
// param: {required InteractiveInkFeatureFactory splashFactory}
    required InteractiveInkFeatureFactory splashFactory,
// param: {required bool useMaterial3}
    required bool useMaterial3,
// param: {required VisualDensity visualDensity}
    required VisualDensity visualDensity,
// param: {required Color canvasColor}
    required Color canvasColor,
// param: {required Color cardColor}
    required Color cardColor,
// param: {required ColorScheme colorScheme}
    required ColorScheme colorScheme,
// param: {required Color dialogBackgroundColor}
    required Color dialogBackgroundColor,
// param: {required Color disabledColor}
    required Color disabledColor,
// param: {required Color dividerColor}
    required Color dividerColor,
// param: {required Color focusColor}
    required Color focusColor,
// param: {required Color highlightColor}
    required Color highlightColor,
// param: {required Color hintColor}
    required Color hintColor,
// param: {required Color hoverColor}
    required Color hoverColor,
// param: {required Color indicatorColor}
    required Color indicatorColor,
// param: {required Color primaryColor}
    required Color primaryColor,
// param: {required Color primaryColorDark}
    required Color primaryColorDark,
// param: {required Color primaryColorLight}
    required Color primaryColorLight,
// param: {required Color scaffoldBackgroundColor}
    required Color scaffoldBackgroundColor,
// param: {required Color secondaryHeaderColor}
    required Color secondaryHeaderColor,
// param: {required Color shadowColor}
    required Color shadowColor,
// param: {required Color splashColor}
    required Color splashColor,
// param: {required Color unselectedWidgetColor}
    required Color unselectedWidgetColor,
// param: {required IconThemeData iconTheme}
    required IconThemeData iconTheme,
// param: {required IconThemeData primaryIconTheme}
    required IconThemeData primaryIconTheme,
// param: {required TextTheme primaryTextTheme}
    required TextTheme primaryTextTheme,
// param: {required TextTheme textTheme}
    required TextTheme textTheme,
// param: {required Typography typography}
    required Typography typography,
// param: {required AppBarTheme appBarTheme}
    required AppBarTheme appBarTheme,
// param: {required BadgeThemeData badgeTheme}
    required BadgeThemeData badgeTheme,
// param: {required MaterialBannerThemeData bannerTheme}
    required MaterialBannerThemeData bannerTheme,
// param: {required BottomAppBarTheme bottomAppBarTheme}
    required BottomAppBarTheme bottomAppBarTheme,
// param: {required BottomNavigationBarThemeData bottomNavigationBarTheme}
    required BottomNavigationBarThemeData bottomNavigationBarTheme,
// param: {required BottomSheetThemeData bottomSheetTheme}
    required BottomSheetThemeData bottomSheetTheme,
// param: {required ButtonBarThemeData buttonBarTheme}
    required ButtonBarThemeData buttonBarTheme,
// param: {required ButtonThemeData buttonTheme}
    required ButtonThemeData buttonTheme,
// param: {required CardTheme cardTheme}
    required CardTheme cardTheme,
// param: {required CheckboxThemeData checkboxTheme}
    required CheckboxThemeData checkboxTheme,
// param: {required ChipThemeData chipTheme}
    required ChipThemeData chipTheme,
// param: {required DataTableThemeData dataTableTheme}
    required DataTableThemeData dataTableTheme,
// param: {required DatePickerThemeData datePickerTheme}
    required DatePickerThemeData datePickerTheme,
// param: {required DialogTheme dialogTheme}
    required DialogTheme dialogTheme,
// param: {required DividerThemeData dividerTheme}
    required DividerThemeData dividerTheme,
// param: {required DrawerThemeData drawerTheme}
    required DrawerThemeData drawerTheme,
// param: {required DropdownMenuThemeData dropdownMenuTheme}
    required DropdownMenuThemeData dropdownMenuTheme,
// param: {required ElevatedButtonThemeData elevatedButtonTheme}
    required ElevatedButtonThemeData elevatedButtonTheme,
// param: {required ExpansionTileThemeData expansionTileTheme}
    required ExpansionTileThemeData expansionTileTheme,
// param: {required FilledButtonThemeData filledButtonTheme}
    required FilledButtonThemeData filledButtonTheme,
// param: {required FloatingActionButtonThemeData floatingActionButtonTheme}
    required FloatingActionButtonThemeData floatingActionButtonTheme,
// param: {required IconButtonThemeData iconButtonTheme}
    required IconButtonThemeData iconButtonTheme,
// param: {required ListTileThemeData listTileTheme}
    required ListTileThemeData listTileTheme,
// param: {required MenuBarThemeData menuBarTheme}
    required MenuBarThemeData menuBarTheme,
// param: {required MenuButtonThemeData menuButtonTheme}
    required MenuButtonThemeData menuButtonTheme,
// param: {required MenuThemeData menuTheme}
    required MenuThemeData menuTheme,
// param: {required NavigationBarThemeData navigationBarTheme}
    required NavigationBarThemeData navigationBarTheme,
// param: {required NavigationDrawerThemeData navigationDrawerTheme}
    required NavigationDrawerThemeData navigationDrawerTheme,
// param: {required NavigationRailThemeData navigationRailTheme}
    required NavigationRailThemeData navigationRailTheme,
// param: {required OutlinedButtonThemeData outlinedButtonTheme}
    required OutlinedButtonThemeData outlinedButtonTheme,
// param: {required PopupMenuThemeData popupMenuTheme}
    required PopupMenuThemeData popupMenuTheme,
// param: {required ProgressIndicatorThemeData progressIndicatorTheme}
    required ProgressIndicatorThemeData progressIndicatorTheme,
// param: {required RadioThemeData radioTheme}
    required RadioThemeData radioTheme,
// param: {required SegmentedButtonThemeData segmentedButtonTheme}
    required SegmentedButtonThemeData segmentedButtonTheme,
// param: {required SliderThemeData sliderTheme}
    required SliderThemeData sliderTheme,
// param: {required SnackBarThemeData snackBarTheme}
    required SnackBarThemeData snackBarTheme,
// param: {required SwitchThemeData switchTheme}
    required SwitchThemeData switchTheme,
// param: {required TabBarTheme tabBarTheme}
    required TabBarTheme tabBarTheme,
// param: {required TextButtonThemeData textButtonTheme}
    required TextButtonThemeData textButtonTheme,
// param: {required TextSelectionThemeData textSelectionTheme}
    required TextSelectionThemeData textSelectionTheme,
// param: {required TimePickerThemeData timePickerTheme}
    required TimePickerThemeData timePickerTheme,
// param: {required ToggleButtonsThemeData toggleButtonsTheme}
    required ToggleButtonsThemeData toggleButtonsTheme,
// param: {required TooltipThemeData tooltipTheme}
    required TooltipThemeData tooltipTheme,
// param: {Color? accentColor}
    Color? accentColor,
// param: {Brightness? accentColorBrightness}
    Brightness? accentColorBrightness,
// param: {bool? fixTextFieldOutlineLabel}
    bool? fixTextFieldOutlineLabel,
// param: {Brightness? primaryColorBrightness}
    Brightness? primaryColorBrightness,
// param: {AndroidOverscrollIndicator? androidOverscrollIndicator}
    AndroidOverscrollIndicator? androidOverscrollIndicator,
// param: {Color? toggleableActiveColor}
    Color? toggleableActiveColor,
// param: {Color? selectedRowColor}
    Color? selectedRowColor,
// param: {Color? errorColor}
    Color? errorColor,
// param: {Color? backgroundColor}
    Color? backgroundColor,
// param: {Color? bottomAppBarColor}
    Color? bottomAppBarColor,
  }) {}
}

/// class MaterialBasedCupertinoThemeData extends CupertinoThemeData
class MaterialBasedCupertinoThemeDataMate {
  /// MaterialBasedCupertinoThemeData MaterialBasedCupertinoThemeData({required ThemeData materialTheme})
  MaterialBasedCupertinoThemeDataMate(
      {
// param: {required ThemeData materialTheme}
      required ThemeData materialTheme}) {}
}

/// class VisualDensity with Diagnosticable
class VisualDensityMate {
  /// VisualDensity VisualDensity({double horizontal = 0.0, double vertical = 0.0})
  VisualDensityMate({
// param: {double horizontal = 0.0}
    required double horizontal,
// param: {double vertical = 0.0}
    required double vertical,
  }) {}
}
