// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:00.248252

library;

import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'dart:core';
import 'package:flutter/src/material/data_table.dart';
import 'package:flutter/src/gestures/recognizer.dart';
import 'dart:ui';
import 'package:flutter/src/material/data_table_source.dart';
import 'package:flutter/src/widgets/scroll_controller.dart';

/// class PaginatedDataTable extends StatefulWidget
class PaginatedDataTableMate {
  /// PaginatedDataTable PaginatedDataTable({Key? key, Widget? header, List<Widget>? actions, required List<DataColumn> columns, int? sortColumnIndex, bool sortAscending = true, void Function(bool?)? onSelectAll, double dataRowHeight = kMinInteractiveDimension, double headingRowHeight = 56.0, double horizontalMargin = 24.0, double columnSpacing = 56.0, bool showCheckboxColumn = true, bool showFirstLastButtons = false, int? initialFirstRowIndex = 0, void Function(int)? onPageChanged, int rowsPerPage = defaultRowsPerPage, List<int> availableRowsPerPage = const <int>[defaultRowsPerPage, defaultRowsPerPage * 2, defaultRowsPerPage * 5, defaultRowsPerPage * 10], void Function(int?)? onRowsPerPageChanged, DragStartBehavior dragStartBehavior = DragStartBehavior.start, Color? arrowHeadColor, required DataTableSource source, double? checkboxHorizontalMargin, ScrollController? controller, bool? primary})
  PaginatedDataTableMate({
// param: {Key? key}
    Key? key,
// param: {Widget? header}
    Widget? header,
// param: {List<Widget>? actions}
    List<Widget>? actions,
// param: {required List<DataColumn> columns}
    required List<DataColumn> columns,
// param: {int? sortColumnIndex}
    int? sortColumnIndex,
// param: {bool sortAscending = true}
    required bool sortAscending,
// param: {void Function(bool?)? onSelectAll}
    void Function(
      bool?, [
      bool?,
    ])?
        onSelectAll,
// param: {double dataRowHeight = kMinInteractiveDimension}
    required double dataRowHeight,
// param: {double headingRowHeight = 56.0}
    required double headingRowHeight,
// param: {double horizontalMargin = 24.0}
    required double horizontalMargin,
// param: {double columnSpacing = 56.0}
    required double columnSpacing,
// param: {bool showCheckboxColumn = true}
    required bool showCheckboxColumn,
// param: {bool showFirstLastButtons = false}
    required bool showFirstLastButtons,
// param: {int? initialFirstRowIndex = 0}
    int? initialFirstRowIndex,
// param: {void Function(int)? onPageChanged}
    void Function(
      int, [
      int,
    ])?
        onPageChanged,
// param: {int rowsPerPage = defaultRowsPerPage}
    required int rowsPerPage,
// param: {List<int> availableRowsPerPage = const <int>[defaultRowsPerPage, defaultRowsPerPage * 2, defaultRowsPerPage * 5, defaultRowsPerPage * 10]}
    required List<int> availableRowsPerPage,
// param: {void Function(int?)? onRowsPerPageChanged}
    void Function(
      int?, [
      int?,
    ])?
        onRowsPerPageChanged,
// param: {DragStartBehavior dragStartBehavior = DragStartBehavior.start}
    required DragStartBehavior dragStartBehavior,
// param: {Color? arrowHeadColor}
    Color? arrowHeadColor,
// param: {required DataTableSource source}
    required DataTableSource source,
// param: {double? checkboxHorizontalMargin}
    double? checkboxHorizontalMargin,
// param: {ScrollController? controller}
    ScrollController? controller,
// param: {bool? primary}
    bool? primary,
  }) {}
}

/// class PaginatedDataTableState extends State<PaginatedDataTable>
class PaginatedDataTableStateMate {
  /// PaginatedDataTableState PaginatedDataTableState()
  PaginatedDataTableStateMate() {}
}
