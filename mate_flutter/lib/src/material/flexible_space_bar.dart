// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:15:59.965086

library;

import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'dart:core';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/material/flexible_space_bar.dart';

/// class FlexibleSpaceBar extends StatefulWidget
class FlexibleSpaceBarMate {
  /// FlexibleSpaceBar FlexibleSpaceBar({Key? key, Widget? title, Widget? background, bool? centerTitle, EdgeInsetsGeometry? titlePadding, CollapseMode collapseMode = CollapseMode.parallax, List<StretchMode> stretchModes = const <StretchMode>[StretchMode.zoomBackground], double expandedTitleScale = 1.5})
  FlexibleSpaceBarMate({
// param: {Key? key}
    Key? key,
// param: {Widget? title}
    Widget? title,
// param: {Widget? background}
    Widget? background,
// param: {bool? centerTitle}
    bool? centerTitle,
// param: {EdgeInsetsGeometry? titlePadding}
    EdgeInsetsGeometry? titlePadding,
// param: {CollapseMode collapseMode = CollapseMode.parallax}
    required CollapseMode collapseMode,
// param: {List<StretchMode> stretchModes = const <StretchMode>[StretchMode.zoomBackground]}
    required List<StretchMode> stretchModes,
// param: {double expandedTitleScale = 1.5}
    required double expandedTitleScale,
  }) {}
}

/// class FlexibleSpaceBarSettings extends InheritedWidget
class FlexibleSpaceBarSettingsMate {
  /// FlexibleSpaceBarSettings FlexibleSpaceBarSettings({Key? key, required double toolbarOpacity, required double minExtent, required double maxExtent, required double currentExtent, required Widget child, bool? isScrolledUnder})
  FlexibleSpaceBarSettingsMate({
// param: {Key? key}
    Key? key,
// param: {required double toolbarOpacity}
    required double toolbarOpacity,
// param: {required double minExtent}
    required double minExtent,
// param: {required double maxExtent}
    required double maxExtent,
// param: {required double currentExtent}
    required double currentExtent,
// param: {required Widget child}
    required Widget child,
// param: {bool? isScrolledUnder}
    bool? isScrolledUnder,
  }) {}
}
