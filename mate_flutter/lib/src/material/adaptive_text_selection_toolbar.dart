// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:15:59.402995

library;

import 'package:flutter/src/foundation/key.dart';
import 'dart:core';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/text_selection_toolbar_anchors.dart';
import 'package:flutter/src/widgets/context_menu_button_item.dart';
import 'package:flutter/src/widgets/text_selection.dart';
import 'package:flutter/src/widgets/editable_text.dart';
import 'package:flutter/src/rendering/selection.dart';
import 'package:flutter/src/widgets/selectable_region.dart';

/// class AdaptiveTextSelectionToolbar extends StatelessWidget
class AdaptiveTextSelectionToolbarMate {
  /// AdaptiveTextSelectionToolbar AdaptiveTextSelectionToolbar({Key? key, required List<Widget>? children, required TextSelectionToolbarAnchors anchors})
  AdaptiveTextSelectionToolbarMate({
// param: {Key? key}
    Key? key,
// param: {required List<Widget>? children}
    required List<Widget>? children,
// param: {required TextSelectionToolbarAnchors anchors}
    required TextSelectionToolbarAnchors anchors,
  }) {}

  /// AdaptiveTextSelectionToolbar AdaptiveTextSelectionToolbar.buttonItems({Key? key, required List<ContextMenuButtonItem>? buttonItems, required TextSelectionToolbarAnchors anchors})
  AdaptiveTextSelectionToolbarMate.buttonItems({
// param: {Key? key}
    Key? key,
// param: {required List<ContextMenuButtonItem>? buttonItems}
    required List<ContextMenuButtonItem>? buttonItems,
// param: {required TextSelectionToolbarAnchors anchors}
    required TextSelectionToolbarAnchors anchors,
  }) {}

  /// AdaptiveTextSelectionToolbar AdaptiveTextSelectionToolbar.editable({Key? key, required ClipboardStatus clipboardStatus, required void Function()? onCopy, required void Function()? onCut, required void Function()? onPaste, required void Function()? onSelectAll, required TextSelectionToolbarAnchors anchors})
  AdaptiveTextSelectionToolbarMate.editable({
// param: {Key? key}
    Key? key,
// param: {required ClipboardStatus clipboardStatus}
    required ClipboardStatus clipboardStatus,
// param: {required void Function()? onCopy}
    required void Function()? onCopy,
// param: {required void Function()? onCut}
    required void Function()? onCut,
// param: {required void Function()? onPaste}
    required void Function()? onPaste,
// param: {required void Function()? onSelectAll}
    required void Function()? onSelectAll,
// param: {required TextSelectionToolbarAnchors anchors}
    required TextSelectionToolbarAnchors anchors,
  }) {}

  /// AdaptiveTextSelectionToolbar AdaptiveTextSelectionToolbar.editableText({Key? key, required EditableTextState editableTextState})
  AdaptiveTextSelectionToolbarMate.editableText({
// param: {Key? key}
    Key? key,
// param: {required EditableTextState editableTextState}
    required EditableTextState editableTextState,
  }) {}

  /// AdaptiveTextSelectionToolbar AdaptiveTextSelectionToolbar.selectable({Key? key, required void Function() onCopy, required void Function() onSelectAll, required SelectionGeometry selectionGeometry, required TextSelectionToolbarAnchors anchors})
  AdaptiveTextSelectionToolbarMate.selectable({
// param: {Key? key}
    Key? key,
// param: {required void Function() onCopy}
    required void Function() onCopy,
// param: {required void Function() onSelectAll}
    required void Function() onSelectAll,
// param: {required SelectionGeometry selectionGeometry}
    required SelectionGeometry selectionGeometry,
// param: {required TextSelectionToolbarAnchors anchors}
    required TextSelectionToolbarAnchors anchors,
  }) {}

  /// AdaptiveTextSelectionToolbar AdaptiveTextSelectionToolbar.selectableRegion({Key? key, required SelectableRegionState selectableRegionState})
  AdaptiveTextSelectionToolbarMate.selectableRegion({
// param: {Key? key}
    Key? key,
// param: {required SelectableRegionState selectableRegionState}
    required SelectableRegionState selectableRegionState,
  }) {}
}
