// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-09 14:20:12.072286

library;

import 'package:flutter/src/material/segmented_button.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'dart:core';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/material/button_style.dart';

/// class ButtonSegment<T>
class ButtonSegmentMate<T> extends ButtonSegment<T> {
  /// ButtonSegment<T> ButtonSegment({required T value, Widget? icon, Widget? label, bool enabled = true})
  ButtonSegmentMate({
    /// param: {required T value}
    required T value,

    /// param: {Widget? icon}
    Widget? icon,

    /// param: {Widget? label}
    Widget? label,

    /// param: {bool enabled = true}
    required bool enabled,
  }) : super(
          value: value,
          icon: icon,
          label: label,
          enabled: enabled,
        ) {}
}

/// class SegmentedButton<T> extends StatelessWidget
class SegmentedButtonMate<T> extends SegmentedButton<T> {
  /// SegmentedButton<T> SegmentedButton({Key? key, required List<ButtonSegment<T>> segments, required Set<T> selected, void Function(Set<T>)? onSelectionChanged, bool multiSelectionEnabled = false, bool emptySelectionAllowed = false, ButtonStyle? style, bool showSelectedIcon = true, Widget? selectedIcon})
  SegmentedButtonMate({
    /// param: {Key? key}
    Key? key,

    /// param: {required List<ButtonSegment<T>> segments}
    required List<ButtonSegment<T>> segments,

    /// param: {required Set<T> selected}
    required Set<T> selected,

    /// param: {void Function(Set<T>)? onSelectionChanged}
    void Function(
      Set<T>, [
      Set<T>,
    ])?
        onSelectionChanged,

    /// param: {bool multiSelectionEnabled = false}
    required bool multiSelectionEnabled,

    /// param: {bool emptySelectionAllowed = false}
    required bool emptySelectionAllowed,

    /// param: {ButtonStyle? style}
    ButtonStyle? style,

    /// param: {bool showSelectedIcon = true}
    required bool showSelectedIcon,

    /// param: {Widget? selectedIcon}
    Widget? selectedIcon,
  }) : super(
          key: key,
          segments: segments,
          selected: selected,
          onSelectionChanged: onSelectionChanged,
          multiSelectionEnabled: multiSelectionEnabled,
          emptySelectionAllowed: emptySelectionAllowed,
          style: style,
          showSelectedIcon: showSelectedIcon,
          selectedIcon: selectedIcon,
        ) {}
}
