// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-09 14:20:12.020956

library;

import 'package:flutter/src/material/navigation_rail.dart';
import 'package:flutter/src/foundation/key.dart';
import 'dart:ui';
import 'dart:core';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/foundation/basic_types.dart';
import 'package:flutter/src/painting/text_style.dart';
import 'package:flutter/src/widgets/icon_theme_data.dart';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/painting/edge_insets.dart';

/// class NavigationRail extends StatefulWidget
class NavigationRailMate extends NavigationRail {
  /// NavigationRail NavigationRail({Key? key, Color? backgroundColor, bool extended = false, Widget? leading, Widget? trailing, required List<NavigationRailDestination> destinations, required int? selectedIndex, void Function(int)? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape})
  NavigationRailMate({
    /// param: {Key? key}
    Key? key,

    /// param: {Color? backgroundColor}
    Color? backgroundColor,

    /// param: {bool extended = false}
    required bool extended,

    /// param: {Widget? leading}
    Widget? leading,

    /// param: {Widget? trailing}
    Widget? trailing,

    /// param: {required List<NavigationRailDestination> destinations}
    required List<NavigationRailDestination> destinations,

    /// param: {required int? selectedIndex}
    required int? selectedIndex,

    /// param: {void Function(int)? onDestinationSelected}
    ValueChanged<int>? onDestinationSelected,

    /// param: {double? elevation}
    double? elevation,

    /// param: {double? groupAlignment}
    double? groupAlignment,

    /// param: {NavigationRailLabelType? labelType}
    NavigationRailLabelType? labelType,

    /// param: {TextStyle? unselectedLabelTextStyle}
    TextStyle? unselectedLabelTextStyle,

    /// param: {TextStyle? selectedLabelTextStyle}
    TextStyle? selectedLabelTextStyle,

    /// param: {IconThemeData? unselectedIconTheme}
    IconThemeData? unselectedIconTheme,

    /// param: {IconThemeData? selectedIconTheme}
    IconThemeData? selectedIconTheme,

    /// param: {double? minWidth}
    double? minWidth,

    /// param: {double? minExtendedWidth}
    double? minExtendedWidth,

    /// param: {bool? useIndicator}
    bool? useIndicator,

    /// param: {Color? indicatorColor}
    Color? indicatorColor,

    /// param: {ShapeBorder? indicatorShape}
    ShapeBorder? indicatorShape,
  }) : super(
          key: key,
          backgroundColor: backgroundColor,
          extended: extended,
          leading: leading,
          trailing: trailing,
          destinations: destinations,
          selectedIndex: selectedIndex,
          onDestinationSelected: onDestinationSelected,
          elevation: elevation,
          groupAlignment: groupAlignment,
          labelType: labelType,
          unselectedLabelTextStyle: unselectedLabelTextStyle,
          selectedLabelTextStyle: selectedLabelTextStyle,
          unselectedIconTheme: unselectedIconTheme,
          selectedIconTheme: selectedIconTheme,
          minWidth: minWidth,
          minExtendedWidth: minExtendedWidth,
          useIndicator: useIndicator,
          indicatorColor: indicatorColor,
          indicatorShape: indicatorShape,
        ) {}
}

/// class NavigationRailDestination
class NavigationRailDestinationMate extends NavigationRailDestination {
  /// NavigationRailDestination NavigationRailDestination({required Widget icon, Widget? selectedIcon, Color? indicatorColor, ShapeBorder? indicatorShape, required Widget label, EdgeInsetsGeometry? padding})
  NavigationRailDestinationMate({
    /// param: {required Widget icon}
    required Widget icon,

    /// param: {Widget? selectedIcon}
    Widget? selectedIcon,

    /// param: {Color? indicatorColor}
    Color? indicatorColor,

    /// param: {ShapeBorder? indicatorShape}
    ShapeBorder? indicatorShape,

    /// param: {required Widget label}
    required Widget label,

    /// param: {EdgeInsetsGeometry? padding}
    EdgeInsetsGeometry? padding,
  }) : super(
          icon: icon,
          selectedIcon: selectedIcon,
          indicatorColor: indicatorColor,
          indicatorShape: indicatorShape,
          label: label,
          padding: padding,
        ) {}
}
