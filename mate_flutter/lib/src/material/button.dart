// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:15:59.506425

library;

import 'package:flutter/src/foundation/key.dart';
import 'dart:core';
import 'package:flutter/src/services/mouse_cursor.dart';
import 'package:flutter/src/painting/text_style.dart';
import 'dart:ui';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/material/theme_data.dart';
import 'package:flutter/src/rendering/box.dart';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/widgets/focus_manager.dart';
import 'package:flutter/src/widgets/framework.dart';

/// class RawMaterialButton extends StatefulWidget
class RawMaterialButtonMate {
  /// RawMaterialButton RawMaterialButton({Key? key, required void Function()? onPressed, void Function()? onLongPress, void Function(bool)? onHighlightChanged, MouseCursor? mouseCursor, TextStyle? textStyle, Color? fillColor, Color? focusColor, Color? hoverColor, Color? highlightColor, Color? splashColor, double elevation = 2.0, double focusElevation = 4.0, double hoverElevation = 4.0, double highlightElevation = 8.0, double disabledElevation = 0.0, EdgeInsetsGeometry padding = EdgeInsets.zero, VisualDensity visualDensity = VisualDensity.standard, BoxConstraints constraints = const BoxConstraints(minWidth: 88.0, minHeight: 36.0), ShapeBorder shape = const RoundedRectangleBorder(), Duration animationDuration = kThemeChangeDuration, Clip clipBehavior = Clip.none, FocusNode? focusNode, bool autofocus = false, MaterialTapTargetSize? materialTapTargetSize, Widget? child, bool enableFeedback = true})
  RawMaterialButtonMate({
// param: {Key? key}
    Key? key,
// param: {required void Function()? onPressed}
    required void Function()? onPressed,
// param: {void Function()? onLongPress}
    void Function()? onLongPress,
// param: {void Function(bool)? onHighlightChanged}
    void Function(
      bool, [
      bool,
    ])?
        onHighlightChanged,
// param: {MouseCursor? mouseCursor}
    MouseCursor? mouseCursor,
// param: {TextStyle? textStyle}
    TextStyle? textStyle,
// param: {Color? fillColor}
    Color? fillColor,
// param: {Color? focusColor}
    Color? focusColor,
// param: {Color? hoverColor}
    Color? hoverColor,
// param: {Color? highlightColor}
    Color? highlightColor,
// param: {Color? splashColor}
    Color? splashColor,
// param: {double elevation = 2.0}
    required double elevation,
// param: {double focusElevation = 4.0}
    required double focusElevation,
// param: {double hoverElevation = 4.0}
    required double hoverElevation,
// param: {double highlightElevation = 8.0}
    required double highlightElevation,
// param: {double disabledElevation = 0.0}
    required double disabledElevation,
// param: {EdgeInsetsGeometry padding = EdgeInsets.zero}
    required EdgeInsetsGeometry padding,
// param: {VisualDensity visualDensity = VisualDensity.standard}
    required VisualDensity visualDensity,
// param: {BoxConstraints constraints = const BoxConstraints(minWidth: 88.0, minHeight: 36.0)}
    required BoxConstraints constraints,
// param: {ShapeBorder shape = const RoundedRectangleBorder()}
    required ShapeBorder shape,
// param: {Duration animationDuration = kThemeChangeDuration}
    required Duration animationDuration,
// param: {Clip clipBehavior = Clip.none}
    required Clip clipBehavior,
// param: {FocusNode? focusNode}
    FocusNode? focusNode,
// param: {bool autofocus = false}
    required bool autofocus,
// param: {MaterialTapTargetSize? materialTapTargetSize}
    MaterialTapTargetSize? materialTapTargetSize,
// param: {Widget? child}
    Widget? child,
// param: {bool enableFeedback = true}
    required bool enableFeedback,
  }) {}
}
