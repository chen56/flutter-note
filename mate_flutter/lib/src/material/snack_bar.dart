// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-09 14:20:12.088951

library;

import 'package:flutter/src/material/snack_bar.dart';
import 'package:flutter/src/foundation/key.dart';
import 'dart:ui';
import 'dart:core';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/material/snack_bar_theme.dart';
import 'package:flutter/src/animation/animation.dart';
import 'package:flutter/src/widgets/dismissible.dart';

/// class SnackBarAction extends StatefulWidget
class SnackBarActionMate extends SnackBarAction {
  /// SnackBarAction SnackBarAction({Key? key, Color? textColor, Color? disabledTextColor, required String label, required void Function() onPressed})
  SnackBarActionMate({
    /// param: {Key? key}
    Key? key,

    /// param: {Color? textColor}
    Color? textColor,

    /// param: {Color? disabledTextColor}
    Color? disabledTextColor,

    /// param: {required String label}
    required String label,

    /// param: {required void Function() onPressed}
    required VoidCallback onPressed,
  }) : super(
          key: key,
          textColor: textColor,
          disabledTextColor: disabledTextColor,
          label: label,
          onPressed: onPressed,
        ) {}
}

/// class SnackBar extends StatefulWidget
class SnackBarMate extends SnackBar {
  /// SnackBar SnackBar({Key? key, required Widget content, Color? backgroundColor, double? elevation, EdgeInsetsGeometry? margin, EdgeInsetsGeometry? padding, double? width, ShapeBorder? shape, SnackBarBehavior? behavior, SnackBarAction? action, bool? showCloseIcon, Color? closeIconColor, Duration duration = _snackBarDisplayDuration, Animation<double>? animation, void Function()? onVisible, DismissDirection dismissDirection = DismissDirection.down, Clip clipBehavior = Clip.hardEdge})
  SnackBarMate({
    /// param: {Key? key}
    Key? key,

    /// param: {required Widget content}
    required Widget content,

    /// param: {Color? backgroundColor}
    Color? backgroundColor,

    /// param: {double? elevation}
    double? elevation,

    /// param: {EdgeInsetsGeometry? margin}
    EdgeInsetsGeometry? margin,

    /// param: {EdgeInsetsGeometry? padding}
    EdgeInsetsGeometry? padding,

    /// param: {double? width}
    double? width,

    /// param: {ShapeBorder? shape}
    ShapeBorder? shape,

    /// param: {SnackBarBehavior? behavior}
    SnackBarBehavior? behavior,

    /// param: {SnackBarAction? action}
    SnackBarAction? action,

    /// param: {bool? showCloseIcon}
    bool? showCloseIcon,

    /// param: {Color? closeIconColor}
    Color? closeIconColor,

    /// param: {Duration duration = _snackBarDisplayDuration}
    required Duration duration,

    /// param: {Animation<double>? animation}
    Animation<double>? animation,

    /// param: {void Function()? onVisible}
    VoidCallback? onVisible,

    /// param: {DismissDirection dismissDirection = DismissDirection.down}
    required DismissDirection dismissDirection,

    /// param: {Clip clipBehavior = Clip.hardEdge}
    required Clip clipBehavior,
  }) : super(
          key: key,
          content: content,
          backgroundColor: backgroundColor,
          elevation: elevation,
          margin: margin,
          padding: padding,
          width: width,
          shape: shape,
          behavior: behavior,
          action: action,
          showCloseIcon: showCloseIcon,
          closeIconColor: closeIconColor,
          duration: duration,
          animation: animation,
          onVisible: onVisible,
          dismissDirection: dismissDirection,
          clipBehavior: clipBehavior,
        ) {}
}
