// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-11 00:36:16.014498

import 'package:flutter/src/material/choice_chip.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/painting/text_style.dart';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/foundation/basic_types.dart';
import 'dart:core';
import 'dart:ui';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/widgets/focus_manager.dart';
import 'package:flutter/src/material/theme_data.dart';
import 'package:flutter/src/widgets/icon_theme_data.dart';

/// class ChoiceChip extends StatelessWidget implements ChipAttributes, SelectableChipAttributes, DisabledChipAttributes
class ChoiceChipMate extends ChoiceChip {
  /// ChoiceChip ChoiceChip({Key? key, Widget? avatar, required Widget label, TextStyle? labelStyle, EdgeInsetsGeometry? labelPadding, void Function(bool)? onSelected, double? pressElevation, required bool selected, Color? selectedColor, Color? disabledColor, String? tooltip, BorderSide? side, OutlinedBorder? shape, Clip clipBehavior = Clip.none, FocusNode? focusNode, bool autofocus = false, Color? backgroundColor, EdgeInsetsGeometry? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, ShapeBorder avatarBorder = const CircleBorder()})
  ChoiceChipMate({
    /// param: {Key? key}
    Key? key,

    /// param: {Widget? avatar}
    Widget? avatar,

    /// param: {required Widget label}
    required Widget label,

    /// param: {TextStyle? labelStyle}
    TextStyle? labelStyle,

    /// param: {EdgeInsetsGeometry? labelPadding}
    EdgeInsetsGeometry? labelPadding,

    /// param: {void Function(bool)? onSelected}
    ValueChanged<bool>? onSelected,

    /// param: {double? pressElevation}
    double? pressElevation,

    /// param: {required bool selected}
    required bool selected,

    /// param: {Color? selectedColor}
    Color? selectedColor,

    /// param: {Color? disabledColor}
    Color? disabledColor,

    /// param: {String? tooltip}
    String? tooltip,

    /// param: {BorderSide? side}
    BorderSide? side,

    /// param: {OutlinedBorder? shape}
    OutlinedBorder? shape,

    /// param: {Clip clipBehavior = Clip.none}
    required Clip clipBehavior,

    /// param: {FocusNode? focusNode}
    FocusNode? focusNode,

    /// param: {bool autofocus = false}
    required bool autofocus,

    /// param: {Color? backgroundColor}
    Color? backgroundColor,

    /// param: {EdgeInsetsGeometry? padding}
    EdgeInsetsGeometry? padding,

    /// param: {VisualDensity? visualDensity}
    VisualDensity? visualDensity,

    /// param: {MaterialTapTargetSize? materialTapTargetSize}
    MaterialTapTargetSize? materialTapTargetSize,

    /// param: {double? elevation}
    double? elevation,

    /// param: {Color? shadowColor}
    Color? shadowColor,

    /// param: {Color? surfaceTintColor}
    Color? surfaceTintColor,

    /// param: {IconThemeData? iconTheme}
    IconThemeData? iconTheme,

    /// param: {Color? selectedShadowColor}
    Color? selectedShadowColor,

    /// param: {ShapeBorder avatarBorder = const CircleBorder()}
    required ShapeBorder avatarBorder,
  }) : super(
          key: key,
          avatar: avatar,
          label: label,
          labelStyle: labelStyle,
          labelPadding: labelPadding,
          onSelected: onSelected,
          pressElevation: pressElevation,
          selected: selected,
          selectedColor: selectedColor,
          disabledColor: disabledColor,
          tooltip: tooltip,
          side: side,
          shape: shape,
          clipBehavior: clipBehavior,
          focusNode: focusNode,
          autofocus: autofocus,
          backgroundColor: backgroundColor,
          padding: padding,
          visualDensity: visualDensity,
          materialTapTargetSize: materialTapTargetSize,
          elevation: elevation,
          shadowColor: shadowColor,
          surfaceTintColor: surfaceTintColor,
          iconTheme: iconTheme,
          selectedShadowColor: selectedShadowColor,
          avatarBorder: avatarBorder,
        ) {}
}
