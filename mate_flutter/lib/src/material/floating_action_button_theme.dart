// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-11 00:36:16.156038

import 'package:flutter/src/material/floating_action_button_theme.dart';
import 'dart:ui';
import 'dart:core';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/rendering/box.dart';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/painting/text_style.dart';
import 'package:flutter/src/material/material_state.dart';
import 'package:flutter/src/services/mouse_cursor.dart';

/// class FloatingActionButtonThemeData with Diagnosticable
class FloatingActionButtonThemeDataMate extends FloatingActionButtonThemeData {
  /// FloatingActionButtonThemeData FloatingActionButtonThemeData({Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? disabledElevation, double? highlightElevation, ShapeBorder? shape, bool? enableFeedback, double? iconSize, BoxConstraints? sizeConstraints, BoxConstraints? smallSizeConstraints, BoxConstraints? largeSizeConstraints, BoxConstraints? extendedSizeConstraints, double? extendedIconLabelSpacing, EdgeInsetsGeometry? extendedPadding, TextStyle? extendedTextStyle, MaterialStateProperty<MouseCursor?>? mouseCursor})
  FloatingActionButtonThemeDataMate({
    /// param: {Color? foregroundColor}
    Color? foregroundColor,

    /// param: {Color? backgroundColor}
    Color? backgroundColor,

    /// param: {Color? focusColor}
    Color? focusColor,

    /// param: {Color? hoverColor}
    Color? hoverColor,

    /// param: {Color? splashColor}
    Color? splashColor,

    /// param: {double? elevation}
    double? elevation,

    /// param: {double? focusElevation}
    double? focusElevation,

    /// param: {double? hoverElevation}
    double? hoverElevation,

    /// param: {double? disabledElevation}
    double? disabledElevation,

    /// param: {double? highlightElevation}
    double? highlightElevation,

    /// param: {ShapeBorder? shape}
    ShapeBorder? shape,

    /// param: {bool? enableFeedback}
    bool? enableFeedback,

    /// param: {double? iconSize}
    double? iconSize,

    /// param: {BoxConstraints? sizeConstraints}
    BoxConstraints? sizeConstraints,

    /// param: {BoxConstraints? smallSizeConstraints}
    BoxConstraints? smallSizeConstraints,

    /// param: {BoxConstraints? largeSizeConstraints}
    BoxConstraints? largeSizeConstraints,

    /// param: {BoxConstraints? extendedSizeConstraints}
    BoxConstraints? extendedSizeConstraints,

    /// param: {double? extendedIconLabelSpacing}
    double? extendedIconLabelSpacing,

    /// param: {EdgeInsetsGeometry? extendedPadding}
    EdgeInsetsGeometry? extendedPadding,

    /// param: {TextStyle? extendedTextStyle}
    TextStyle? extendedTextStyle,

    /// param: {MaterialStateProperty<MouseCursor?>? mouseCursor}
    MaterialStateProperty<MouseCursor?>? mouseCursor,
  }) : super(
          foregroundColor: foregroundColor,
          backgroundColor: backgroundColor,
          focusColor: focusColor,
          hoverColor: hoverColor,
          splashColor: splashColor,
          elevation: elevation,
          focusElevation: focusElevation,
          hoverElevation: hoverElevation,
          disabledElevation: disabledElevation,
          highlightElevation: highlightElevation,
          shape: shape,
          enableFeedback: enableFeedback,
          iconSize: iconSize,
          sizeConstraints: sizeConstraints,
          smallSizeConstraints: smallSizeConstraints,
          largeSizeConstraints: largeSizeConstraints,
          extendedSizeConstraints: extendedSizeConstraints,
          extendedIconLabelSpacing: extendedIconLabelSpacing,
          extendedPadding: extendedPadding,
          extendedTextStyle: extendedTextStyle,
          mouseCursor: mouseCursor,
        ) {}
}
