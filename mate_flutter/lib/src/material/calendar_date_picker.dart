// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:15:59.547151

library;

import 'package:flutter/src/foundation/key.dart';
import 'dart:core';
import 'package:flutter/src/material/date.dart';
import 'package:flutter/src/gestures/recognizer.dart';

/// class CalendarDatePicker extends StatefulWidget
class CalendarDatePickerMate {
  /// CalendarDatePicker CalendarDatePicker({Key? key, required DateTime initialDate, required DateTime firstDate, required DateTime lastDate, DateTime? currentDate, required void Function(DateTime) onDateChanged, void Function(DateTime)? onDisplayedMonthChanged, DatePickerMode initialCalendarMode = DatePickerMode.day, bool Function(DateTime)? selectableDayPredicate})
  CalendarDatePickerMate({
// param: {Key? key}
    Key? key,
// param: {required DateTime initialDate}
    required DateTime initialDate,
// param: {required DateTime firstDate}
    required DateTime firstDate,
// param: {required DateTime lastDate}
    required DateTime lastDate,
// param: {DateTime? currentDate}
    DateTime? currentDate,
// param: {required void Function(DateTime) onDateChanged}
    required void Function(
      DateTime, [
      DateTime,
    ])
        onDateChanged,
// param: {void Function(DateTime)? onDisplayedMonthChanged}
    void Function(
      DateTime, [
      DateTime,
    ])?
        onDisplayedMonthChanged,
// param: {DatePickerMode initialCalendarMode = DatePickerMode.day}
    required DatePickerMode initialCalendarMode,
// param: {bool Function(DateTime)? selectableDayPredicate}
    bool Function(
      DateTime, [
      DateTime,
    ])?
        selectableDayPredicate,
  }) {}
}

/// class YearPicker extends StatefulWidget
class YearPickerMate {
  /// YearPicker YearPicker({Key? key, DateTime? currentDate, required DateTime firstDate, required DateTime lastDate, DateTime? initialDate, required DateTime selectedDate, required void Function(DateTime) onChanged, DragStartBehavior dragStartBehavior = DragStartBehavior.start})
  YearPickerMate({
// param: {Key? key}
    Key? key,
// param: {DateTime? currentDate}
    DateTime? currentDate,
// param: {required DateTime firstDate}
    required DateTime firstDate,
// param: {required DateTime lastDate}
    required DateTime lastDate,
// param: {DateTime? initialDate}
    DateTime? initialDate,
// param: {required DateTime selectedDate}
    required DateTime selectedDate,
// param: {required void Function(DateTime) onChanged}
    required void Function(
      DateTime, [
      DateTime,
    ])
        onChanged,
// param: {DragStartBehavior dragStartBehavior = DragStartBehavior.start}
    required DragStartBehavior dragStartBehavior,
  }) {}
}
