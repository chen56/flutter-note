// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-11 00:36:14.575288

import 'package:flutter/src/gestures/drag_details.dart';
import 'dart:ui';
import 'dart:core';
import 'package:flutter/src/gestures/velocity_tracker.dart';
export 'dart:ui' show Offset, PointerDeviceKind;
export 'velocity_tracker.dart' show Velocity;

/// class DragDownDetails
class DragDownDetailsMate extends DragDownDetails {
  /// DragDownDetails DragDownDetails({Offset globalPosition = Offset.zero, Offset? localPosition})
  DragDownDetailsMate({
    /// param: {Offset globalPosition = Offset.zero}
    required Offset globalPosition,

    /// param: {Offset? localPosition}
    Offset? localPosition,
  }) : super(
          globalPosition: globalPosition,
          localPosition: localPosition,
        ) {}
}

/// class DragStartDetails
class DragStartDetailsMate extends DragStartDetails {
  /// DragStartDetails DragStartDetails({Duration? sourceTimeStamp, Offset globalPosition = Offset.zero, Offset? localPosition, PointerDeviceKind? kind})
  DragStartDetailsMate({
    /// param: {Duration? sourceTimeStamp}
    Duration? sourceTimeStamp,

    /// param: {Offset globalPosition = Offset.zero}
    required Offset globalPosition,

    /// param: {Offset? localPosition}
    Offset? localPosition,

    /// param: {PointerDeviceKind? kind}
    PointerDeviceKind? kind,
  }) : super(
          sourceTimeStamp: sourceTimeStamp,
          globalPosition: globalPosition,
          localPosition: localPosition,
          kind: kind,
        ) {}
}

/// class DragUpdateDetails
class DragUpdateDetailsMate extends DragUpdateDetails {
  /// DragUpdateDetails DragUpdateDetails({Duration? sourceTimeStamp, Offset delta = Offset.zero, double? primaryDelta, required Offset globalPosition, Offset? localPosition})
  DragUpdateDetailsMate({
    /// param: {Duration? sourceTimeStamp}
    Duration? sourceTimeStamp,

    /// param: {Offset delta = Offset.zero}
    required Offset delta,

    /// param: {double? primaryDelta}
    double? primaryDelta,

    /// param: {required Offset globalPosition}
    required Offset globalPosition,

    /// param: {Offset? localPosition}
    Offset? localPosition,
  }) : super(
          sourceTimeStamp: sourceTimeStamp,
          delta: delta,
          primaryDelta: primaryDelta,
          globalPosition: globalPosition,
          localPosition: localPosition,
        ) {}
}

/// class DragEndDetails
class DragEndDetailsMate extends DragEndDetails {
  /// DragEndDetails DragEndDetails({Velocity velocity = Velocity.zero, double? primaryVelocity})
  DragEndDetailsMate({
    /// param: {Velocity velocity = Velocity.zero}
    required Velocity velocity,

    /// param: {double? primaryVelocity}
    double? primaryVelocity,
  }) : super(
          velocity: velocity,
          primaryVelocity: primaryVelocity,
        ) {}
}
