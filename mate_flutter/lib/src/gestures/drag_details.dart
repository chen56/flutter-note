// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:00.744463

library;

import 'dart:ui';
import 'dart:core';
import 'package:flutter/src/gestures/velocity_tracker.dart';
export 'dart:ui' show Offset, PointerDeviceKind;
export 'velocity_tracker.dart' show Velocity;

/// class DragDownDetails
class DragDownDetailsMate {
  /// DragDownDetails DragDownDetails({Offset globalPosition = Offset.zero, Offset? localPosition})
  DragDownDetailsMate({
// param: {Offset globalPosition = Offset.zero}
    required Offset globalPosition,
// param: {Offset? localPosition}
    Offset? localPosition,
  }) {}
}

/// class DragStartDetails
class DragStartDetailsMate {
  /// DragStartDetails DragStartDetails({Duration? sourceTimeStamp, Offset globalPosition = Offset.zero, Offset? localPosition, PointerDeviceKind? kind})
  DragStartDetailsMate({
// param: {Duration? sourceTimeStamp}
    Duration? sourceTimeStamp,
// param: {Offset globalPosition = Offset.zero}
    required Offset globalPosition,
// param: {Offset? localPosition}
    Offset? localPosition,
// param: {PointerDeviceKind? kind}
    PointerDeviceKind? kind,
  }) {}
}

/// class DragUpdateDetails
class DragUpdateDetailsMate {
  /// DragUpdateDetails DragUpdateDetails({Duration? sourceTimeStamp, Offset delta = Offset.zero, double? primaryDelta, required Offset globalPosition, Offset? localPosition})
  DragUpdateDetailsMate({
// param: {Duration? sourceTimeStamp}
    Duration? sourceTimeStamp,
// param: {Offset delta = Offset.zero}
    required Offset delta,
// param: {double? primaryDelta}
    double? primaryDelta,
// param: {required Offset globalPosition}
    required Offset globalPosition,
// param: {Offset? localPosition}
    Offset? localPosition,
  }) {}
}

/// class DragEndDetails
class DragEndDetailsMate {
  /// DragEndDetails DragEndDetails({Velocity velocity = Velocity.zero, double? primaryVelocity})
  DragEndDetailsMate({
// param: {Velocity velocity = Velocity.zero}
    required Velocity velocity,
// param: {double? primaryVelocity}
    double? primaryVelocity,
  }) {}
}
