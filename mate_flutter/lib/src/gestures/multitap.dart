// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:00.785165

library;

import 'dart:core';
import 'dart:ui';
export 'dart:ui' show Offset, PointerDeviceKind;
export 'events.dart' show PointerDownEvent;
export 'tap.dart' show GestureTapCancelCallback, GestureTapDownCallback, TapDownDetails, TapUpDetails;

/// class DoubleTapGestureRecognizer extends GestureRecognizer
class DoubleTapGestureRecognizerMate {
  /// DoubleTapGestureRecognizer DoubleTapGestureRecognizer({Object? debugOwner, Set<PointerDeviceKind>? supportedDevices, bool Function(int)? allowedButtonsFilter = _defaultButtonAcceptBehavior})
  DoubleTapGestureRecognizerMate({
// param: {Object? debugOwner}
    Object? debugOwner,
// param: {Set<PointerDeviceKind>? supportedDevices}
    Set<PointerDeviceKind>? supportedDevices,
// param: {bool Function(int)? allowedButtonsFilter = _defaultButtonAcceptBehavior}
    bool Function(
      int, [
      int,
    ])?
        allowedButtonsFilter,
  }) {}
}

/// class MultiTapGestureRecognizer extends GestureRecognizer
class MultiTapGestureRecognizerMate {
  /// MultiTapGestureRecognizer MultiTapGestureRecognizer({Duration longTapDelay = Duration.zero, Object? debugOwner, Set<PointerDeviceKind>? supportedDevices, bool Function(int)? allowedButtonsFilter})
  MultiTapGestureRecognizerMate({
// param: {Duration longTapDelay = Duration.zero}
    required Duration longTapDelay,
// param: {Object? debugOwner}
    Object? debugOwner,
// param: {Set<PointerDeviceKind>? supportedDevices}
    Set<PointerDeviceKind>? supportedDevices,
// param: {bool Function(int)? allowedButtonsFilter}
    bool Function(
      int, [
      int,
    ])?
        allowedButtonsFilter,
  }) {}
}

/// class SerialTapDownDetails
class SerialTapDownDetailsMate {
  /// SerialTapDownDetails SerialTapDownDetails({Offset globalPosition = Offset.zero, Offset? localPosition, required PointerDeviceKind kind, int buttons = 0, int count = 1})
  SerialTapDownDetailsMate({
// param: {Offset globalPosition = Offset.zero}
    required Offset globalPosition,
// param: {Offset? localPosition}
    Offset? localPosition,
// param: {required PointerDeviceKind kind}
    required PointerDeviceKind kind,
// param: {int buttons = 0}
    required int buttons,
// param: {int count = 1}
    required int count,
  }) {}
}

/// class SerialTapCancelDetails
class SerialTapCancelDetailsMate {
  /// SerialTapCancelDetails SerialTapCancelDetails({int count = 1})
  SerialTapCancelDetailsMate(
      {
// param: {int count = 1}
      required int count}) {}
}

/// class SerialTapUpDetails
class SerialTapUpDetailsMate {
  /// SerialTapUpDetails SerialTapUpDetails({Offset globalPosition = Offset.zero, Offset? localPosition, PointerDeviceKind? kind, int count = 1})
  SerialTapUpDetailsMate({
// param: {Offset globalPosition = Offset.zero}
    required Offset globalPosition,
// param: {Offset? localPosition}
    Offset? localPosition,
// param: {PointerDeviceKind? kind}
    PointerDeviceKind? kind,
// param: {int count = 1}
    required int count,
  }) {}
}

/// class SerialTapGestureRecognizer extends GestureRecognizer
class SerialTapGestureRecognizerMate {
  /// SerialTapGestureRecognizer SerialTapGestureRecognizer({Object? debugOwner, Set<PointerDeviceKind>? supportedDevices, bool Function(int)? allowedButtonsFilter})
  SerialTapGestureRecognizerMate({
// param: {Object? debugOwner}
    Object? debugOwner,
// param: {Set<PointerDeviceKind>? supportedDevices}
    Set<PointerDeviceKind>? supportedDevices,
// param: {bool Function(int)? allowedButtonsFilter}
    bool Function(
      int, [
      int,
    ])?
        allowedButtonsFilter,
  }) {}
}
