// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:00.688732

library;

import 'dart:core';
import 'package:flutter/src/foundation/diagnostics.dart';
import 'package:flutter/src/gestures/events.dart';
import 'package:flutter/src/gestures/hit_test.dart';
export 'dart:ui' show Offset;
export 'package:flutter/foundation.dart' show DiagnosticsNode, InformationCollector;
export 'arena.dart' show GestureArenaManager;
export 'events.dart' show PointerEvent;
export 'hit_test.dart' show HitTestEntry, HitTestResult, HitTestTarget;
export 'pointer_router.dart' show PointerRouter;
export 'pointer_signal_resolver.dart' show PointerSignalResolver;

/// class SamplingClock
class SamplingClockMate {
  /// SamplingClock SamplingClock()
  SamplingClockMate() {}
}

/// class FlutterErrorDetailsForPointerEventDispatcher extends FlutterErrorDetails
class FlutterErrorDetailsForPointerEventDispatcherMate {
  /// FlutterErrorDetailsForPointerEventDispatcher FlutterErrorDetailsForPointerEventDispatcher({required Object exception, StackTrace? stack, String? library = 'Flutter framework', DiagnosticsNode? context, PointerEvent? event, HitTestEntry<HitTestTarget>? hitTestEntry, Iterable<DiagnosticsNode> Function()? informationCollector, bool silent = false})
  FlutterErrorDetailsForPointerEventDispatcherMate({
// param: {required Object exception}
    required Object exception,
// param: {StackTrace? stack}
    StackTrace? stack,
// param: {String? library = 'Flutter framework'}
    String? library,
// param: {DiagnosticsNode? context}
    DiagnosticsNode? context,
// param: {PointerEvent? event}
    PointerEvent? event,
// param: {HitTestEntry<HitTestTarget>? hitTestEntry}
    HitTestEntry<HitTestTarget>? hitTestEntry,
// param: {Iterable<DiagnosticsNode> Function()? informationCollector}
    Iterable<DiagnosticsNode> Function()? informationCollector,
// param: {bool silent = false}
    required bool silent,
  }) {}
}
