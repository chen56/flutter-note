// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:00.779791

library;

import 'dart:ui';
import 'package:flutter/src/gestures/gesture_settings.dart';
import 'dart:core';
export 'dart:ui' show Offset, PointerDeviceKind;
export 'arena.dart' show GestureDisposition;
export 'drag.dart' show Drag;
export 'events.dart' show PointerDownEvent;
export 'gesture_settings.dart' show DeviceGestureSettings;

/// abstract class MultiDragPointerState
abstract class MultiDragPointerStateMate {
  /// MultiDragPointerState MultiDragPointerState(Offset initialPosition, PointerDeviceKind kind, DeviceGestureSettings? gestureSettings)
  MultiDragPointerStateMate(
// param: Offset initialPosition
    Offset initialPosition,
// param: PointerDeviceKind kind
    PointerDeviceKind kind,
// param: DeviceGestureSettings? gestureSettings
    DeviceGestureSettings? gestureSettings,
  ) {}
}

/// abstract class MultiDragGestureRecognizer extends GestureRecognizer
abstract class MultiDragGestureRecognizerMate {
  /// MultiDragGestureRecognizer MultiDragGestureRecognizer({required Object? debugOwner, Set<PointerDeviceKind>? supportedDevices, bool Function(int)? allowedButtonsFilter = _defaultButtonAcceptBehavior})
  MultiDragGestureRecognizerMate({
// param: {required Object? debugOwner}
    required Object? debugOwner,
// param: {Set<PointerDeviceKind>? supportedDevices}
    Set<PointerDeviceKind>? supportedDevices,
// param: {bool Function(int)? allowedButtonsFilter = _defaultButtonAcceptBehavior}
    bool Function(
      int, [
      int,
    ])?
        allowedButtonsFilter,
  }) {}
}

/// class ImmediateMultiDragGestureRecognizer extends MultiDragGestureRecognizer
class ImmediateMultiDragGestureRecognizerMate {
  /// ImmediateMultiDragGestureRecognizer ImmediateMultiDragGestureRecognizer({Object? debugOwner, Set<PointerDeviceKind>? supportedDevices, bool Function(int)? allowedButtonsFilter = _defaultButtonAcceptBehavior})
  ImmediateMultiDragGestureRecognizerMate({
// param: {Object? debugOwner}
    Object? debugOwner,
// param: {Set<PointerDeviceKind>? supportedDevices}
    Set<PointerDeviceKind>? supportedDevices,
// param: {bool Function(int)? allowedButtonsFilter = _defaultButtonAcceptBehavior}
    bool Function(
      int, [
      int,
    ])?
        allowedButtonsFilter,
  }) {}
}

/// class HorizontalMultiDragGestureRecognizer extends MultiDragGestureRecognizer
class HorizontalMultiDragGestureRecognizerMate {
  /// HorizontalMultiDragGestureRecognizer HorizontalMultiDragGestureRecognizer({Object? debugOwner, Set<PointerDeviceKind>? supportedDevices, bool Function(int)? allowedButtonsFilter = _defaultButtonAcceptBehavior})
  HorizontalMultiDragGestureRecognizerMate({
// param: {Object? debugOwner}
    Object? debugOwner,
// param: {Set<PointerDeviceKind>? supportedDevices}
    Set<PointerDeviceKind>? supportedDevices,
// param: {bool Function(int)? allowedButtonsFilter = _defaultButtonAcceptBehavior}
    bool Function(
      int, [
      int,
    ])?
        allowedButtonsFilter,
  }) {}
}

/// class VerticalMultiDragGestureRecognizer extends MultiDragGestureRecognizer
class VerticalMultiDragGestureRecognizerMate {
  /// VerticalMultiDragGestureRecognizer VerticalMultiDragGestureRecognizer({Object? debugOwner, Set<PointerDeviceKind>? supportedDevices, bool Function(int)? allowedButtonsFilter = _defaultButtonAcceptBehavior})
  VerticalMultiDragGestureRecognizerMate({
// param: {Object? debugOwner}
    Object? debugOwner,
// param: {Set<PointerDeviceKind>? supportedDevices}
    Set<PointerDeviceKind>? supportedDevices,
// param: {bool Function(int)? allowedButtonsFilter = _defaultButtonAcceptBehavior}
    bool Function(
      int, [
      int,
    ])?
        allowedButtonsFilter,
  }) {}
}

/// class DelayedMultiDragGestureRecognizer extends MultiDragGestureRecognizer
class DelayedMultiDragGestureRecognizerMate {
  /// DelayedMultiDragGestureRecognizer DelayedMultiDragGestureRecognizer({Duration delay = kLongPressTimeout, Object? debugOwner, Set<PointerDeviceKind>? supportedDevices, bool Function(int)? allowedButtonsFilter = _defaultButtonAcceptBehavior})
  DelayedMultiDragGestureRecognizerMate({
// param: {Duration delay = kLongPressTimeout}
    required Duration delay,
// param: {Object? debugOwner}
    Object? debugOwner,
// param: {Set<PointerDeviceKind>? supportedDevices}
    Set<PointerDeviceKind>? supportedDevices,
// param: {bool Function(int)? allowedButtonsFilter = _defaultButtonAcceptBehavior}
    bool Function(
      int, [
      int,
    ])?
        allowedButtonsFilter,
  }) {}
}
