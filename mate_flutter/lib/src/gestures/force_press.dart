// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:00.755724

library;

import 'dart:ui';
import 'dart:core';
export 'dart:ui' show Offset, PointerDeviceKind;
export 'events.dart' show PointerDownEvent, PointerEvent;

/// class ForcePressDetails
class ForcePressDetailsMate {
  /// ForcePressDetails ForcePressDetails({required Offset globalPosition, Offset? localPosition, required double pressure})
  ForcePressDetailsMate({
// param: {required Offset globalPosition}
    required Offset globalPosition,
// param: {Offset? localPosition}
    Offset? localPosition,
// param: {required double pressure}
    required double pressure,
  }) {}
}

/// class ForcePressGestureRecognizer extends OneSequenceGestureRecognizer
class ForcePressGestureRecognizerMate {
  /// ForcePressGestureRecognizer ForcePressGestureRecognizer({double startPressure = 0.4, double peakPressure = 0.85, double Function(double, double, double) interpolation = _inverseLerp, Object? debugOwner, Set<PointerDeviceKind>? supportedDevices, bool Function(int)? allowedButtonsFilter})
  ForcePressGestureRecognizerMate({
// param: {double startPressure = 0.4}
    required double startPressure,
// param: {double peakPressure = 0.85}
    required double peakPressure,
// param: {double Function(double, double, double) interpolation = _inverseLerp}
    required double Function(
      double,
      double,
      double, [
      double,
      double,
      double,
    ])
        interpolation,
// param: {Object? debugOwner}
    Object? debugOwner,
// param: {Set<PointerDeviceKind>? supportedDevices}
    Set<PointerDeviceKind>? supportedDevices,
// param: {bool Function(int)? allowedButtonsFilter}
    bool Function(
      int, [
      int,
    ])?
        allowedButtonsFilter,
  }) {}
}
