// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:01.076225

library;

import 'package:flutter/src/painting/image_provider.dart';
import 'dart:core';
import 'dart:ui';
import 'package:flutter/src/painting/box_fit.dart';
import 'package:flutter/src/painting/alignment.dart';
import 'package:flutter/src/painting/decoration_image.dart';
import 'package:vector_math/vector_math_64.dart';

/// class DecorationImage
class DecorationImageMate {
  /// DecorationImage DecorationImage({required ImageProvider<Object> image, void Function(Object, StackTrace?)? onError, ColorFilter? colorFilter, BoxFit? fit, AlignmentGeometry alignment = Alignment.center, Rect? centerSlice, ImageRepeat repeat = ImageRepeat.noRepeat, bool matchTextDirection = false, double scale = 1.0, double opacity = 1.0, FilterQuality filterQuality = FilterQuality.low, bool invertColors = false, bool isAntiAlias = false})
  DecorationImageMate({
// param: {required ImageProvider<Object> image}
    required ImageProvider<Object> image,
// param: {void Function(Object, StackTrace?)? onError}
    void Function(
      Object,
      StackTrace?, [
      Object,
      StackTrace?,
    ])?
        onError,
// param: {ColorFilter? colorFilter}
    ColorFilter? colorFilter,
// param: {BoxFit? fit}
    BoxFit? fit,
// param: {AlignmentGeometry alignment = Alignment.center}
    required AlignmentGeometry alignment,
// param: {Rect? centerSlice}
    Rect? centerSlice,
// param: {ImageRepeat repeat = ImageRepeat.noRepeat}
    required ImageRepeat repeat,
// param: {bool matchTextDirection = false}
    required bool matchTextDirection,
// param: {double scale = 1.0}
    required double scale,
// param: {double opacity = 1.0}
    required double opacity,
// param: {FilterQuality filterQuality = FilterQuality.low}
    required FilterQuality filterQuality,
// param: {bool invertColors = false}
    required bool invertColors,
// param: {bool isAntiAlias = false}
    required bool isAntiAlias,
  }) {}
}

/// class DecorationImagePainter
class DecorationImagePainterMate {}

/// class ImageTilingInfo
class ImageTilingInfoMate {
  /// ImageTilingInfo ImageTilingInfo({required TileMode tmx, required TileMode tmy, required Matrix4 transform})
  ImageTilingInfoMate({
// param: {required TileMode tmx}
    required TileMode tmx,
// param: {required TileMode tmy}
    required TileMode tmy,
// param: {required Matrix4 transform}
    required Matrix4 transform,
  }) {}
}
