// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-11 00:36:14.897303

import 'package:flutter/src/painting/box_border.dart';
import 'package:flutter/src/painting/borders.dart';

/// class Border extends BoxBorder
class BorderMate extends Border {
  /// Border Border({BorderSide top = BorderSide.none, BorderSide right = BorderSide.none, BorderSide bottom = BorderSide.none, BorderSide left = BorderSide.none})
  BorderMate({
    /// param: {BorderSide top = BorderSide.none}
    required BorderSide top,

    /// param: {BorderSide right = BorderSide.none}
    required BorderSide right,

    /// param: {BorderSide bottom = BorderSide.none}
    required BorderSide bottom,

    /// param: {BorderSide left = BorderSide.none}
    required BorderSide left,
  }) : super(
          top: top,
          right: right,
          bottom: bottom,
          left: left,
        ) {}

  /// Border Border.fromBorderSide(BorderSide side)
  BorderMate.fromBorderSide(

      /// param: BorderSide side
      BorderSide side)
      : super.fromBorderSide(side) {}

  /// Border Border.symmetric({BorderSide vertical = BorderSide.none, BorderSide horizontal = BorderSide.none})
  BorderMate.symmetric({
    /// param: {BorderSide vertical = BorderSide.none}
    required BorderSide vertical,

    /// param: {BorderSide horizontal = BorderSide.none}
    required BorderSide horizontal,
  }) : super.symmetric(
          vertical: vertical,
          horizontal: horizontal,
        ) {}
}

/// class BorderDirectional extends BoxBorder
class BorderDirectionalMate extends BorderDirectional {
  /// BorderDirectional BorderDirectional({BorderSide top = BorderSide.none, BorderSide start = BorderSide.none, BorderSide end = BorderSide.none, BorderSide bottom = BorderSide.none})
  BorderDirectionalMate({
    /// param: {BorderSide top = BorderSide.none}
    required BorderSide top,

    /// param: {BorderSide start = BorderSide.none}
    required BorderSide start,

    /// param: {BorderSide end = BorderSide.none}
    required BorderSide end,

    /// param: {BorderSide bottom = BorderSide.none}
    required BorderSide bottom,
  }) : super(
          top: top,
          start: start,
          end: end,
          bottom: bottom,
        ) {}
}
