// /// Generated by mat_flutter, please don't edit! Created time: 2023-03-09 00:16:01.101635

library;

import 'package:flutter/src/services/asset_bundle.dart';
import 'dart:core';
import 'dart:ui';
import 'package:flutter/src/foundation/platform.dart';
import 'package:flutter/src/painting/image_provider.dart';
import 'dart:io';
import 'dart:typed_data';

/// class ImageConfiguration
class ImageConfigurationMate {
  /// ImageConfiguration ImageConfiguration({AssetBundle? bundle, double? devicePixelRatio, Locale? locale, TextDirection? textDirection, Size? size, TargetPlatform? platform})
  ImageConfigurationMate({
// param: {AssetBundle? bundle}
    AssetBundle? bundle,
// param: {double? devicePixelRatio}
    double? devicePixelRatio,
// param: {Locale? locale}
    Locale? locale,
// param: {TextDirection? textDirection}
    TextDirection? textDirection,
// param: {Size? size}
    Size? size,
// param: {TargetPlatform? platform}
    TargetPlatform? platform,
  }) {}
}

/// abstract class ImageProvider<T extends Object>
abstract class ImageProviderMate<T extends Object> {
  /// ImageProvider<T> ImageProvider()
  ImageProviderMate() {}
}

/// class AssetBundleImageKey
class AssetBundleImageKeyMate {
  /// AssetBundleImageKey AssetBundleImageKey({required AssetBundle bundle, required String name, required double scale})
  AssetBundleImageKeyMate({
// param: {required AssetBundle bundle}
    required AssetBundle bundle,
// param: {required String name}
    required String name,
// param: {required double scale}
    required double scale,
  }) {}
}

/// abstract class AssetBundleImageProvider extends ImageProvider<AssetBundleImageKey>
abstract class AssetBundleImageProviderMate {
  /// AssetBundleImageProvider AssetBundleImageProvider()
  AssetBundleImageProviderMate() {}
}

/// class ResizeImageKey
class ResizeImageKeyMate {}

/// class ResizeImage extends ImageProvider<ResizeImageKey>
class ResizeImageMate {
  /// ResizeImage ResizeImage(ImageProvider<Object> imageProvider, {int? width, int? height, bool allowUpscaling = false})
  ResizeImageMate(
// param: ImageProvider<Object> imageProvider
    ImageProvider<Object> imageProvider, {
// param: {int? width}
    int? width,
// param: {int? height}
    int? height,
// param: {bool allowUpscaling = false}
    required bool allowUpscaling,
  }) {}
}

/// abstract class NetworkImage extends ImageProvider<NetworkImage>
abstract class NetworkImageMate {}

/// class FileImage extends ImageProvider<FileImage>
class FileImageMate {
  /// FileImage FileImage(File file, {double scale = 1.0})
  FileImageMate(
// param: File file
    File file, {
// param: {double scale = 1.0}
    required double scale,
  }) {}
}

/// class MemoryImage extends ImageProvider<MemoryImage>
class MemoryImageMate {
  /// MemoryImage MemoryImage(Uint8List bytes, {double scale = 1.0})
  MemoryImageMate(
// param: Uint8List bytes
    Uint8List bytes, {
// param: {double scale = 1.0}
    required double scale,
  }) {}
}

/// class ExactAssetImage extends AssetBundleImageProvider
class ExactAssetImageMate {
  /// ExactAssetImage ExactAssetImage(String assetName, {double scale = 1.0, AssetBundle? bundle, String? package})
  ExactAssetImageMate(
// param: String assetName
    String assetName, {
// param: {double scale = 1.0}
    required double scale,
// param: {AssetBundle? bundle}
    AssetBundle? bundle,
// param: {String? package}
    String? package,
  }) {}
}

/// class NetworkImageLoadException implements Exception
class NetworkImageLoadExceptionMate {
  /// NetworkImageLoadException NetworkImageLoadException({required int statusCode, required Uri uri})
  NetworkImageLoadExceptionMate({
// param: {required int statusCode}
    required int statusCode,
// param: {required Uri uri}
    required Uri uri,
  }) {}
}
