// /// Generated by mate_flutter, please don't edit! Created time: 2023-03-11 00:36:14.703232

import 'package:flutter/src/services/text_editing_delta.dart';
import 'dart:core';
import 'package:flutter/src/services/text_editing.dart';
import 'dart:ui';
export 'dart:ui' show TextRange;
export 'text_editing.dart' show TextSelection;
export 'text_input.dart' show TextEditingValue;

/// abstract class TextEditingDelta with Diagnosticable
abstract class TextEditingDeltaMate extends TextEditingDelta {
  /// TextEditingDelta TextEditingDelta({required String oldText, required TextSelection selection, required TextRange composing})
  TextEditingDeltaMate({
    /// param: {required String oldText}
    required String oldText,

    /// param: {required TextSelection selection}
    required TextSelection selection,

    /// param: {required TextRange composing}
    required TextRange composing,
  }) : super(
          oldText: oldText,
          selection: selection,
          composing: composing,
        ) {}
}

/// class TextEditingDeltaInsertion extends TextEditingDelta
class TextEditingDeltaInsertionMate extends TextEditingDeltaInsertion {
  /// TextEditingDeltaInsertion TextEditingDeltaInsertion({required String oldText, required String textInserted, required int insertionOffset, required TextSelection selection, required TextRange composing})
  TextEditingDeltaInsertionMate({
    /// param: {required String oldText}
    required String oldText,

    /// param: {required String textInserted}
    required String textInserted,

    /// param: {required int insertionOffset}
    required int insertionOffset,

    /// param: {required TextSelection selection}
    required TextSelection selection,

    /// param: {required TextRange composing}
    required TextRange composing,
  }) : super(
          oldText: oldText,
          textInserted: textInserted,
          insertionOffset: insertionOffset,
          selection: selection,
          composing: composing,
        ) {}
}

/// class TextEditingDeltaDeletion extends TextEditingDelta
class TextEditingDeltaDeletionMate extends TextEditingDeltaDeletion {
  /// TextEditingDeltaDeletion TextEditingDeltaDeletion({required String oldText, required TextRange deletedRange, required TextSelection selection, required TextRange composing})
  TextEditingDeltaDeletionMate({
    /// param: {required String oldText}
    required String oldText,

    /// param: {required TextRange deletedRange}
    required TextRange deletedRange,

    /// param: {required TextSelection selection}
    required TextSelection selection,

    /// param: {required TextRange composing}
    required TextRange composing,
  }) : super(
          oldText: oldText,
          deletedRange: deletedRange,
          selection: selection,
          composing: composing,
        ) {}
}

/// class TextEditingDeltaReplacement extends TextEditingDelta
class TextEditingDeltaReplacementMate extends TextEditingDeltaReplacement {
  /// TextEditingDeltaReplacement TextEditingDeltaReplacement({required String oldText, required String replacementText, required TextRange replacedRange, required TextSelection selection, required TextRange composing})
  TextEditingDeltaReplacementMate({
    /// param: {required String oldText}
    required String oldText,

    /// param: {required String replacementText}
    required String replacementText,

    /// param: {required TextRange replacedRange}
    required TextRange replacedRange,

    /// param: {required TextSelection selection}
    required TextSelection selection,

    /// param: {required TextRange composing}
    required TextRange composing,
  }) : super(
          oldText: oldText,
          replacementText: replacementText,
          replacedRange: replacedRange,
          selection: selection,
          composing: composing,
        ) {}
}

/// class TextEditingDeltaNonTextUpdate extends TextEditingDelta
class TextEditingDeltaNonTextUpdateMate extends TextEditingDeltaNonTextUpdate {
  /// TextEditingDeltaNonTextUpdate TextEditingDeltaNonTextUpdate({required String oldText, required TextSelection selection, required TextRange composing})
  TextEditingDeltaNonTextUpdateMate({
    /// param: {required String oldText}
    required String oldText,

    /// param: {required TextSelection selection}
    required TextSelection selection,

    /// param: {required TextRange composing}
    required TextRange composing,
  }) : super(
          oldText: oldText,
          selection: selection,
          composing: composing,
        ) {}
}
